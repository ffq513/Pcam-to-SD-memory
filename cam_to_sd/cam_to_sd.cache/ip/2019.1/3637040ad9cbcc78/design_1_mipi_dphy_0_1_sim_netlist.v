// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2019.1 (win64) Build 2552052 Fri May 24 14:49:42 MDT 2019
// Date        : Sun Jul  7 03:10:54 2019
// Host        : DESKTOP-544KMV7 running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim -rename_top decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix -prefix
//               decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_ design_1_mipi_dphy_0_1_sim_netlist.v
// Design      : design_1_mipi_dphy_0_1
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z020clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* C_CAL_MODE = "VAR_LOAD" *) (* C_DIV4_CLK_PERIOD = "8.621000" *) (* C_DPHY_LANES = "2" *) 
(* C_DPHY_MODE = "SLAVE" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "1" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "928" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "1" *) (* C_INIT = "100000" *) (* C_LPX_PERIOD = "50" *) 
(* C_RCVE_DESKEW_SEQ = "false" *) (* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) 
(* C_XMIT_FIRST_DESKEW_SEQ = "false" *) (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* SUPPORT_LEVEL = "1" *) 
(* NotValidForBitStream *)
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix
   (core_clk,
    core_rst,
    dlyctrl_rdy_out,
    rxbyteclkhs,
    system_rst_out,
    init_done,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_rxp,
    clk_hs_rxn,
    data_hs_rxp,
    data_hs_rxn,
    clk_lp_rxp,
    clk_lp_rxn,
    data_lp_rxp,
    data_lp_rxn);
  input core_clk;
  input core_rst;
  output dlyctrl_rdy_out;
  output rxbyteclkhs;
  output system_rst_out;
  output init_done;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;

  wire cl_enable;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR = 0 *) wire clk_hs_rxn;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR = 0 *) wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR = 0 *) wire [1:0]data_hs_rxn;
  (* DIFF_TERM = 0 *) (* IBUF_LOW_PWR = 0 *) wire [1:0]data_hs_rxp;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dlyctrl_rdy_out;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire system_rst_out;

  (* C_CAL_MODE = "VAR_LOAD" *) 
  (* C_DIV4_CLK_PERIOD = "8.621000" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_DPHY_MODE = "SLAVE" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_REG_IF = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_ESC_CLK_PERIOD = "50.000000" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_EXAMPLE_SIMULATION = "false" *) 
  (* C_HS_LINE_RATE = "928" *) 
  (* C_HS_TIMEOUT = "65541" *) 
  (* C_IDLY_TAP = "1" *) 
  (* C_INIT = "100000" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_RCVE_DESKEW_SEQ = "false" *) 
  (* C_SKEWCAL_FIRST_TIME = "4096" *) 
  (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) 
  (* C_WAKEUP = "1000000" *) 
  (* C_XMIT_FIRST_DESKEW_SEQ = "false" *) 
  (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) 
  (* DPHY_PRESET = "None" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* SUPPORT_LEVEL = "1" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_core inst
       (.cl_enable(cl_enable),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_lp_rxn(clk_lp_rxn),
        .clk_lp_rxp(clk_lp_rxp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_lp_rxn(data_lp_rxn),
        .data_lp_rxp(data_lp_rxp),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(dl0_rxlpdtesc),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxulpsesc(dl0_rxulpsesc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(dl1_rxlpdtesc),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxulpsesc(dl1_rxulpsesc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dlyctrl_rdy_out(dlyctrl_rdy_out),
        .init_done(init_done),
        .rxbyteclkhs(rxbyteclkhs),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_c1
   (system_rst_out,
    init_done,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_stopstate,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_stopstate,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_bvalid,
    rxbyteclkhs,
    dlyctrl_rdy_out,
    core_rst,
    core_clk,
    cl_enable,
    data_lp_rxp,
    data_lp_rxn,
    dl0_forcerxmode,
    dl0_enable,
    dl1_forcerxmode,
    dl1_enable,
    clk_lp_rxp,
    clk_lp_rxn,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_bready,
    data_hs_rxp,
    data_hs_rxn,
    clk_hs_rxp,
    clk_hs_rxn);
  output system_rst_out;
  output init_done;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  output dl0_stopstate;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  output dl1_stopstate;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  output cl_rxclkactivehs;
  output cl_stopstate;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output rxbyteclkhs;
  output dlyctrl_rdy_out;
  input core_rst;
  input core_clk;
  input cl_enable;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;
  input dl0_forcerxmode;
  input dl0_enable;
  input dl1_forcerxmode;
  input dl1_enable;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_bready;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_hs_rxp;
  input clk_hs_rxn;

  wire cl_enable;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dlyctrl_rdy_out;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;

  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_support design_1_mipi_dphy_0_1_rx_support_i
       (.cl_enable(cl_enable),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_lp_rxn(clk_lp_rxn),
        .clk_lp_rxp(clk_lp_rxp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_lp_rxn(data_lp_rxn),
        .data_lp_rxp(data_lp_rxp),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(dl0_rxlpdtesc),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxulpsesc(dl0_rxulpsesc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(dl1_rxlpdtesc),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxulpsesc(dl1_rxulpsesc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dlyctrl_rdy_out(dlyctrl_rdy_out),
        .init_done(init_done),
        .rxbyteclkhs(rxbyteclkhs),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out));
endmodule

(* C_CAL_MODE = "VAR_LOAD" *) (* C_DIV4_CLK_PERIOD = "8.621000" *) (* C_DPHY_LANES = "2" *) 
(* C_DPHY_MODE = "SLAVE" *) (* C_EN_DEBUG_REGS = "0" *) (* C_EN_REG_IF = "1" *) 
(* C_EN_TIMEOUT_REGS = "0" *) (* C_ESC_CLK_PERIOD = "50.000000" *) (* C_ESC_TIMEOUT = "25600" *) 
(* C_EXAMPLE_SIMULATION = "false" *) (* C_HS_LINE_RATE = "928" *) (* C_HS_TIMEOUT = "65541" *) 
(* C_IDLY_TAP = "1" *) (* C_INIT = "100000" *) (* C_LPX_PERIOD = "50" *) 
(* C_RCVE_DESKEW_SEQ = "false" *) (* C_SKEWCAL_FIRST_TIME = "4096" *) (* C_SKEWCAL_PERIODIC_TIME = "128" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_TXPLL_CLKIN_PERIOD = "8.000000" *) (* C_WAKEUP = "1000000" *) 
(* C_XMIT_FIRST_DESKEW_SEQ = "false" *) (* C_XMIT_PERIODIC_DESKEW_SEQ = "false" *) (* DPHY_PRESET = "None" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* SUPPORT_LEVEL = "1" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_core
   (core_clk,
    core_rst,
    dlyctrl_rdy_out,
    rxbyteclkhs,
    system_rst_out,
    init_done,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid,
    clk_hs_rxp,
    clk_hs_rxn,
    data_hs_rxp,
    data_hs_rxn,
    clk_lp_rxp,
    clk_lp_rxn,
    data_lp_rxp,
    data_lp_rxn);
  input core_clk;
  input core_rst;
  output dlyctrl_rdy_out;
  output rxbyteclkhs;
  output system_rst_out;
  output init_done;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;

  wire \<const0> ;
  wire cl_enable;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dlyctrl_rdy_out;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;

  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_c1 inst
       (.cl_enable(cl_enable),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_lp_rxn(clk_lp_rxn),
        .clk_lp_rxp(clk_lp_rxp),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_lp_rxn(data_lp_rxn),
        .data_lp_rxp(data_lp_rxp),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(dl0_rxlpdtesc),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxulpsesc(dl0_rxulpsesc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(dl1_rxlpdtesc),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxulpsesc(dl1_rxulpsesc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dlyctrl_rdy_out(dlyctrl_rdy_out),
        .init_done(init_done),
        .rxbyteclkhs(rxbyteclkhs),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .system_rst_out(system_rst_out));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_design_1_mipi_dphy_0_1_support
   (system_rst_out,
    init_done,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxsynchs,
    dl0_stopstate,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxsynchs,
    dl1_stopstate,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    s_axi_awready,
    s_axi_arready,
    s_axi_wready,
    s_axi_rdata,
    s_axi_rvalid,
    s_axi_bvalid,
    rxbyteclkhs,
    dlyctrl_rdy_out,
    core_rst,
    core_clk,
    cl_enable,
    data_lp_rxp,
    data_lp_rxn,
    dl0_forcerxmode,
    dl0_enable,
    dl1_forcerxmode,
    dl1_enable,
    clk_lp_rxp,
    clk_lp_rxn,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_bready,
    data_hs_rxp,
    data_hs_rxn,
    clk_hs_rxp,
    clk_hs_rxn);
  output system_rst_out;
  output init_done;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxsynchs;
  output dl0_stopstate;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxsynchs;
  output dl1_stopstate;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  output cl_rxclkactivehs;
  output cl_stopstate;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output s_axi_awready;
  output s_axi_arready;
  output s_axi_wready;
  output [31:0]s_axi_rdata;
  output s_axi_rvalid;
  output s_axi_bvalid;
  output rxbyteclkhs;
  output dlyctrl_rdy_out;
  input core_rst;
  input core_clk;
  input cl_enable;
  input [1:0]data_lp_rxp;
  input [1:0]data_lp_rxn;
  input dl0_forcerxmode;
  input dl0_enable;
  input dl1_forcerxmode;
  input dl1_enable;
  input clk_lp_rxp;
  input clk_lp_rxn;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [4:0]s_axi_araddr;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_bready;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_hs_rxp;
  input clk_hs_rxn;

  wire cl_enable;
  wire cl_enable_sync;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire clk_lp_rxn;
  wire clk_lp_rxp;
  wire core_clk;
  wire core_rst;
  wire core_rst_coreclk_sync;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [15:0]data_in_to_device_w;
  wire [1:0]data_lp_rxn;
  wire [1:0]data_lp_rxp;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dlyctrl_rdy_out;
  wire dphy_en_w;
  wire dphy_srst_w;
  wire init_done;
  wire rxbyteclkhs;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire system_rst_out;
  wire \NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED ;
  wire \NLW_slave_rx.design_1_mipi_dphy_0_1_rx_phy_i_pass_in_rst_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_bit_slc_rst_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_calib_status_l0_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_calib_status_l1_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_calib_status_l2_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_calib_status_l3_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl0_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl1_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl4_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl5_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl6_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_errcontrol_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_erresc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_errsoths_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_errsotsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_errsyncesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxactivehs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxclkesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxlpdtesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxskewcalhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxsynchs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxulpsesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxvalidesc_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_rxvalidhs_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_stopstate_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_dl7_ulpsactivenot_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l0_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l1_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l2_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l3_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l0_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l1_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l2_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l3_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl4_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl4_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl4_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl4_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl5_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl5_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl5_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl5_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl6_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl6_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl6_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl6_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl7_disable_ibuf_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl7_en_hs_lpn_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl7_fifo_rd_clk_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_rx_dl7_fifo_rd_en_UNCONNECTED ;
  wire \NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl4_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl4_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl4_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl5_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl5_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl5_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl6_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl6_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl6_rxtriggeresc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl7_rxdataesc_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_dl7_rxdatahs_UNCONNECTED ;
  wire [3:0]\NLW_slave_rx.dphy_rx_fab_top_dl7_rxtriggeresc_UNCONNECTED ;
  wire [8:0]\NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED ;
  wire [5:0]\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l0_UNCONNECTED ;
  wire [5:0]\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l1_UNCONNECTED ;
  wire [5:0]\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l2_UNCONNECTED ;
  wire [5:0]\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l3_UNCONNECTED ;
  wire [15:0]\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l0_UNCONNECTED ;
  wire [15:0]\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l1_UNCONNECTED ;
  wire [15:0]\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l2_UNCONNECTED ;
  wire [15:0]\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l3_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED ;
  wire [1:0]\NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED ;
  wire [7:0]\NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED ;
  wire [63:0]\NLW_slave_rx.dphy_rx_fab_top_tap_val_dyn_out_UNCONNECTED ;
  wire \NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED ;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__1 \slave_rx.cl_enable_sync_support_i 
       (.prmry_ack(\NLW_slave_rx.cl_enable_sync_support_i_prmry_ack_UNCONNECTED ),
        .prmry_aclk(1'b0),
        .prmry_in(cl_enable),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(cl_enable_sync),
        .scndry_rst_n(1'b1),
        .scndry_vect_out(\NLW_slave_rx.cl_enable_sync_support_i_scndry_vect_out_UNCONNECTED [1:0]));
  (* C_DDR_CLK_PERIOD = "2.155000" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_EN_CLK300M = "FALSE" *) 
  (* C_IDLY_GRP_NAME = "mipi_dphy_idly_group" *) 
  (* C_LINE_RATE = "16'b0000100100101000" *) 
  (* C_SHARE_IDLYCTRL = "true" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* REF_FREQ = "200.000000" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_phy_7series \slave_rx.design_1_mipi_dphy_0_1_rx_phy_i 
       (.clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .clk_reset(1'b0),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_in_to_device(data_in_to_device_w),
        .div4_clk_out(rxbyteclkhs),
        .dlyctrl_rdy(dlyctrl_rdy_out),
        .dlyctrl_rdy_in(1'b0),
        .idelay_ctrl_clk_in(core_clk),
        .io_reset(1'b0),
        .pass_in_rst(\NLW_slave_rx.design_1_mipi_dphy_0_1_rx_phy_i_pass_in_rst_UNCONNECTED ),
        .rx_clk_active(1'b0),
        .system_reset(system_rst_out),
        .system_rst_byteclk(1'b0),
        .tap_val_pass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}));
  (* BYTE_UI = "8" *) 
  (* CL_ACTIVE_BYTE_UI = "1" *) 
  (* C_CAL_MODE = "VAR_LOAD" *) 
  (* C_CLK_PREPARE_VAL = "40" *) 
  (* C_CLK_SETTLE_VAL = "95" *) 
  (* C_CLK_TERMEN_VAL = "38" *) 
  (* C_CLK_ZERO_VAL = "205" *) 
  (* C_COMP_CYCLES = "5" *) 
  (* C_DPHY_LANES = "2" *) 
  (* C_DPHY_MODE = "SLAVE" *) 
  (* C_D_TERMEN_VAL = "35" *) 
  (* C_EN_DEBUG_REGS = "0" *) 
  (* C_EN_REGISTER = "1" *) 
  (* C_EN_TIMEOUT_REGS = "0" *) 
  (* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) 
  (* C_ESC_TIMEOUT = "25600" *) 
  (* C_HS_LINE_RATE = "928" *) 
  (* C_HS_RX_TIMEOUT = "65541" *) 
  (* C_HS_SETTLE_VAL = "145" *) 
  (* C_HS_SKIP_VAL = "40" *) 
  (* C_IDLY_TAP = "1" *) 
  (* C_INIT = "100000" *) 
  (* C_IO_ADDR = "8'b00010100" *) 
  (* C_IS_7SERIES = "TRUE" *) 
  (* C_LPX_PERIOD = "50" *) 
  (* C_NO_INCR_TAPS = "2" *) 
  (* C_RCVE_DESKEW_SEQ = "false" *) 
  (* C_STABLE_CLK_PERIOD = "5.000000" *) 
  (* C_UI_IN_TAPS = "64" *) 
  (* C_WAKEUP = "1000000" *) 
  (* DPHY_PRESET = "None" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* INIT_TIMEOUT_L = "19998" *) 
  (* LPX_PERIOD_MIN = "25" *) 
  (* LP_STATE_CNT = "2" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* RESET_PULSE_EXTN = "4'b0001" *) 
  (* SETTLE_TIMEOUT_L = "24" *) 
  (* SUPPORT_LEVEL = "1" *) 
  (* UI10_VAL = "10" *) 
  (* UI_VAL = "1077" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_fab_top \slave_rx.dphy_rx_fab_top 
       (.bit_slc_rst(\NLW_slave_rx.dphy_rx_fab_top_bit_slc_rst_UNCONNECTED ),
        .cal_done(1'b0),
        .cal_pass(1'b0),
        .calib_status_l0(\NLW_slave_rx.dphy_rx_fab_top_calib_status_l0_UNCONNECTED ),
        .calib_status_l1(\NLW_slave_rx.dphy_rx_fab_top_calib_status_l1_UNCONNECTED ),
        .calib_status_l2(\NLW_slave_rx.dphy_rx_fab_top_calib_status_l2_UNCONNECTED ),
        .calib_status_l3(\NLW_slave_rx.dphy_rx_fab_top_calib_status_l3_UNCONNECTED ),
        .cl_enable(cl_enable_sync),
        .cl_rxclkactivehs(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .clk_200m(1'b0),
        .core_clk(core_clk),
        .core_ref_clk(\NLW_slave_rx.dphy_rx_fab_top_core_ref_clk_UNCONNECTED ),
        .core_rst(core_rst_coreclk_sync),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxactivehs(dl0_rxactivehs),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxlpdtesc(dl0_rxlpdtesc),
        .dl0_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl0_rxskewcalhs_UNCONNECTED ),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxulpsesc(dl0_rxulpsesc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_rxvalidhs(dl0_rxvalidhs),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxactivehs(dl1_rxactivehs),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxlpdtesc(dl1_rxlpdtesc),
        .dl1_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl1_rxskewcalhs_UNCONNECTED ),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxulpsesc(dl1_rxulpsesc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl2_enable(1'b0),
        .dl2_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl2_errcontrol_UNCONNECTED ),
        .dl2_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl2_erresc_UNCONNECTED ),
        .dl2_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsoths_UNCONNECTED ),
        .dl2_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsotsynchs_UNCONNECTED ),
        .dl2_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_errsyncesc_UNCONNECTED ),
        .dl2_forcerxmode(1'b0),
        .dl2_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxactivehs_UNCONNECTED ),
        .dl2_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxclkesc_UNCONNECTED ),
        .dl2_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdataesc_UNCONNECTED [7:0]),
        .dl2_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxdatahs_UNCONNECTED [7:0]),
        .dl2_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxlpdtesc_UNCONNECTED ),
        .dl2_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxskewcalhs_UNCONNECTED ),
        .dl2_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxsynchs_UNCONNECTED ),
        .dl2_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxtriggeresc_UNCONNECTED [3:0]),
        .dl2_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxulpsesc_UNCONNECTED ),
        .dl2_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidesc_UNCONNECTED ),
        .dl2_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl2_rxvalidhs_UNCONNECTED ),
        .dl2_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl2_stopstate_UNCONNECTED ),
        .dl2_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl2_ulpsactivenot_UNCONNECTED ),
        .dl3_enable(1'b0),
        .dl3_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl3_errcontrol_UNCONNECTED ),
        .dl3_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl3_erresc_UNCONNECTED ),
        .dl3_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsoths_UNCONNECTED ),
        .dl3_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsotsynchs_UNCONNECTED ),
        .dl3_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_errsyncesc_UNCONNECTED ),
        .dl3_forcerxmode(1'b0),
        .dl3_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxactivehs_UNCONNECTED ),
        .dl3_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxclkesc_UNCONNECTED ),
        .dl3_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdataesc_UNCONNECTED [7:0]),
        .dl3_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxdatahs_UNCONNECTED [7:0]),
        .dl3_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxlpdtesc_UNCONNECTED ),
        .dl3_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxskewcalhs_UNCONNECTED ),
        .dl3_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxsynchs_UNCONNECTED ),
        .dl3_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxtriggeresc_UNCONNECTED [3:0]),
        .dl3_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxulpsesc_UNCONNECTED ),
        .dl3_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidesc_UNCONNECTED ),
        .dl3_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl3_rxvalidhs_UNCONNECTED ),
        .dl3_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl3_stopstate_UNCONNECTED ),
        .dl3_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl3_ulpsactivenot_UNCONNECTED ),
        .dl4_enable(1'b0),
        .dl4_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl4_errcontrol_UNCONNECTED ),
        .dl4_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl4_erresc_UNCONNECTED ),
        .dl4_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl4_errsoths_UNCONNECTED ),
        .dl4_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl4_errsotsynchs_UNCONNECTED ),
        .dl4_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_errsyncesc_UNCONNECTED ),
        .dl4_forcerxmode(1'b0),
        .dl4_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxactivehs_UNCONNECTED ),
        .dl4_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxclkesc_UNCONNECTED ),
        .dl4_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxdataesc_UNCONNECTED [7:0]),
        .dl4_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxdatahs_UNCONNECTED [7:0]),
        .dl4_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxlpdtesc_UNCONNECTED ),
        .dl4_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxskewcalhs_UNCONNECTED ),
        .dl4_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxsynchs_UNCONNECTED ),
        .dl4_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxtriggeresc_UNCONNECTED [3:0]),
        .dl4_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxulpsesc_UNCONNECTED ),
        .dl4_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxvalidesc_UNCONNECTED ),
        .dl4_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl4_rxvalidhs_UNCONNECTED ),
        .dl4_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl4_stopstate_UNCONNECTED ),
        .dl4_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl4_ulpsactivenot_UNCONNECTED ),
        .dl5_enable(1'b0),
        .dl5_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl5_errcontrol_UNCONNECTED ),
        .dl5_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl5_erresc_UNCONNECTED ),
        .dl5_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl5_errsoths_UNCONNECTED ),
        .dl5_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl5_errsotsynchs_UNCONNECTED ),
        .dl5_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_errsyncesc_UNCONNECTED ),
        .dl5_forcerxmode(1'b0),
        .dl5_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxactivehs_UNCONNECTED ),
        .dl5_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxclkesc_UNCONNECTED ),
        .dl5_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxdataesc_UNCONNECTED [7:0]),
        .dl5_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxdatahs_UNCONNECTED [7:0]),
        .dl5_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxlpdtesc_UNCONNECTED ),
        .dl5_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxskewcalhs_UNCONNECTED ),
        .dl5_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxsynchs_UNCONNECTED ),
        .dl5_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxtriggeresc_UNCONNECTED [3:0]),
        .dl5_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxulpsesc_UNCONNECTED ),
        .dl5_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxvalidesc_UNCONNECTED ),
        .dl5_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl5_rxvalidhs_UNCONNECTED ),
        .dl5_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl5_stopstate_UNCONNECTED ),
        .dl5_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl5_ulpsactivenot_UNCONNECTED ),
        .dl6_enable(1'b0),
        .dl6_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl6_errcontrol_UNCONNECTED ),
        .dl6_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl6_erresc_UNCONNECTED ),
        .dl6_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl6_errsoths_UNCONNECTED ),
        .dl6_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl6_errsotsynchs_UNCONNECTED ),
        .dl6_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_errsyncesc_UNCONNECTED ),
        .dl6_forcerxmode(1'b0),
        .dl6_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxactivehs_UNCONNECTED ),
        .dl6_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxclkesc_UNCONNECTED ),
        .dl6_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxdataesc_UNCONNECTED [7:0]),
        .dl6_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxdatahs_UNCONNECTED [7:0]),
        .dl6_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxlpdtesc_UNCONNECTED ),
        .dl6_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxskewcalhs_UNCONNECTED ),
        .dl6_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxsynchs_UNCONNECTED ),
        .dl6_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxtriggeresc_UNCONNECTED [3:0]),
        .dl6_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxulpsesc_UNCONNECTED ),
        .dl6_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxvalidesc_UNCONNECTED ),
        .dl6_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl6_rxvalidhs_UNCONNECTED ),
        .dl6_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl6_stopstate_UNCONNECTED ),
        .dl6_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl6_ulpsactivenot_UNCONNECTED ),
        .dl7_enable(1'b0),
        .dl7_errcontrol(\NLW_slave_rx.dphy_rx_fab_top_dl7_errcontrol_UNCONNECTED ),
        .dl7_erresc(\NLW_slave_rx.dphy_rx_fab_top_dl7_erresc_UNCONNECTED ),
        .dl7_errsoths(\NLW_slave_rx.dphy_rx_fab_top_dl7_errsoths_UNCONNECTED ),
        .dl7_errsotsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl7_errsotsynchs_UNCONNECTED ),
        .dl7_errsyncesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_errsyncesc_UNCONNECTED ),
        .dl7_forcerxmode(1'b0),
        .dl7_rxactivehs(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxactivehs_UNCONNECTED ),
        .dl7_rxclkesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxclkesc_UNCONNECTED ),
        .dl7_rxdataesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxdataesc_UNCONNECTED [7:0]),
        .dl7_rxdatahs(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxdatahs_UNCONNECTED [7:0]),
        .dl7_rxlpdtesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxlpdtesc_UNCONNECTED ),
        .dl7_rxskewcalhs(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxskewcalhs_UNCONNECTED ),
        .dl7_rxsynchs(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxsynchs_UNCONNECTED ),
        .dl7_rxtriggeresc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxtriggeresc_UNCONNECTED [3:0]),
        .dl7_rxulpsesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxulpsesc_UNCONNECTED ),
        .dl7_rxvalidesc(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxvalidesc_UNCONNECTED ),
        .dl7_rxvalidhs(\NLW_slave_rx.dphy_rx_fab_top_dl7_rxvalidhs_UNCONNECTED ),
        .dl7_stopstate(\NLW_slave_rx.dphy_rx_fab_top_dl7_stopstate_UNCONNECTED ),
        .dl7_ulpsactivenot(\NLW_slave_rx.dphy_rx_fab_top_dl7_ulpsactivenot_UNCONNECTED ),
        .dly_ctrl_rdy(1'b0),
        .dphy_en_out(dphy_en_w),
        .dphy_srst_out(dphy_srst_w),
        .idelay_load(\NLW_slave_rx.dphy_rx_fab_top_idelay_load_UNCONNECTED ),
        .idelay_ready(1'b0),
        .idelay_tap_value(\NLW_slave_rx.dphy_rx_fab_top_idelay_tap_value_UNCONNECTED [8:0]),
        .idly_tap_val({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .init_done(init_done),
        .phy_ready(1'b1),
        .phy_rst(\NLW_slave_rx.dphy_rx_fab_top_phy_rst_UNCONNECTED ),
        .reg_cal_start(\NLW_slave_rx.dphy_rx_fab_top_reg_cal_start_UNCONNECTED ),
        .riu_addr_l0(\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l0_UNCONNECTED [5:0]),
        .riu_addr_l1(\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l1_UNCONNECTED [5:0]),
        .riu_addr_l2(\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l2_UNCONNECTED [5:0]),
        .riu_addr_l3(\NLW_slave_rx.dphy_rx_fab_top_riu_addr_l3_UNCONNECTED [5:0]),
        .riu_nibble_sel_l0(\NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l0_UNCONNECTED ),
        .riu_nibble_sel_l1(\NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l1_UNCONNECTED ),
        .riu_nibble_sel_l2(\NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l2_UNCONNECTED ),
        .riu_nibble_sel_l3(\NLW_slave_rx.dphy_rx_fab_top_riu_nibble_sel_l3_UNCONNECTED ),
        .riu_rd_data_l0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_rd_data_l1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_rd_data_l2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_rd_data_l3({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .riu_valid_l0(1'b0),
        .riu_valid_l1(1'b0),
        .riu_valid_l2(1'b0),
        .riu_valid_l3(1'b0),
        .riu_wr_data_l0(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l0_UNCONNECTED [15:0]),
        .riu_wr_data_l1(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l1_UNCONNECTED [15:0]),
        .riu_wr_data_l2(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l2_UNCONNECTED [15:0]),
        .riu_wr_data_l3(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_data_l3_UNCONNECTED [15:0]),
        .riu_wr_en_l0(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l0_UNCONNECTED ),
        .riu_wr_en_l1(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l1_UNCONNECTED ),
        .riu_wr_en_l2(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l2_UNCONNECTED ),
        .riu_wr_en_l3(\NLW_slave_rx.dphy_rx_fab_top_riu_wr_en_l3_UNCONNECTED ),
        .rx_cl_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_disable_ibuf_UNCONNECTED ),
        .rx_cl_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_en_hs_lpn_UNCONNECTED ),
        .rx_cl_fifo_empty(1'b0),
        .rx_cl_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_clk_UNCONNECTED ),
        .rx_cl_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_cl_fifo_rd_en_UNCONNECTED ),
        .rx_cl_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_cl_lp_dn(clk_lp_rxn),
        .rx_cl_lp_dp(clk_lp_rxp),
        .rx_div4_clk(rxbyteclkhs),
        .rx_dl0_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_disable_ibuf_UNCONNECTED ),
        .rx_dl0_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_en_hs_lpn_UNCONNECTED ),
        .rx_dl0_fifo_empty(1'b0),
        .rx_dl0_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_clk_UNCONNECTED ),
        .rx_dl0_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl0_fifo_rd_en_UNCONNECTED ),
        .rx_dl0_hs_dp(data_in_to_device_w[7:0]),
        .rx_dl0_lp_dn(data_lp_rxn[0]),
        .rx_dl0_lp_dp(data_lp_rxp[0]),
        .rx_dl1_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_disable_ibuf_UNCONNECTED ),
        .rx_dl1_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_en_hs_lpn_UNCONNECTED ),
        .rx_dl1_fifo_empty(1'b0),
        .rx_dl1_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_clk_UNCONNECTED ),
        .rx_dl1_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl1_fifo_rd_en_UNCONNECTED ),
        .rx_dl1_hs_dp(data_in_to_device_w[15:8]),
        .rx_dl1_lp_dn(data_lp_rxn[1]),
        .rx_dl1_lp_dp(data_lp_rxp[1]),
        .rx_dl2_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_disable_ibuf_UNCONNECTED ),
        .rx_dl2_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_en_hs_lpn_UNCONNECTED ),
        .rx_dl2_fifo_empty(1'b0),
        .rx_dl2_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_clk_UNCONNECTED ),
        .rx_dl2_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl2_fifo_rd_en_UNCONNECTED ),
        .rx_dl2_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl2_lp_dn(1'b0),
        .rx_dl2_lp_dp(1'b0),
        .rx_dl3_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_disable_ibuf_UNCONNECTED ),
        .rx_dl3_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_en_hs_lpn_UNCONNECTED ),
        .rx_dl3_fifo_empty(1'b0),
        .rx_dl3_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_clk_UNCONNECTED ),
        .rx_dl3_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl3_fifo_rd_en_UNCONNECTED ),
        .rx_dl3_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl3_lp_dn(1'b0),
        .rx_dl3_lp_dp(1'b0),
        .rx_dl4_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl4_disable_ibuf_UNCONNECTED ),
        .rx_dl4_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl4_en_hs_lpn_UNCONNECTED ),
        .rx_dl4_fifo_empty(1'b0),
        .rx_dl4_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl4_fifo_rd_clk_UNCONNECTED ),
        .rx_dl4_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl4_fifo_rd_en_UNCONNECTED ),
        .rx_dl4_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl4_lp_dn(1'b0),
        .rx_dl4_lp_dp(1'b0),
        .rx_dl5_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl5_disable_ibuf_UNCONNECTED ),
        .rx_dl5_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl5_en_hs_lpn_UNCONNECTED ),
        .rx_dl5_fifo_empty(1'b0),
        .rx_dl5_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl5_fifo_rd_clk_UNCONNECTED ),
        .rx_dl5_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl5_fifo_rd_en_UNCONNECTED ),
        .rx_dl5_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl5_lp_dn(1'b0),
        .rx_dl5_lp_dp(1'b0),
        .rx_dl6_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl6_disable_ibuf_UNCONNECTED ),
        .rx_dl6_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl6_en_hs_lpn_UNCONNECTED ),
        .rx_dl6_fifo_empty(1'b0),
        .rx_dl6_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl6_fifo_rd_clk_UNCONNECTED ),
        .rx_dl6_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl6_fifo_rd_en_UNCONNECTED ),
        .rx_dl6_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl6_lp_dn(1'b0),
        .rx_dl6_lp_dp(1'b0),
        .rx_dl7_disable_ibuf(\NLW_slave_rx.dphy_rx_fab_top_rx_dl7_disable_ibuf_UNCONNECTED ),
        .rx_dl7_en_hs_lpn(\NLW_slave_rx.dphy_rx_fab_top_rx_dl7_en_hs_lpn_UNCONNECTED ),
        .rx_dl7_fifo_empty(1'b0),
        .rx_dl7_fifo_rd_clk(\NLW_slave_rx.dphy_rx_fab_top_rx_dl7_fifo_rd_clk_UNCONNECTED ),
        .rx_dl7_fifo_rd_en(\NLW_slave_rx.dphy_rx_fab_top_rx_dl7_fifo_rd_en_UNCONNECTED ),
        .rx_dl7_hs_dp({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rx_dl7_lp_dn(1'b0),
        .rx_dl7_lp_dp(1'b0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr({s_axi_araddr,1'b0,1'b0}),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr({s_axi_awaddr,1'b0,1'b0}),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(\NLW_slave_rx.dphy_rx_fab_top_s_axi_bresp_UNCONNECTED [1:0]),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(\NLW_slave_rx.dphy_rx_fab_top_s_axi_rresp_UNCONNECTED [1:0]),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wvalid(s_axi_wvalid),
        .sys_rst_byteclk_out(\NLW_slave_rx.dphy_rx_fab_top_sys_rst_byteclk_out_UNCONNECTED ),
        .system_rst_byteclk_in(1'b0),
        .system_rst_in(system_rst_out),
        .system_rst_phybyteclk_in(1'b0),
        .tap_comp_res(\NLW_slave_rx.dphy_rx_fab_top_tap_comp_res_UNCONNECTED [7:0]),
        .tap_comp_rst(1'b0),
        .tap_val_dyn_out(\NLW_slave_rx.dphy_rx_fab_top_tap_val_dyn_out_UNCONNECTED [63:0]));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__1 \slave_rx.u_core_rst_coreclk_sync_rx_i 
       (.prmry_in(core_rst),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_coreclk_sync));
  (* DPHY_PRESET = "None" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* MTBF_SYNC_STAGES = "3" *) 
  (* RESET_FSM_DONE = "2'b10" *) 
  (* RST_BEGIN = "2'b00" *) 
  (* STABLE_CLK_PERIOD = "5.000000" *) 
  (* WAIT_FOR_ENABLE = "2'b01" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_logic_7series \slave_rx.u_rx_rst_logic_7series 
       (.cl_enable(1'b0),
        .core_clk(core_clk),
        .core_rst(core_rst_coreclk_sync),
        .dphyen(dphy_en_w),
        .srst(dphy_srst_w),
        .system_rst(system_rst_out),
        .system_rst_byteclk(\NLW_slave_rx.u_rx_rst_logic_7series_system_rst_byteclk_UNCONNECTED ));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_dly_ctrl_wrap
   (Q,
    \s_delay_val_int_reg[4]_0 ,
    data_in_to_device,
    p_12_in,
    CLK,
    not_rx_lckd_intd4,
    \m_delay_val_int_reg[4]_0 ,
    p_22_out,
    D,
    p_23_out,
    p_24_out,
    p_25_out,
    p_26_out,
    p_27_out,
    p_28_out,
    p_29_out);
  output [4:0]Q;
  output [4:0]\s_delay_val_int_reg[4]_0 ;
  output [7:0]data_in_to_device;
  input p_12_in;
  input CLK;
  input not_rx_lckd_intd4;
  input [4:0]\m_delay_val_int_reg[4]_0 ;
  input p_22_out;
  input [7:0]D;
  input p_23_out;
  input p_24_out;
  input p_25_out;
  input p_26_out;
  input p_27_out;
  input p_28_out;
  input p_29_out;

  wire CLK;
  wire [7:0]D;
  wire [4:0]Q;
  wire [1:0]action;
  wire \action[0]_i_2_n_0 ;
  wire \action[0]_i_3_n_0 ;
  wire \action[1]_i_2_n_0 ;
  wire \action[1]_i_3_n_0 ;
  wire \action_reg_n_0_[0] ;
  wire [7:0]data_in_to_device;
  wire data_mux_i_1_n_0;
  wire data_mux_i_2_n_0;
  wire data_mux_i_3_n_0;
  wire data_mux_reg_n_0;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire dec_run;
  wire dec_run_i_1_n_0;
  wire dec_run_i_3_n_0;
  wire dec_run_reg_n_0;
  wire delay_change_i_1_n_0;
  wire delay_change_reg_n_0;
  wire inc_run_i_1_n_0;
  wire inc_run_reg_n_0;
  wire \m_delay_mux[0]_i_1_n_0 ;
  wire \m_delay_mux[0]_i_2_n_0 ;
  wire \m_delay_mux[1]_i_1_n_0 ;
  wire \m_delay_mux[1]_i_2_n_0 ;
  wire [1:0]m_delay_mux__0;
  wire m_delay_val_int146_out__0;
  wire m_delay_val_int1__0;
  wire \m_delay_val_int[0]_i_1_n_0 ;
  wire \m_delay_val_int[1]_i_1_n_0 ;
  wire \m_delay_val_int[1]_i_2_n_0 ;
  wire \m_delay_val_int[2]_i_1_n_0 ;
  wire \m_delay_val_int[2]_i_2_n_0 ;
  wire \m_delay_val_int[3]_i_1_n_0 ;
  wire \m_delay_val_int[3]_i_2_n_0 ;
  wire \m_delay_val_int[3]_i_3_n_0 ;
  wire \m_delay_val_int[4]_i_1_n_0 ;
  wire \m_delay_val_int[4]_i_2_n_0 ;
  wire \m_delay_val_int[4]_i_8_n_0 ;
  wire \m_delay_val_int[4]_i_9_n_0 ;
  wire m_delay_val_int__19;
  wire [4:0]\m_delay_val_int_reg[4]_0 ;
  wire \mdataouta_reg_n_0_[0] ;
  wire mdataoutb;
  wire [7:0]mdataoutc;
  wire \mdataoutc[0]_i_1_n_0 ;
  wire \mdataoutc[1]_i_1_n_0 ;
  wire \mdataoutc[2]_i_1_n_0 ;
  wire \mdataoutc[3]_i_1_n_0 ;
  wire \mdataoutc[4]_i_1_n_0 ;
  wire \mdataoutc[5]_i_1_n_0 ;
  wire \mdataoutc[6]_i_1_n_0 ;
  wire \mdataoutc[7]_i_1_n_0 ;
  wire meq_max;
  wire meq_max0;
  wire meq_min_i_1_n_0;
  wire meq_min_i_2_n_0;
  wire meq_min_reg_n_0;
  wire [1:0]msxor_ctd;
  wire \msxor_ctd[0]_i_1_n_0 ;
  wire \msxor_ctd[1]_i_1_n_0 ;
  wire [1:0]msxor_ctdx;
  wire \msxor_ctdx[0]_i_1_n_0 ;
  wire \msxor_ctdx[1]_i_1_n_0 ;
  wire [1:0]msxor_cti;
  wire \msxor_cti[0]_i_1_n_0 ;
  wire \msxor_cti[1]_i_1_n_0 ;
  wire [1:0]msxor_ctix;
  wire \msxor_ctix[0]_i_1_n_0 ;
  wire \msxor_ctix[1]_i_1_n_0 ;
  wire msxorda016_out__8;
  wire msxorda025_out__8;
  wire msxorda034_out__8;
  wire msxorda043_out__8;
  wire msxorda052_out__8;
  wire msxorda061_out__8;
  wire msxorda070_out__8;
  wire msxorda0__8;
  wire msxoria0102_out__8;
  wire msxoria0111_out__8;
  wire msxoria0120_out__8;
  wire msxoria0129_out__8;
  wire msxoria0138_out__8;
  wire msxoria084_out__8;
  wire msxoria093_out__8;
  wire msxoria0__8;
  wire not_rx_lckd_intd4;
  wire p_0_in;
  wire p_0_in104_in;
  wire p_0_in116_in;
  wire p_0_in128_in;
  wire p_0_in140_in;
  wire p_0_in14_in;
  wire p_0_in17_in;
  wire [7:1]p_0_in1_in;
  wire p_0_in21_in;
  wire p_0_in25_in;
  wire p_0_in29_in;
  wire p_0_in33_in;
  wire p_0_in37_in;
  wire p_0_in47_in;
  wire p_0_in68_in;
  wire p_0_in80_in;
  wire p_0_in92_in;
  wire p_12_in;
  wire [3:1]p_1_in;
  wire p_22_out;
  wire p_23_out;
  wire p_24_out;
  wire p_25_out;
  wire p_26_out;
  wire p_27_out;
  wire p_28_out;
  wire p_29_out;
  wire \pd_hold[1]_i_1_n_0 ;
  wire \pd_hold[2]_i_1_n_0 ;
  wire \pd_hold[3]_i_1_n_0 ;
  wire \pd_hold[4]_i_1_n_0 ;
  wire \pd_hold[5]_i_1_n_0 ;
  wire \pd_hold[6]_i_1_n_0 ;
  wire \pd_hold[7]_i_1_n_0 ;
  wire \pd_hold[7]_i_2_n_0 ;
  wire pd_max;
  wire pd_max0;
  wire pd_max242_in;
  wire pd_min;
  wire pd_min0;
  wire pd_min241_in;
  wire pdcount1;
  wire \pdcount[0]_i_1_n_0 ;
  wire \pdcount[1]_i_1_n_0 ;
  wire \pdcount[2]_i_1_n_0 ;
  wire \pdcount[3]_i_1_n_0 ;
  wire \pdcount[4]_i_1_n_0 ;
  wire \pdcount[5]_i_1_n_0 ;
  wire \pdcount[5]_i_2_n_0 ;
  wire \pdcount[5]_i_3_n_0 ;
  wire \pdcount[5]_i_4_n_0 ;
  wire \pdcount[5]_i_5_n_0 ;
  wire [5:0]pdcount_reg;
  wire \s_delay_mux[0]_i_1_n_0 ;
  wire \s_delay_mux[1]_i_1_n_0 ;
  wire \s_delay_mux[1]_i_2_n_0 ;
  wire \s_delay_mux[1]_i_3_n_0 ;
  wire [1:0]s_delay_mux__0;
  wire s_delay_val_int0;
  wire \s_delay_val_int[0]_i_1__0_n_0 ;
  wire \s_delay_val_int[1]_i_1_n_0 ;
  wire \s_delay_val_int[2]_i_1__0_n_0 ;
  wire \s_delay_val_int[2]_i_2_n_0 ;
  wire \s_delay_val_int[3]_i_1__0_n_0 ;
  wire \s_delay_val_int[3]_i_2_n_0 ;
  wire \s_delay_val_int[4]_i_2__0_n_0 ;
  wire \s_delay_val_int[4]_i_3_n_0 ;
  wire \s_delay_val_int[4]_i_4_n_0 ;
  wire [4:0]\s_delay_val_int_reg[4]_0 ;
  wire s_ovflw1;
  wire s_ovflw12_out;
  wire s_ovflw_i_1_n_0;
  wire s_ovflw_reg_n_0;
  wire [3:0]s_state;
  wire [0:0]s_state0;
  wire \s_state[3]_i_1_n_0 ;
  wire [7:0]sdataout_0;
  wire \sdataouta_reg_n_0_[0] ;
  wire sdataoutb;
  wire [7:0]sdataoutc;
  wire \sdataoutc[0]_i_1_n_0 ;
  wire \sdataoutc[1]_i_1_n_0 ;
  wire \sdataoutc[2]_i_1_n_0 ;
  wire \sdataoutc[3]_i_1_n_0 ;
  wire \sdataoutc[4]_i_1_n_0 ;
  wire \sdataoutc[5]_i_1_n_0 ;
  wire \sdataoutc[6]_i_1_n_0 ;
  wire \sdataoutc[7]_i_1_n_0 ;

  LUT6 #(
    .INIT(64'h8EEF088E8EEF0008)) 
    \action[0]_i_1 
       (.I0(msxor_cti[1]),
        .I1(msxor_ctix[1]),
        .I2(msxor_ctd[1]),
        .I3(msxor_ctdx[1]),
        .I4(\action[0]_i_2_n_0 ),
        .I5(\action[0]_i_3_n_0 ),
        .O(action[0]));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'h088E)) 
    \action[0]_i_2 
       (.I0(msxor_cti[0]),
        .I1(msxor_ctix[0]),
        .I2(msxor_ctd[0]),
        .I3(msxor_ctdx[0]),
        .O(\action[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \action[0]_i_3 
       (.I0(msxor_ctix[0]),
        .I1(msxor_cti[0]),
        .I2(msxor_ctdx[0]),
        .I3(msxor_ctd[0]),
        .O(\action[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hCEEF0CCE0CCE000C)) 
    \action[1]_i_1 
       (.I0(\action[1]_i_2_n_0 ),
        .I1(\action[1]_i_3_n_0 ),
        .I2(msxor_ctix[1]),
        .I3(msxor_cti[1]),
        .I4(msxor_ctdx[1]),
        .I5(msxor_ctd[1]),
        .O(action[1]));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \action[1]_i_2 
       (.I0(msxor_ctix[0]),
        .I1(msxor_cti[0]),
        .I2(msxor_ctdx[0]),
        .I3(msxor_ctd[0]),
        .O(\action[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT4 #(
    .INIT(16'h088E)) 
    \action[1]_i_3 
       (.I0(msxor_ctd[0]),
        .I1(msxor_ctdx[0]),
        .I2(msxor_cti[0]),
        .I3(msxor_ctix[0]),
        .O(\action[1]_i_3_n_0 ));
  FDRE \action_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(action[0]),
        .Q(\action_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \action_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(action[1]),
        .Q(p_0_in47_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hD5DFFFFF15100000)) 
    data_mux_i_1
       (.I0(s_state[3]),
        .I1(m_delay_val_int146_out__0),
        .I2(s_ovflw12_out),
        .I3(data_mux_i_2_n_0),
        .I4(data_mux_i_3_n_0),
        .I5(data_mux_reg_n_0),
        .O(data_mux_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT4 #(
    .INIT(16'hF2F0)) 
    data_mux_i_2
       (.I0(pd_min),
        .I1(delay_change_reg_n_0),
        .I2(dec_run_reg_n_0),
        .I3(meq_min_reg_n_0),
        .O(data_mux_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'h08)) 
    data_mux_i_3
       (.I0(s_state[1]),
        .I1(s_state[2]),
        .I2(s_state[0]),
        .O(data_mux_i_3_n_0));
  FDRE data_mux_reg
       (.C(CLK),
        .CE(1'b1),
        .D(data_mux_i_1_n_0),
        .Q(data_mux_reg_n_0),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[0]_i_1 
       (.I0(sdataoutc[0]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[0]),
        .O(\data_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[1]_i_1 
       (.I0(sdataoutc[1]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[1]),
        .O(\data_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[2]_i_1 
       (.I0(sdataoutc[2]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[2]),
        .O(\data_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[3]_i_1 
       (.I0(sdataoutc[3]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[3]),
        .O(\data_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[4]_i_1 
       (.I0(sdataoutc[4]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[4]),
        .O(\data_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[5]_i_1 
       (.I0(sdataoutc[5]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[5]),
        .O(\data_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[6]_i_1 
       (.I0(sdataoutc[6]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[6]),
        .O(\data_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[7]_i_1 
       (.I0(sdataoutc[7]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[7]),
        .O(\data_out[7]_i_1_n_0 ));
  FDRE \data_out_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(data_in_to_device[0]),
        .R(1'b0));
  FDRE \data_out_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(data_in_to_device[1]),
        .R(1'b0));
  FDRE \data_out_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(data_in_to_device[2]),
        .R(1'b0));
  FDRE \data_out_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(data_in_to_device[3]),
        .R(1'b0));
  FDRE \data_out_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(data_in_to_device[4]),
        .R(1'b0));
  FDRE \data_out_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(data_in_to_device[5]),
        .R(1'b0));
  FDRE \data_out_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(data_in_to_device[6]),
        .R(1'b0));
  FDRE \data_out_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(data_in_to_device[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF0F0A8F0F0F0F0F0)) 
    dec_run_i_1
       (.I0(dec_run),
        .I1(meq_min_reg_n_0),
        .I2(dec_run_reg_n_0),
        .I3(s_ovflw1),
        .I4(s_ovflw12_out),
        .I5(dec_run_i_3_n_0),
        .O(dec_run_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    dec_run_i_2
       (.I0(s_state[2]),
        .I1(s_state[1]),
        .I2(s_state[3]),
        .O(dec_run));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'hF3DF)) 
    dec_run_i_3
       (.I0(s_state[3]),
        .I1(s_state[2]),
        .I2(s_state[0]),
        .I3(s_state[1]),
        .O(dec_run_i_3_n_0));
  FDRE dec_run_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dec_run_i_1_n_0),
        .Q(dec_run_reg_n_0),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT5 #(
    .INIT(32'hFFFFCCFE)) 
    delay_change_i_1
       (.I0(pd_min),
        .I1(dec_run_reg_n_0),
        .I2(pd_max),
        .I3(delay_change_reg_n_0),
        .I4(inc_run_reg_n_0),
        .O(delay_change_i_1_n_0));
  FDRE delay_change_reg
       (.C(CLK),
        .CE(1'b1),
        .D(delay_change_i_1_n_0),
        .Q(delay_change_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'hBBBB0800BBBB0000)) 
    inc_run_i_1
       (.I0(dec_run),
        .I1(dec_run_i_3_n_0),
        .I2(delay_change_reg_n_0),
        .I3(pd_max),
        .I4(inc_run_reg_n_0),
        .I5(meq_max),
        .O(inc_run_i_1_n_0));
  FDRE inc_run_reg
       (.C(CLK),
        .CE(1'b1),
        .D(inc_run_i_1_n_0),
        .Q(inc_run_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'hFFDF55DF0020AA20)) 
    \m_delay_mux[0]_i_1 
       (.I0(\m_delay_mux[0]_i_2_n_0 ),
        .I1(m_delay_val_int1__0),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int146_out__0),
        .I5(m_delay_mux__0[0]),
        .O(\m_delay_mux[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \m_delay_mux[0]_i_2 
       (.I0(s_state[2]),
        .I1(s_state[1]),
        .I2(s_state[3]),
        .I3(s_state[0]),
        .O(\m_delay_mux[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9A99FFFF65660000)) 
    \m_delay_mux[1]_i_1 
       (.I0(m_delay_mux__0[0]),
        .I1(inc_run_reg_n_0),
        .I2(delay_change_reg_n_0),
        .I3(pd_max),
        .I4(\m_delay_mux[1]_i_2_n_0 ),
        .I5(m_delay_mux__0[1]),
        .O(\m_delay_mux[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7474744400000000)) 
    \m_delay_mux[1]_i_2 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(s_ovflw1),
        .I3(meq_min_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(\m_delay_mux[0]_i_2_n_0 ),
        .O(\m_delay_mux[1]_i_2_n_0 ));
  FDSE \m_delay_mux_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\m_delay_mux[0]_i_1_n_0 ),
        .Q(m_delay_mux__0[0]),
        .S(not_rx_lckd_intd4));
  FDRE \m_delay_mux_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\m_delay_mux[1]_i_1_n_0 ),
        .Q(m_delay_mux__0[1]),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'h888888BBB8BBB8BB)) 
    \m_delay_val_int[0]_i_1 
       (.I0(\m_delay_val_int_reg[4]_0 [0]),
        .I1(not_rx_lckd_intd4),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int1__0),
        .I5(Q[0]),
        .O(\m_delay_val_int[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BB88BB88BB)) 
    \m_delay_val_int[1]_i_1 
       (.I0(\m_delay_val_int_reg[4]_0 [1]),
        .I1(not_rx_lckd_intd4),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int1__0),
        .I5(\m_delay_val_int[1]_i_2_n_0 ),
        .O(\m_delay_val_int[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \m_delay_val_int[1]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\m_delay_val_int[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_delay_val_int[2]_i_1 
       (.I0(\m_delay_val_int_reg[4]_0 [2]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[2]_i_2_n_0 ),
        .O(\m_delay_val_int[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h338BBB03BB038B33)) 
    \m_delay_val_int[2]_i_2 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(m_delay_val_int1__0),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\m_delay_val_int[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_delay_val_int[3]_i_1 
       (.I0(\m_delay_val_int_reg[4]_0 [3]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[3]_i_2_n_0 ),
        .I3(s_ovflw12_out),
        .I4(\m_delay_val_int[3]_i_3_n_0 ),
        .O(\m_delay_val_int[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0110101010101010)) 
    \m_delay_val_int[3]_i_2 
       (.I0(inc_run_reg_n_0),
        .I1(meq_max),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\m_delay_val_int[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEFEFEEF)) 
    \m_delay_val_int[3]_i_3 
       (.I0(dec_run_reg_n_0),
        .I1(meq_min_reg_n_0),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\m_delay_val_int[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAAFAFAFEAA)) 
    \m_delay_val_int[4]_i_1 
       (.I0(not_rx_lckd_intd4),
        .I1(m_delay_val_int1__0),
        .I2(m_delay_val_int__19),
        .I3(s_ovflw1),
        .I4(s_ovflw12_out),
        .I5(m_delay_val_int146_out__0),
        .O(\m_delay_val_int[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_delay_val_int[4]_i_2 
       (.I0(\m_delay_val_int_reg[4]_0 [4]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[4]_i_8_n_0 ),
        .I3(s_ovflw12_out),
        .I4(\m_delay_val_int[4]_i_9_n_0 ),
        .O(\m_delay_val_int[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \m_delay_val_int[4]_i_3 
       (.I0(meq_min_reg_n_0),
        .I1(dec_run_reg_n_0),
        .O(m_delay_val_int1__0));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \m_delay_val_int[4]_i_4 
       (.I0(s_state[3]),
        .I1(s_state[0]),
        .I2(s_state[2]),
        .I3(s_state[1]),
        .O(m_delay_val_int__19));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \m_delay_val_int[4]_i_5 
       (.I0(dec_run_reg_n_0),
        .I1(delay_change_reg_n_0),
        .I2(pd_min),
        .O(s_ovflw1));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \m_delay_val_int[4]_i_6 
       (.I0(inc_run_reg_n_0),
        .I1(delay_change_reg_n_0),
        .I2(pd_max),
        .O(s_ovflw12_out));
  LUT2 #(
    .INIT(4'h1)) 
    \m_delay_val_int[4]_i_7 
       (.I0(meq_max),
        .I1(inc_run_reg_n_0),
        .O(m_delay_val_int146_out__0));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \m_delay_val_int[4]_i_8 
       (.I0(m_delay_val_int146_out__0),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\m_delay_val_int[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888888882)) 
    \m_delay_val_int[4]_i_9 
       (.I0(m_delay_val_int1__0),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\m_delay_val_int[4]_i_9_n_0 ));
  FDRE \m_delay_val_int_reg[0] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1_n_0 ),
        .D(\m_delay_val_int[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[1] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1_n_0 ),
        .D(\m_delay_val_int[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[2] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1_n_0 ),
        .D(\m_delay_val_int[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[3] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1_n_0 ),
        .D(\m_delay_val_int[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[4] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1_n_0 ),
        .D(\m_delay_val_int[4]_i_2_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mdataouta_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(\mdataouta_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \mdataouta_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(p_0_in14_in),
        .R(1'b0));
  FDRE \mdataouta_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[2]),
        .Q(p_0_in17_in),
        .R(1'b0));
  FDRE \mdataouta_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[3]),
        .Q(p_0_in21_in),
        .R(1'b0));
  FDRE \mdataouta_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[4]),
        .Q(p_0_in25_in),
        .R(1'b0));
  FDRE \mdataouta_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[5]),
        .Q(p_0_in29_in),
        .R(1'b0));
  FDRE \mdataouta_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[6]),
        .Q(p_0_in33_in),
        .R(1'b0));
  FDRE \mdataouta_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[7]),
        .Q(p_0_in37_in),
        .R(1'b0));
  FDRE mdataoutb_reg
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in37_in),
        .Q(mdataoutb),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[0]_i_1 
       (.I0(mdataoutb),
        .I1(\mdataouta_reg_n_0_[0] ),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in14_in),
        .O(\mdataoutc[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[1]_i_1 
       (.I0(\mdataouta_reg_n_0_[0] ),
        .I1(p_0_in14_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in17_in),
        .O(\mdataoutc[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[2]_i_1 
       (.I0(p_0_in14_in),
        .I1(p_0_in17_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in21_in),
        .O(\mdataoutc[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[3]_i_1 
       (.I0(p_0_in17_in),
        .I1(p_0_in21_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in25_in),
        .O(\mdataoutc[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[4]_i_1 
       (.I0(p_0_in21_in),
        .I1(p_0_in25_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in29_in),
        .O(\mdataoutc[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[5]_i_1 
       (.I0(p_0_in25_in),
        .I1(p_0_in29_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in33_in),
        .O(\mdataoutc[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[6]_i_1 
       (.I0(p_0_in29_in),
        .I1(p_0_in33_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in37_in),
        .O(\mdataoutc[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[7]_i_1 
       (.I0(p_0_in33_in),
        .I1(p_0_in37_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(D[0]),
        .O(\mdataoutc[7]_i_1_n_0 ));
  FDRE \mdataoutc_reg[0] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[0]_i_1_n_0 ),
        .Q(mdataoutc[0]),
        .R(1'b0));
  FDRE \mdataoutc_reg[1] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[1]_i_1_n_0 ),
        .Q(mdataoutc[1]),
        .R(1'b0));
  FDRE \mdataoutc_reg[2] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[2]_i_1_n_0 ),
        .Q(mdataoutc[2]),
        .R(1'b0));
  FDRE \mdataoutc_reg[3] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[3]_i_1_n_0 ),
        .Q(mdataoutc[3]),
        .R(1'b0));
  FDRE \mdataoutc_reg[4] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[4]_i_1_n_0 ),
        .Q(mdataoutc[4]),
        .R(1'b0));
  FDRE \mdataoutc_reg[5] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[5]_i_1_n_0 ),
        .Q(mdataoutc[5]),
        .R(1'b0));
  FDRE \mdataoutc_reg[6] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[6]_i_1_n_0 ),
        .Q(mdataoutc[6]),
        .R(1'b0));
  FDRE \mdataoutc_reg[7] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[7]_i_1_n_0 ),
        .Q(mdataoutc[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    meq_max_i_1
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(meq_max0));
  FDRE meq_max_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(meq_max0),
        .Q(meq_max),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h8888888B)) 
    meq_min_i_1
       (.I0(meq_min_reg_n_0),
        .I1(not_rx_lckd_intd4),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(meq_min_i_2_n_0),
        .O(meq_min_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    meq_min_i_2
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(meq_min_i_2_n_0));
  FDRE meq_min_reg
       (.C(CLK),
        .CE(1'b1),
        .D(meq_min_i_1_n_0),
        .Q(meq_min_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctd[0]_i_1 
       (.I0(msxorda0__8),
        .I1(msxorda016_out__8),
        .I2(msxorda034_out__8),
        .I3(msxorda025_out__8),
        .O(\msxor_ctd[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctd[1]_i_1 
       (.I0(msxorda025_out__8),
        .I1(msxorda034_out__8),
        .I2(msxorda016_out__8),
        .I3(msxorda0__8),
        .O(\msxor_ctd[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_2 
       (.I0(p_0_in80_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in14_in),
        .I3(p_0_in17_in),
        .I4(p_0_in68_in),
        .O(msxorda025_out__8));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_3 
       (.I0(p_0_in92_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in17_in),
        .I3(p_0_in21_in),
        .I4(p_0_in80_in),
        .O(msxorda034_out__8));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctd[1]_i_4 
       (.I0(p_0_in68_in),
        .I1(s_ovflw_reg_n_0),
        .I2(\sdataouta_reg_n_0_[0] ),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(p_0_in14_in),
        .O(msxorda016_out__8));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_5 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(s_ovflw_reg_n_0),
        .I2(mdataoutb),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(sdataoutb),
        .O(msxorda0__8));
  FDRE \msxor_ctd_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctd[0]_i_1_n_0 ),
        .Q(msxor_ctd[0]),
        .R(1'b0));
  FDRE \msxor_ctd_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctd[1]_i_1_n_0 ),
        .Q(msxor_ctd[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctdx[0]_i_1 
       (.I0(msxorda043_out__8),
        .I1(msxorda052_out__8),
        .I2(msxorda070_out__8),
        .I3(msxorda061_out__8),
        .O(\msxor_ctdx[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctdx[1]_i_1 
       (.I0(msxorda061_out__8),
        .I1(msxorda070_out__8),
        .I2(msxorda052_out__8),
        .I3(msxorda043_out__8),
        .O(\msxor_ctdx[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_2 
       (.I0(p_0_in128_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in116_in),
        .I3(p_0_in29_in),
        .I4(p_0_in33_in),
        .O(msxorda061_out__8));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_3 
       (.I0(p_0_in140_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in128_in),
        .I3(p_0_in33_in),
        .I4(p_0_in37_in),
        .O(msxorda070_out__8));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_4 
       (.I0(p_0_in116_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in104_in),
        .I3(p_0_in25_in),
        .I4(p_0_in29_in),
        .O(msxorda052_out__8));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctdx[1]_i_5 
       (.I0(p_0_in104_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in21_in),
        .I3(p_0_in25_in),
        .I4(p_0_in92_in),
        .O(msxorda043_out__8));
  FDRE \msxor_ctdx_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctdx[0]_i_1_n_0 ),
        .Q(msxor_ctdx[0]),
        .R(1'b0));
  FDRE \msxor_ctdx_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctdx[1]_i_1_n_0 ),
        .Q(msxor_ctdx[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_cti[0]_i_1 
       (.I0(msxoria0__8),
        .I1(msxoria084_out__8),
        .I2(msxoria0102_out__8),
        .I3(msxoria093_out__8),
        .O(\msxor_cti[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_cti[1]_i_1 
       (.I0(msxoria093_out__8),
        .I1(msxoria0102_out__8),
        .I2(msxoria084_out__8),
        .I3(msxoria0__8),
        .O(\msxor_cti[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_2 
       (.I0(p_0_in80_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in68_in),
        .I3(p_0_in14_in),
        .I4(p_0_in17_in),
        .O(msxoria093_out__8));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_3 
       (.I0(p_0_in92_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in80_in),
        .I3(p_0_in17_in),
        .I4(p_0_in21_in),
        .O(msxoria0102_out__8));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_4 
       (.I0(p_0_in68_in),
        .I1(s_ovflw_reg_n_0),
        .I2(\sdataouta_reg_n_0_[0] ),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(p_0_in14_in),
        .O(msxoria084_out__8));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_5 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(s_ovflw_reg_n_0),
        .I2(sdataoutb),
        .I3(mdataoutb),
        .I4(\mdataouta_reg_n_0_[0] ),
        .O(msxoria0__8));
  FDRE \msxor_cti_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_cti[0]_i_1_n_0 ),
        .Q(msxor_cti[0]),
        .R(1'b0));
  FDRE \msxor_cti_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_cti[1]_i_1_n_0 ),
        .Q(msxor_cti[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctix[0]_i_1 
       (.I0(msxoria0111_out__8),
        .I1(msxoria0120_out__8),
        .I2(msxoria0138_out__8),
        .I3(msxoria0129_out__8),
        .O(\msxor_ctix[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctix[1]_i_1 
       (.I0(msxoria0129_out__8),
        .I1(msxoria0138_out__8),
        .I2(msxoria0120_out__8),
        .I3(msxoria0111_out__8),
        .O(\msxor_ctix[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_2 
       (.I0(p_0_in128_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in116_in),
        .I3(p_0_in29_in),
        .I4(p_0_in33_in),
        .O(msxoria0129_out__8));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_3 
       (.I0(p_0_in140_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in128_in),
        .I3(p_0_in33_in),
        .I4(p_0_in37_in),
        .O(msxoria0138_out__8));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_4 
       (.I0(p_0_in116_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in104_in),
        .I3(p_0_in25_in),
        .I4(p_0_in29_in),
        .O(msxoria0120_out__8));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_5 
       (.I0(p_0_in104_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in92_in),
        .I3(p_0_in21_in),
        .I4(p_0_in25_in),
        .O(msxoria0111_out__8));
  FDRE \msxor_ctix_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctix[0]_i_1_n_0 ),
        .Q(msxor_ctix[0]),
        .R(1'b0));
  FDRE \msxor_ctix_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctix[1]_i_1_n_0 ),
        .Q(msxor_ctix[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \pd_hold[0]_i_1 
       (.I0(delay_change_reg_n_0),
        .I1(inc_run_reg_n_0),
        .I2(dec_run_reg_n_0),
        .O(pdcount1));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[1]_i_1 
       (.I0(p_0_in1_in[1]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[2]_i_1 
       (.I0(p_0_in1_in[2]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[3]_i_1 
       (.I0(p_0_in1_in[3]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[4]_i_1 
       (.I0(p_0_in1_in[4]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[5]_i_1 
       (.I0(p_0_in1_in[5]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[6]_i_1 
       (.I0(p_0_in1_in[6]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[6]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[7]_i_1 
       (.I0(p_0_in),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[7]_i_2 
       (.I0(p_0_in1_in[7]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[7]_i_2_n_0 ));
  FDRE \pd_hold_reg[0] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(pdcount1),
        .Q(p_0_in1_in[1]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[1] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[1]_i_1_n_0 ),
        .Q(p_0_in1_in[2]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[2] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[2]_i_1_n_0 ),
        .Q(p_0_in1_in[3]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[3] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[3]_i_1_n_0 ),
        .Q(p_0_in1_in[4]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[4] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[4]_i_1_n_0 ),
        .Q(p_0_in1_in[5]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[5] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[5]_i_1_n_0 ),
        .Q(p_0_in1_in[6]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[6] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[6]_i_1_n_0 ),
        .Q(p_0_in1_in[7]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[7] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1_n_0 ),
        .D(\pd_hold[7]_i_2_n_0 ),
        .Q(p_0_in),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h04)) 
    pd_max_i_1
       (.I0(delay_change_reg_n_0),
        .I1(pd_max242_in),
        .I2(pd_max),
        .O(pd_max0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    pd_max_i_2
       (.I0(pdcount_reg[5]),
        .I1(pdcount_reg[4]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[0]),
        .I4(pdcount_reg[3]),
        .I5(pdcount_reg[2]),
        .O(pd_max242_in));
  FDRE pd_max_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(pd_max0),
        .Q(pd_max),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h04)) 
    pd_min_i_2
       (.I0(delay_change_reg_n_0),
        .I1(pd_min241_in),
        .I2(pd_min),
        .O(pd_min0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    pd_min_i_3
       (.I0(pdcount_reg[5]),
        .I1(pdcount_reg[4]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[0]),
        .I4(pdcount_reg[3]),
        .I5(pdcount_reg[2]),
        .O(pd_min241_in));
  FDRE pd_min_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(pd_min0),
        .Q(pd_min),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pdcount[0]_i_1 
       (.I0(pdcount_reg[0]),
        .O(\pdcount[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \pdcount[1]_i_1 
       (.I0(pdcount_reg[0]),
        .I1(\pdcount[5]_i_4_n_0 ),
        .I2(pdcount_reg[1]),
        .O(\pdcount[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \pdcount[2]_i_1 
       (.I0(pdcount_reg[0]),
        .I1(\pdcount[5]_i_4_n_0 ),
        .I2(pdcount_reg[2]),
        .I3(pdcount_reg[1]),
        .O(\pdcount[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    \pdcount[3]_i_1 
       (.I0(\pdcount[5]_i_4_n_0 ),
        .I1(pdcount_reg[0]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[3]),
        .I4(pdcount_reg[2]),
        .O(\pdcount[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFFE0001)) 
    \pdcount[4]_i_1 
       (.I0(pdcount_reg[1]),
        .I1(pdcount_reg[0]),
        .I2(\pdcount[5]_i_4_n_0 ),
        .I3(pdcount_reg[2]),
        .I4(pdcount_reg[4]),
        .I5(pdcount_reg[3]),
        .O(\pdcount[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pdcount[5]_i_1 
       (.I0(not_rx_lckd_intd4),
        .I1(p_0_in),
        .I2(delay_change_reg_n_0),
        .I3(inc_run_reg_n_0),
        .I4(dec_run_reg_n_0),
        .O(\pdcount[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \pdcount[5]_i_2 
       (.I0(\pdcount[5]_i_4_n_0 ),
        .I1(pd_min241_in),
        .I2(p_0_in47_in),
        .O(\pdcount[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h78E1)) 
    \pdcount[5]_i_3 
       (.I0(\pdcount[5]_i_5_n_0 ),
        .I1(pdcount_reg[3]),
        .I2(pdcount_reg[5]),
        .I3(pdcount_reg[4]),
        .O(\pdcount[5]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \pdcount[5]_i_4 
       (.I0(\action_reg_n_0_[0] ),
        .I1(pd_max242_in),
        .O(\pdcount[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5D55555555554544)) 
    \pdcount[5]_i_5 
       (.I0(pdcount_reg[3]),
        .I1(pdcount_reg[2]),
        .I2(pd_max242_in),
        .I3(\action_reg_n_0_[0] ),
        .I4(pdcount_reg[0]),
        .I5(pdcount_reg[1]),
        .O(\pdcount[5]_i_5_n_0 ));
  FDRE \pdcount_reg[0] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[0]_i_1_n_0 ),
        .Q(pdcount_reg[0]),
        .R(\pdcount[5]_i_1_n_0 ));
  FDRE \pdcount_reg[1] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[1]_i_1_n_0 ),
        .Q(pdcount_reg[1]),
        .R(\pdcount[5]_i_1_n_0 ));
  FDRE \pdcount_reg[2] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[2]_i_1_n_0 ),
        .Q(pdcount_reg[2]),
        .R(\pdcount[5]_i_1_n_0 ));
  FDRE \pdcount_reg[3] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[3]_i_1_n_0 ),
        .Q(pdcount_reg[3]),
        .R(\pdcount[5]_i_1_n_0 ));
  FDRE \pdcount_reg[4] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[4]_i_1_n_0 ),
        .Q(pdcount_reg[4]),
        .R(\pdcount[5]_i_1_n_0 ));
  FDSE \pdcount_reg[5] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2_n_0 ),
        .D(\pdcount[5]_i_3_n_0 ),
        .Q(pdcount_reg[5]),
        .S(\pdcount[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \s_delay_mux[0]_i_1 
       (.I0(m_delay_mux__0[0]),
        .I1(\s_delay_mux[1]_i_2_n_0 ),
        .I2(s_delay_mux__0[0]),
        .O(\s_delay_mux[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \s_delay_mux[1]_i_1 
       (.I0(m_delay_mux__0[1]),
        .I1(\s_delay_mux[1]_i_2_n_0 ),
        .I2(s_delay_mux__0[1]),
        .O(\s_delay_mux[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7474744400000000)) 
    \s_delay_mux[1]_i_2 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(s_ovflw1),
        .I3(meq_min_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(\s_delay_mux[1]_i_3_n_0 ),
        .O(\s_delay_mux[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \s_delay_mux[1]_i_3 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .I2(s_state[2]),
        .I3(s_state[3]),
        .O(\s_delay_mux[1]_i_3_n_0 ));
  FDSE \s_delay_mux_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\s_delay_mux[0]_i_1_n_0 ),
        .Q(s_delay_mux__0[0]),
        .S(not_rx_lckd_intd4));
  FDRE \s_delay_mux_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\s_delay_mux[1]_i_1_n_0 ),
        .Q(s_delay_mux__0[1]),
        .R(not_rx_lckd_intd4));
  LUT5 #(
    .INIT(32'hFFF100F1)) 
    \s_delay_val_int[0]_i_1__0 
       (.I0(Q[0]),
        .I1(s_ovflw1),
        .I2(s_ovflw12_out),
        .I3(not_rx_lckd_intd4),
        .I4(\m_delay_val_int_reg[4]_0 [0]),
        .O(\s_delay_val_int[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF090000FF09)) 
    \s_delay_val_int[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [1]),
        .O(\s_delay_val_int[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF090000FF09)) 
    \s_delay_val_int[2]_i_1__0 
       (.I0(Q[2]),
        .I1(\s_delay_val_int[2]_i_2_n_0 ),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [2]),
        .O(\s_delay_val_int[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \s_delay_val_int[2]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\s_delay_val_int[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF060000FF06)) 
    \s_delay_val_int[3]_i_1__0 
       (.I0(Q[3]),
        .I1(\s_delay_val_int[3]_i_2_n_0 ),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [3]),
        .O(\s_delay_val_int[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \s_delay_val_int[3]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\s_delay_val_int[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C440CFF)) 
    \s_delay_val_int[4]_i_1 
       (.I0(m_delay_val_int1__0),
        .I1(\s_delay_val_int[4]_i_3_n_0 ),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(s_ovflw1),
        .I5(not_rx_lckd_intd4),
        .O(s_delay_val_int0));
  LUT6 #(
    .INIT(64'hFFFF00A2000000A2)) 
    \s_delay_val_int[4]_i_2__0 
       (.I0(\s_delay_val_int[4]_i_4_n_0 ),
        .I1(pd_max),
        .I2(delay_change_reg_n_0),
        .I3(inc_run_reg_n_0),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [4]),
        .O(\s_delay_val_int[4]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \s_delay_val_int[4]_i_3 
       (.I0(s_state[2]),
        .I1(s_state[3]),
        .I2(s_state[1]),
        .I3(s_state[0]),
        .O(\s_delay_val_int[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000000006666666A)) 
    \s_delay_val_int[4]_i_4 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(s_ovflw1),
        .O(\s_delay_val_int[4]_i_4_n_0 ));
  FDRE \s_delay_val_int_reg[0] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[0]_i_1__0_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [0]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[1] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[1]_i_1_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [1]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[2] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[2]_i_1__0_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [2]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[3] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[3]_i_1__0_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [3]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[4] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[4]_i_2__0_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00003301)) 
    s_ovflw_i_1
       (.I0(pd_min),
        .I1(dec_run_reg_n_0),
        .I2(pd_max),
        .I3(delay_change_reg_n_0),
        .I4(inc_run_reg_n_0),
        .I5(s_ovflw_reg_n_0),
        .O(s_ovflw_i_1_n_0));
  FDRE s_ovflw_reg
       (.C(CLK),
        .CE(1'b1),
        .D(s_ovflw_i_1_n_0),
        .Q(s_ovflw_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT1 #(
    .INIT(2'h1)) 
    \s_state[0]_i_1 
       (.I0(s_state[0]),
        .O(s_state0));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \s_state[1]_i_1 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \s_state[2]_i_1 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .I2(s_state[2]),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'h7777447477774444)) 
    \s_state[3]_i_1 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(pd_min),
        .I3(delay_change_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(meq_min_reg_n_0),
        .O(\s_state[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \s_state[3]_i_2 
       (.I0(s_state[1]),
        .I1(s_state[0]),
        .I2(s_state[2]),
        .I3(s_state[3]),
        .O(p_1_in[3]));
  FDRE \s_state_reg[0] 
       (.C(CLK),
        .CE(\s_state[3]_i_1_n_0 ),
        .D(s_state0),
        .Q(s_state[0]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[1] 
       (.C(CLK),
        .CE(\s_state[3]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(s_state[1]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[2] 
       (.C(CLK),
        .CE(\s_state[3]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(s_state[2]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[3] 
       (.C(CLK),
        .CE(\s_state[3]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(s_state[3]),
        .R(not_rx_lckd_intd4));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[0]_i_1 
       (.I0(p_22_out),
        .O(sdataout_0[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[1]_i_1 
       (.I0(p_23_out),
        .O(sdataout_0[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[2]_i_1 
       (.I0(p_24_out),
        .O(sdataout_0[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[3]_i_1 
       (.I0(p_25_out),
        .O(sdataout_0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[4]_i_1 
       (.I0(p_26_out),
        .O(sdataout_0[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[5]_i_1 
       (.I0(p_27_out),
        .O(sdataout_0[5]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[6]_i_1 
       (.I0(p_28_out),
        .O(sdataout_0[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[7]_i_1 
       (.I0(p_29_out),
        .O(sdataout_0[7]));
  FDRE \sdataouta_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[0]),
        .Q(\sdataouta_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \sdataouta_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[1]),
        .Q(p_0_in68_in),
        .R(1'b0));
  FDRE \sdataouta_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[2]),
        .Q(p_0_in80_in),
        .R(1'b0));
  FDRE \sdataouta_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[3]),
        .Q(p_0_in92_in),
        .R(1'b0));
  FDRE \sdataouta_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[4]),
        .Q(p_0_in104_in),
        .R(1'b0));
  FDRE \sdataouta_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[5]),
        .Q(p_0_in116_in),
        .R(1'b0));
  FDRE \sdataouta_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[6]),
        .Q(p_0_in128_in),
        .R(1'b0));
  FDRE \sdataouta_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_0[7]),
        .Q(p_0_in140_in),
        .R(1'b0));
  FDRE sdataoutb_reg
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in140_in),
        .Q(sdataoutb),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[0]_i_1 
       (.I0(sdataoutb),
        .I1(\sdataouta_reg_n_0_[0] ),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in68_in),
        .O(\sdataoutc[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[1]_i_1 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(p_0_in68_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in80_in),
        .O(\sdataoutc[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[2]_i_1 
       (.I0(p_0_in68_in),
        .I1(p_0_in80_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in92_in),
        .O(\sdataoutc[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[3]_i_1 
       (.I0(p_0_in80_in),
        .I1(p_0_in92_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in104_in),
        .O(\sdataoutc[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[4]_i_1 
       (.I0(p_0_in92_in),
        .I1(p_0_in104_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in116_in),
        .O(\sdataoutc[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[5]_i_1 
       (.I0(p_0_in104_in),
        .I1(p_0_in116_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in128_in),
        .O(\sdataoutc[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[6]_i_1 
       (.I0(p_0_in116_in),
        .I1(p_0_in128_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in140_in),
        .O(\sdataoutc[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCC0ACCFA)) 
    \sdataoutc[7]_i_1 
       (.I0(p_0_in128_in),
        .I1(p_0_in140_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_22_out),
        .O(\sdataoutc[7]_i_1_n_0 ));
  FDRE \sdataoutc_reg[0] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[0]_i_1_n_0 ),
        .Q(sdataoutc[0]),
        .R(1'b0));
  FDRE \sdataoutc_reg[1] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[1]_i_1_n_0 ),
        .Q(sdataoutc[1]),
        .R(1'b0));
  FDRE \sdataoutc_reg[2] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[2]_i_1_n_0 ),
        .Q(sdataoutc[2]),
        .R(1'b0));
  FDRE \sdataoutc_reg[3] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[3]_i_1_n_0 ),
        .Q(sdataoutc[3]),
        .R(1'b0));
  FDRE \sdataoutc_reg[4] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[4]_i_1_n_0 ),
        .Q(sdataoutc[4]),
        .R(1'b0));
  FDRE \sdataoutc_reg[5] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[5]_i_1_n_0 ),
        .Q(sdataoutc[5]),
        .R(1'b0));
  FDRE \sdataoutc_reg[6] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[6]_i_1_n_0 ),
        .Q(sdataoutc[6]),
        .R(1'b0));
  FDRE \sdataoutc_reg[7] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[7]_i_1_n_0 ),
        .Q(sdataoutc[7]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_dly_ctrl_wrap" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_dly_ctrl_wrap_0
   (p_12_in,
    Q,
    \s_delay_val_int_reg[4]_0 ,
    data_in_to_device,
    CLK,
    not_rx_lckd_intd4,
    \m_delay_val_int_reg[4]_0 ,
    \sdataoutc_reg[7]_0 ,
    D,
    p_5_out,
    p_6_out,
    p_7_out,
    \sdataouta_reg[4]_0 ,
    \sdataouta_reg[5]_0 ,
    p_10_out,
    p_11_out);
  output p_12_in;
  output [4:0]Q;
  output [4:0]\s_delay_val_int_reg[4]_0 ;
  output [7:0]data_in_to_device;
  input CLK;
  input not_rx_lckd_intd4;
  input [4:0]\m_delay_val_int_reg[4]_0 ;
  input \sdataoutc_reg[7]_0 ;
  input [7:0]D;
  input p_5_out;
  input p_6_out;
  input p_7_out;
  input \sdataouta_reg[4]_0 ;
  input \sdataouta_reg[5]_0 ;
  input p_10_out;
  input p_11_out;

  wire CLK;
  wire [7:0]D;
  wire [4:0]Q;
  wire [1:0]action;
  wire \action[0]_i_2__0_n_0 ;
  wire \action[0]_i_3__0_n_0 ;
  wire \action[1]_i_2__0_n_0 ;
  wire \action[1]_i_3__0_n_0 ;
  wire \action_reg_n_0_[0] ;
  wire [7:0]data_in_to_device;
  wire data_mux_i_1__0_n_0;
  wire data_mux_i_2__0_n_0;
  wire data_mux_i_3__0_n_0;
  wire data_mux_reg_n_0;
  wire \data_out[0]_i_1_n_0 ;
  wire \data_out[1]_i_1_n_0 ;
  wire \data_out[2]_i_1_n_0 ;
  wire \data_out[3]_i_1_n_0 ;
  wire \data_out[4]_i_1_n_0 ;
  wire \data_out[5]_i_1_n_0 ;
  wire \data_out[6]_i_1_n_0 ;
  wire \data_out[7]_i_1_n_0 ;
  wire dec_run;
  wire dec_run_i_1__0_n_0;
  wire dec_run_i_3__0_n_0;
  wire dec_run_reg_n_0;
  wire delay_change_i_1__0_n_0;
  wire delay_change_reg_n_0;
  wire inc_run_i_1__0_n_0;
  wire inc_run_reg_n_0;
  wire \m_delay_mux[0]_i_1__0_n_0 ;
  wire \m_delay_mux[0]_i_2__0_n_0 ;
  wire \m_delay_mux[1]_i_1__0_n_0 ;
  wire \m_delay_mux[1]_i_2__0_n_0 ;
  wire [1:0]m_delay_mux__0;
  wire m_delay_val_int146_out__0;
  wire m_delay_val_int1__0;
  wire \m_delay_val_int[0]_i_1__0_n_0 ;
  wire \m_delay_val_int[1]_i_1__0_n_0 ;
  wire \m_delay_val_int[1]_i_2__0_n_0 ;
  wire \m_delay_val_int[2]_i_1__0_n_0 ;
  wire \m_delay_val_int[2]_i_2__0_n_0 ;
  wire \m_delay_val_int[3]_i_1__0_n_0 ;
  wire \m_delay_val_int[3]_i_2__0_n_0 ;
  wire \m_delay_val_int[3]_i_3__0_n_0 ;
  wire \m_delay_val_int[4]_i_1__0_n_0 ;
  wire \m_delay_val_int[4]_i_2__0_n_0 ;
  wire \m_delay_val_int[4]_i_8__0_n_0 ;
  wire \m_delay_val_int[4]_i_9__0_n_0 ;
  wire m_delay_val_int__19;
  wire [4:0]\m_delay_val_int_reg[4]_0 ;
  wire \mdataouta_reg_n_0_[0] ;
  wire mdataoutb;
  wire [7:0]mdataoutc;
  wire \mdataoutc[0]_i_1__0_n_0 ;
  wire \mdataoutc[1]_i_1__0_n_0 ;
  wire \mdataoutc[2]_i_1__0_n_0 ;
  wire \mdataoutc[3]_i_1__0_n_0 ;
  wire \mdataoutc[4]_i_1__0_n_0 ;
  wire \mdataoutc[5]_i_1__0_n_0 ;
  wire \mdataoutc[6]_i_1__0_n_0 ;
  wire \mdataoutc[7]_i_1__0_n_0 ;
  wire meq_max;
  wire meq_max0;
  wire meq_min_i_1__0_n_0;
  wire meq_min_i_2__0_n_0;
  wire meq_min_reg_n_0;
  wire [1:0]msxor_ctd;
  wire \msxor_ctd[0]_i_1__0_n_0 ;
  wire \msxor_ctd[1]_i_1__0_n_0 ;
  wire [1:0]msxor_ctdx;
  wire \msxor_ctdx[0]_i_1__0_n_0 ;
  wire \msxor_ctdx[1]_i_1__0_n_0 ;
  wire [1:0]msxor_cti;
  wire \msxor_cti[0]_i_1__0_n_0 ;
  wire \msxor_cti[1]_i_1__0_n_0 ;
  wire [1:0]msxor_ctix;
  wire \msxor_ctix[0]_i_1__0_n_0 ;
  wire \msxor_ctix[1]_i_1__0_n_0 ;
  wire msxorda016_out__8;
  wire msxorda025_out__8;
  wire msxorda034_out__8;
  wire msxorda043_out__8;
  wire msxorda052_out__8;
  wire msxorda061_out__8;
  wire msxorda070_out__8;
  wire msxorda0__8;
  wire msxoria0102_out__8;
  wire msxoria0111_out__8;
  wire msxoria0120_out__8;
  wire msxoria0129_out__8;
  wire msxoria0138_out__8;
  wire msxoria084_out__8;
  wire msxoria093_out__8;
  wire msxoria0__8;
  wire not_rx_lckd_intd4;
  wire p_0_in;
  wire p_0_in104_in;
  wire p_0_in116_in;
  wire p_0_in128_in;
  wire p_0_in140_in;
  wire p_0_in14_in;
  wire p_0_in17_in;
  wire [7:1]p_0_in1_in;
  wire p_0_in21_in;
  wire p_0_in25_in;
  wire p_0_in29_in;
  wire p_0_in33_in;
  wire p_0_in37_in;
  wire p_0_in47_in;
  wire p_0_in68_in;
  wire p_0_in80_in;
  wire p_0_in92_in;
  wire p_10_out;
  wire p_11_out;
  wire p_12_in;
  wire [3:1]p_1_in;
  wire p_5_out;
  wire p_6_out;
  wire p_7_out;
  wire \pd_hold[1]_i_1__0_n_0 ;
  wire \pd_hold[2]_i_1__0_n_0 ;
  wire \pd_hold[3]_i_1__0_n_0 ;
  wire \pd_hold[4]_i_1__0_n_0 ;
  wire \pd_hold[5]_i_1__0_n_0 ;
  wire \pd_hold[6]_i_1__0_n_0 ;
  wire \pd_hold[7]_i_1__0_n_0 ;
  wire \pd_hold[7]_i_2__0_n_0 ;
  wire pd_max;
  wire pd_max0;
  wire pd_max242_in__0;
  wire pd_min;
  wire pd_min0;
  wire pd_min241_in__0;
  wire pdcount1;
  wire \pdcount[0]_i_1__0_n_0 ;
  wire \pdcount[1]_i_1__0_n_0 ;
  wire \pdcount[2]_i_1__0_n_0 ;
  wire \pdcount[3]_i_1__0_n_0 ;
  wire \pdcount[4]_i_1__0_n_0 ;
  wire \pdcount[5]_i_1__0_n_0 ;
  wire \pdcount[5]_i_2__0_n_0 ;
  wire \pdcount[5]_i_3__0_n_0 ;
  wire \pdcount[5]_i_4__0_n_0 ;
  wire \pdcount[5]_i_5__0_n_0 ;
  wire [5:0]pdcount_reg;
  wire \s_delay_mux[0]_i_1__0_n_0 ;
  wire \s_delay_mux[1]_i_1__0_n_0 ;
  wire \s_delay_mux[1]_i_2__0_n_0 ;
  wire \s_delay_mux[1]_i_3__0_n_0 ;
  wire [1:0]s_delay_mux__0;
  wire s_delay_val_int0;
  wire \s_delay_val_int[0]_i_1_n_0 ;
  wire \s_delay_val_int[1]_i_1__0_n_0 ;
  wire \s_delay_val_int[2]_i_1_n_0 ;
  wire \s_delay_val_int[2]_i_2__0_n_0 ;
  wire \s_delay_val_int[3]_i_1_n_0 ;
  wire \s_delay_val_int[3]_i_2__0_n_0 ;
  wire \s_delay_val_int[4]_i_2_n_0 ;
  wire \s_delay_val_int[4]_i_3__0_n_0 ;
  wire \s_delay_val_int[4]_i_4__0_n_0 ;
  wire [4:0]\s_delay_val_int_reg[4]_0 ;
  wire s_ovflw1;
  wire s_ovflw12_out;
  wire s_ovflw_i_1__0_n_0;
  wire s_ovflw_reg_n_0;
  wire [3:0]s_state;
  wire [0:0]s_state0;
  wire \s_state[3]_i_1__0_n_0 ;
  wire [7:0]sdataout_8;
  wire \sdataouta_reg[4]_0 ;
  wire \sdataouta_reg[5]_0 ;
  wire \sdataouta_reg_n_0_[0] ;
  wire sdataoutb;
  wire [7:0]sdataoutc;
  wire \sdataoutc[0]_i_1__0_n_0 ;
  wire \sdataoutc[1]_i_1__0_n_0 ;
  wire \sdataoutc[2]_i_1__0_n_0 ;
  wire \sdataoutc[3]_i_1__0_n_0 ;
  wire \sdataoutc[4]_i_1__0_n_0 ;
  wire \sdataoutc[5]_i_1__0_n_0 ;
  wire \sdataoutc[6]_i_1__0_n_0 ;
  wire \sdataoutc[7]_i_1__0_n_0 ;
  wire \sdataoutc_reg[7]_0 ;

  LUT6 #(
    .INIT(64'h8EEF088E8EEF0008)) 
    \action[0]_i_1__0 
       (.I0(msxor_cti[1]),
        .I1(msxor_ctix[1]),
        .I2(msxor_ctd[1]),
        .I3(msxor_ctdx[1]),
        .I4(\action[0]_i_2__0_n_0 ),
        .I5(\action[0]_i_3__0_n_0 ),
        .O(action[0]));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'h088E)) 
    \action[0]_i_2__0 
       (.I0(msxor_cti[0]),
        .I1(msxor_ctix[0]),
        .I2(msxor_ctd[0]),
        .I3(msxor_ctdx[0]),
        .O(\action[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \action[0]_i_3__0 
       (.I0(msxor_ctix[0]),
        .I1(msxor_cti[0]),
        .I2(msxor_ctdx[0]),
        .I3(msxor_ctd[0]),
        .O(\action[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hCEEF0CCE0CCE000C)) 
    \action[1]_i_1__0 
       (.I0(\action[1]_i_2__0_n_0 ),
        .I1(\action[1]_i_3__0_n_0 ),
        .I2(msxor_ctix[1]),
        .I3(msxor_cti[1]),
        .I4(msxor_ctdx[1]),
        .I5(msxor_ctd[1]),
        .O(action[1]));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'hFFF7)) 
    \action[1]_i_2__0 
       (.I0(msxor_ctix[0]),
        .I1(msxor_cti[0]),
        .I2(msxor_ctdx[0]),
        .I3(msxor_ctd[0]),
        .O(\action[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT4 #(
    .INIT(16'h088E)) 
    \action[1]_i_3__0 
       (.I0(msxor_ctd[0]),
        .I1(msxor_ctdx[0]),
        .I2(msxor_cti[0]),
        .I3(msxor_ctix[0]),
        .O(\action[1]_i_3__0_n_0 ));
  FDRE \action_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(action[0]),
        .Q(\action_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \action_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(action[1]),
        .Q(p_0_in47_in),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hD5DFFFFF15100000)) 
    data_mux_i_1__0
       (.I0(s_state[3]),
        .I1(m_delay_val_int146_out__0),
        .I2(s_ovflw12_out),
        .I3(data_mux_i_2__0_n_0),
        .I4(data_mux_i_3__0_n_0),
        .I5(data_mux_reg_n_0),
        .O(data_mux_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT4 #(
    .INIT(16'hF2F0)) 
    data_mux_i_2__0
       (.I0(pd_min),
        .I1(delay_change_reg_n_0),
        .I2(dec_run_reg_n_0),
        .I3(meq_min_reg_n_0),
        .O(data_mux_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h08)) 
    data_mux_i_3__0
       (.I0(s_state[1]),
        .I1(s_state[2]),
        .I2(s_state[0]),
        .O(data_mux_i_3__0_n_0));
  FDRE data_mux_reg
       (.C(CLK),
        .CE(1'b1),
        .D(data_mux_i_1__0_n_0),
        .Q(data_mux_reg_n_0),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[0]_i_1 
       (.I0(sdataoutc[0]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[0]),
        .O(\data_out[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[1]_i_1 
       (.I0(sdataoutc[1]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[1]),
        .O(\data_out[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[2]_i_1 
       (.I0(sdataoutc[2]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[2]),
        .O(\data_out[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[3]_i_1 
       (.I0(sdataoutc[3]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[3]),
        .O(\data_out[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[4]_i_1 
       (.I0(sdataoutc[4]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[4]),
        .O(\data_out[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[5]_i_1 
       (.I0(sdataoutc[5]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[5]),
        .O(\data_out[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[6]_i_1 
       (.I0(sdataoutc[6]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[6]),
        .O(\data_out[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \data_out[7]_i_1 
       (.I0(sdataoutc[7]),
        .I1(data_mux_reg_n_0),
        .I2(mdataoutc[7]),
        .O(\data_out[7]_i_1_n_0 ));
  FDRE \data_out_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[0]_i_1_n_0 ),
        .Q(data_in_to_device[0]),
        .R(1'b0));
  FDRE \data_out_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[1]_i_1_n_0 ),
        .Q(data_in_to_device[1]),
        .R(1'b0));
  FDRE \data_out_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[2]_i_1_n_0 ),
        .Q(data_in_to_device[2]),
        .R(1'b0));
  FDRE \data_out_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[3]_i_1_n_0 ),
        .Q(data_in_to_device[3]),
        .R(1'b0));
  FDRE \data_out_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[4]_i_1_n_0 ),
        .Q(data_in_to_device[4]),
        .R(1'b0));
  FDRE \data_out_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[5]_i_1_n_0 ),
        .Q(data_in_to_device[5]),
        .R(1'b0));
  FDRE \data_out_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[6]_i_1_n_0 ),
        .Q(data_in_to_device[6]),
        .R(1'b0));
  FDRE \data_out_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(\data_out[7]_i_1_n_0 ),
        .Q(data_in_to_device[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF0F0A8F0F0F0F0F0)) 
    dec_run_i_1__0
       (.I0(dec_run),
        .I1(meq_min_reg_n_0),
        .I2(dec_run_reg_n_0),
        .I3(s_ovflw1),
        .I4(s_ovflw12_out),
        .I5(dec_run_i_3__0_n_0),
        .O(dec_run_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    dec_run_i_2__0
       (.I0(s_state[2]),
        .I1(s_state[1]),
        .I2(s_state[3]),
        .O(dec_run));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'hF3DF)) 
    dec_run_i_3__0
       (.I0(s_state[3]),
        .I1(s_state[2]),
        .I2(s_state[0]),
        .I3(s_state[1]),
        .O(dec_run_i_3__0_n_0));
  FDRE dec_run_reg
       (.C(CLK),
        .CE(1'b1),
        .D(dec_run_i_1__0_n_0),
        .Q(dec_run_reg_n_0),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT5 #(
    .INIT(32'hFFFFCCFE)) 
    delay_change_i_1__0
       (.I0(pd_min),
        .I1(dec_run_reg_n_0),
        .I2(pd_max),
        .I3(delay_change_reg_n_0),
        .I4(inc_run_reg_n_0),
        .O(delay_change_i_1__0_n_0));
  FDRE delay_change_reg
       (.C(CLK),
        .CE(1'b1),
        .D(delay_change_i_1__0_n_0),
        .Q(delay_change_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'hBBBB0800BBBB0000)) 
    inc_run_i_1__0
       (.I0(dec_run),
        .I1(dec_run_i_3__0_n_0),
        .I2(delay_change_reg_n_0),
        .I3(pd_max),
        .I4(inc_run_reg_n_0),
        .I5(meq_max),
        .O(inc_run_i_1__0_n_0));
  FDRE inc_run_reg
       (.C(CLK),
        .CE(1'b1),
        .D(inc_run_i_1__0_n_0),
        .Q(inc_run_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'hFFDF55DF0020AA20)) 
    \m_delay_mux[0]_i_1__0 
       (.I0(\m_delay_mux[0]_i_2__0_n_0 ),
        .I1(m_delay_val_int1__0),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int146_out__0),
        .I5(m_delay_mux__0[0]),
        .O(\m_delay_mux[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \m_delay_mux[0]_i_2__0 
       (.I0(s_state[2]),
        .I1(s_state[1]),
        .I2(s_state[3]),
        .I3(s_state[0]),
        .O(\m_delay_mux[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h9A99FFFF65660000)) 
    \m_delay_mux[1]_i_1__0 
       (.I0(m_delay_mux__0[0]),
        .I1(inc_run_reg_n_0),
        .I2(delay_change_reg_n_0),
        .I3(pd_max),
        .I4(\m_delay_mux[1]_i_2__0_n_0 ),
        .I5(m_delay_mux__0[1]),
        .O(\m_delay_mux[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7474744400000000)) 
    \m_delay_mux[1]_i_2__0 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(s_ovflw1),
        .I3(meq_min_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(\m_delay_mux[0]_i_2__0_n_0 ),
        .O(\m_delay_mux[1]_i_2__0_n_0 ));
  FDSE \m_delay_mux_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\m_delay_mux[0]_i_1__0_n_0 ),
        .Q(m_delay_mux__0[0]),
        .S(not_rx_lckd_intd4));
  FDRE \m_delay_mux_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\m_delay_mux[1]_i_1__0_n_0 ),
        .Q(m_delay_mux__0[1]),
        .R(not_rx_lckd_intd4));
  LUT6 #(
    .INIT(64'h888888BBB8BBB8BB)) 
    \m_delay_val_int[0]_i_1__0 
       (.I0(\m_delay_val_int_reg[4]_0 [0]),
        .I1(not_rx_lckd_intd4),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int1__0),
        .I5(Q[0]),
        .O(\m_delay_val_int[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hB888B8BB88BB88BB)) 
    \m_delay_val_int[1]_i_1__0 
       (.I0(\m_delay_val_int_reg[4]_0 [1]),
        .I1(not_rx_lckd_intd4),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(m_delay_val_int1__0),
        .I5(\m_delay_val_int[1]_i_2__0_n_0 ),
        .O(\m_delay_val_int[1]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \m_delay_val_int[1]_i_2__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\m_delay_val_int[1]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \m_delay_val_int[2]_i_1__0 
       (.I0(\m_delay_val_int_reg[4]_0 [2]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[2]_i_2__0_n_0 ),
        .O(\m_delay_val_int[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h338BBB03BB038B33)) 
    \m_delay_val_int[2]_i_2__0 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(m_delay_val_int1__0),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\m_delay_val_int[2]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_delay_val_int[3]_i_1__0 
       (.I0(\m_delay_val_int_reg[4]_0 [3]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[3]_i_2__0_n_0 ),
        .I3(s_ovflw12_out),
        .I4(\m_delay_val_int[3]_i_3__0_n_0 ),
        .O(\m_delay_val_int[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0110101010101010)) 
    \m_delay_val_int[3]_i_2__0 
       (.I0(inc_run_reg_n_0),
        .I1(meq_max),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\m_delay_val_int[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFEFEFEFEFEFEFEEF)) 
    \m_delay_val_int[3]_i_3__0 
       (.I0(dec_run_reg_n_0),
        .I1(meq_min_reg_n_0),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(\m_delay_val_int[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAAFAFAFEAA)) 
    \m_delay_val_int[4]_i_1__0 
       (.I0(not_rx_lckd_intd4),
        .I1(m_delay_val_int1__0),
        .I2(m_delay_val_int__19),
        .I3(s_ovflw1),
        .I4(s_ovflw12_out),
        .I5(m_delay_val_int146_out__0),
        .O(\m_delay_val_int[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \m_delay_val_int[4]_i_2__0 
       (.I0(\m_delay_val_int_reg[4]_0 [4]),
        .I1(not_rx_lckd_intd4),
        .I2(\m_delay_val_int[4]_i_8__0_n_0 ),
        .I3(s_ovflw12_out),
        .I4(\m_delay_val_int[4]_i_9__0_n_0 ),
        .O(\m_delay_val_int[4]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \m_delay_val_int[4]_i_3__0 
       (.I0(meq_min_reg_n_0),
        .I1(dec_run_reg_n_0),
        .O(m_delay_val_int1__0));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    \m_delay_val_int[4]_i_4__0 
       (.I0(s_state[3]),
        .I1(s_state[0]),
        .I2(s_state[2]),
        .I3(s_state[1]),
        .O(m_delay_val_int__19));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \m_delay_val_int[4]_i_5__0 
       (.I0(dec_run_reg_n_0),
        .I1(delay_change_reg_n_0),
        .I2(pd_min),
        .O(s_ovflw1));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'hBA)) 
    \m_delay_val_int[4]_i_6__0 
       (.I0(inc_run_reg_n_0),
        .I1(delay_change_reg_n_0),
        .I2(pd_max),
        .O(s_ovflw12_out));
  LUT2 #(
    .INIT(4'h1)) 
    \m_delay_val_int[4]_i_7__0 
       (.I0(meq_max),
        .I1(inc_run_reg_n_0),
        .O(m_delay_val_int146_out__0));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \m_delay_val_int[4]_i_8__0 
       (.I0(m_delay_val_int146_out__0),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\m_delay_val_int[4]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'h8888888888888882)) 
    \m_delay_val_int[4]_i_9__0 
       (.I0(m_delay_val_int1__0),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(Q[3]),
        .O(\m_delay_val_int[4]_i_9__0_n_0 ));
  FDRE \m_delay_val_int_reg[0] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1__0_n_0 ),
        .D(\m_delay_val_int[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[1] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1__0_n_0 ),
        .D(\m_delay_val_int[1]_i_1__0_n_0 ),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[2] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1__0_n_0 ),
        .D(\m_delay_val_int[2]_i_1__0_n_0 ),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[3] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1__0_n_0 ),
        .D(\m_delay_val_int[3]_i_1__0_n_0 ),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \m_delay_val_int_reg[4] 
       (.C(CLK),
        .CE(\m_delay_val_int[4]_i_1__0_n_0 ),
        .D(\m_delay_val_int[4]_i_2__0_n_0 ),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \mdataouta_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[0]),
        .Q(\mdataouta_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \mdataouta_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[1]),
        .Q(p_0_in14_in),
        .R(1'b0));
  FDRE \mdataouta_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[2]),
        .Q(p_0_in17_in),
        .R(1'b0));
  FDRE \mdataouta_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[3]),
        .Q(p_0_in21_in),
        .R(1'b0));
  FDRE \mdataouta_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[4]),
        .Q(p_0_in25_in),
        .R(1'b0));
  FDRE \mdataouta_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[5]),
        .Q(p_0_in29_in),
        .R(1'b0));
  FDRE \mdataouta_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[6]),
        .Q(p_0_in33_in),
        .R(1'b0));
  FDRE \mdataouta_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(D[7]),
        .Q(p_0_in37_in),
        .R(1'b0));
  FDRE mdataoutb_reg
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in37_in),
        .Q(mdataoutb),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[0]_i_1__0 
       (.I0(mdataoutb),
        .I1(\mdataouta_reg_n_0_[0] ),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in14_in),
        .O(\mdataoutc[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[1]_i_1__0 
       (.I0(\mdataouta_reg_n_0_[0] ),
        .I1(p_0_in14_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in17_in),
        .O(\mdataoutc[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[2]_i_1__0 
       (.I0(p_0_in14_in),
        .I1(p_0_in17_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in21_in),
        .O(\mdataoutc[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[3]_i_1__0 
       (.I0(p_0_in17_in),
        .I1(p_0_in21_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in25_in),
        .O(\mdataoutc[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[4]_i_1__0 
       (.I0(p_0_in21_in),
        .I1(p_0_in25_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in29_in),
        .O(\mdataoutc[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[5]_i_1__0 
       (.I0(p_0_in25_in),
        .I1(p_0_in29_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in33_in),
        .O(\mdataoutc[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[6]_i_1__0 
       (.I0(p_0_in29_in),
        .I1(p_0_in33_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(p_0_in37_in),
        .O(\mdataoutc[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \mdataoutc[7]_i_1__0 
       (.I0(p_0_in33_in),
        .I1(p_0_in37_in),
        .I2(m_delay_mux__0[1]),
        .I3(m_delay_mux__0[0]),
        .I4(D[0]),
        .O(\mdataoutc[7]_i_1__0_n_0 ));
  FDRE \mdataoutc_reg[0] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[0]_i_1__0_n_0 ),
        .Q(mdataoutc[0]),
        .R(1'b0));
  FDRE \mdataoutc_reg[1] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[1]_i_1__0_n_0 ),
        .Q(mdataoutc[1]),
        .R(1'b0));
  FDRE \mdataoutc_reg[2] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[2]_i_1__0_n_0 ),
        .Q(mdataoutc[2]),
        .R(1'b0));
  FDRE \mdataoutc_reg[3] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[3]_i_1__0_n_0 ),
        .Q(mdataoutc[3]),
        .R(1'b0));
  FDRE \mdataoutc_reg[4] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[4]_i_1__0_n_0 ),
        .Q(mdataoutc[4]),
        .R(1'b0));
  FDRE \mdataoutc_reg[5] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[5]_i_1__0_n_0 ),
        .Q(mdataoutc[5]),
        .R(1'b0));
  FDRE \mdataoutc_reg[6] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[6]_i_1__0_n_0 ),
        .Q(mdataoutc[6]),
        .R(1'b0));
  FDRE \mdataoutc_reg[7] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\mdataoutc[7]_i_1__0_n_0 ),
        .Q(mdataoutc[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    meq_max_i_1__0
       (.I0(Q[3]),
        .I1(Q[4]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(meq_max0));
  FDRE meq_max_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(meq_max0),
        .Q(meq_max),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h8888888B)) 
    meq_min_i_1__0
       (.I0(meq_min_reg_n_0),
        .I1(not_rx_lckd_intd4),
        .I2(Q[3]),
        .I3(Q[4]),
        .I4(meq_min_i_2__0_n_0),
        .O(meq_min_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    meq_min_i_2__0
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .O(meq_min_i_2__0_n_0));
  FDRE meq_min_reg
       (.C(CLK),
        .CE(1'b1),
        .D(meq_min_i_1__0_n_0),
        .Q(meq_min_reg_n_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctd[0]_i_1__0 
       (.I0(msxorda0__8),
        .I1(msxorda016_out__8),
        .I2(msxorda034_out__8),
        .I3(msxorda025_out__8),
        .O(\msxor_ctd[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctd[1]_i_1__0 
       (.I0(msxorda025_out__8),
        .I1(msxorda034_out__8),
        .I2(msxorda016_out__8),
        .I3(msxorda0__8),
        .O(\msxor_ctd[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_2__0 
       (.I0(p_0_in80_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in14_in),
        .I3(p_0_in17_in),
        .I4(p_0_in68_in),
        .O(msxorda025_out__8));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_3__0 
       (.I0(p_0_in92_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in17_in),
        .I3(p_0_in21_in),
        .I4(p_0_in80_in),
        .O(msxorda034_out__8));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctd[1]_i_4__0 
       (.I0(p_0_in68_in),
        .I1(s_ovflw_reg_n_0),
        .I2(\sdataouta_reg_n_0_[0] ),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(p_0_in14_in),
        .O(msxorda016_out__8));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctd[1]_i_5__0 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(s_ovflw_reg_n_0),
        .I2(mdataoutb),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(sdataoutb),
        .O(msxorda0__8));
  FDRE \msxor_ctd_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctd[0]_i_1__0_n_0 ),
        .Q(msxor_ctd[0]),
        .R(1'b0));
  FDRE \msxor_ctd_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctd[1]_i_1__0_n_0 ),
        .Q(msxor_ctd[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctdx[0]_i_1__0 
       (.I0(msxorda043_out__8),
        .I1(msxorda052_out__8),
        .I2(msxorda070_out__8),
        .I3(msxorda061_out__8),
        .O(\msxor_ctdx[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctdx[1]_i_1__0 
       (.I0(msxorda061_out__8),
        .I1(msxorda070_out__8),
        .I2(msxorda052_out__8),
        .I3(msxorda043_out__8),
        .O(\msxor_ctdx[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_2__0 
       (.I0(p_0_in128_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in116_in),
        .I3(p_0_in29_in),
        .I4(p_0_in33_in),
        .O(msxorda061_out__8));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_3__0 
       (.I0(p_0_in140_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in128_in),
        .I3(p_0_in33_in),
        .I4(p_0_in37_in),
        .O(msxorda070_out__8));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h0047B800)) 
    \msxor_ctdx[1]_i_4__0 
       (.I0(p_0_in116_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in104_in),
        .I3(p_0_in25_in),
        .I4(p_0_in29_in),
        .O(msxorda052_out__8));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h04B00780)) 
    \msxor_ctdx[1]_i_5__0 
       (.I0(p_0_in104_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in21_in),
        .I3(p_0_in25_in),
        .I4(p_0_in92_in),
        .O(msxorda043_out__8));
  FDRE \msxor_ctdx_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctdx[0]_i_1__0_n_0 ),
        .Q(msxor_ctdx[0]),
        .R(1'b0));
  FDRE \msxor_ctdx_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctdx[1]_i_1__0_n_0 ),
        .Q(msxor_ctdx[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_cti[0]_i_1__0 
       (.I0(msxoria0__8),
        .I1(msxoria084_out__8),
        .I2(msxoria0102_out__8),
        .I3(msxoria093_out__8),
        .O(\msxor_cti[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_cti[1]_i_1__0 
       (.I0(msxoria093_out__8),
        .I1(msxoria0102_out__8),
        .I2(msxoria084_out__8),
        .I3(msxoria0__8),
        .O(\msxor_cti[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_2__0 
       (.I0(p_0_in80_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in68_in),
        .I3(p_0_in14_in),
        .I4(p_0_in17_in),
        .O(msxoria093_out__8));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_3__0 
       (.I0(p_0_in92_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in80_in),
        .I3(p_0_in17_in),
        .I4(p_0_in21_in),
        .O(msxoria0102_out__8));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_4__0 
       (.I0(p_0_in68_in),
        .I1(s_ovflw_reg_n_0),
        .I2(\sdataouta_reg_n_0_[0] ),
        .I3(\mdataouta_reg_n_0_[0] ),
        .I4(p_0_in14_in),
        .O(msxoria084_out__8));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_cti[1]_i_5__0 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(s_ovflw_reg_n_0),
        .I2(sdataoutb),
        .I3(mdataoutb),
        .I4(\mdataouta_reg_n_0_[0] ),
        .O(msxoria0__8));
  FDRE \msxor_cti_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_cti[0]_i_1__0_n_0 ),
        .Q(msxor_cti[0]),
        .R(1'b0));
  FDRE \msxor_cti_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_cti[1]_i_1__0_n_0 ),
        .Q(msxor_cti[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'hE996)) 
    \msxor_ctix[0]_i_1__0 
       (.I0(msxoria0111_out__8),
        .I1(msxoria0120_out__8),
        .I2(msxoria0138_out__8),
        .I3(msxoria0129_out__8),
        .O(\msxor_ctix[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT4 #(
    .INIT(16'hFEE8)) 
    \msxor_ctix[1]_i_1__0 
       (.I0(msxoria0129_out__8),
        .I1(msxoria0138_out__8),
        .I2(msxoria0120_out__8),
        .I3(msxoria0111_out__8),
        .O(\msxor_ctix[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_2__0 
       (.I0(p_0_in128_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in116_in),
        .I3(p_0_in29_in),
        .I4(p_0_in33_in),
        .O(msxoria0129_out__8));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_3__0 
       (.I0(p_0_in140_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in128_in),
        .I3(p_0_in33_in),
        .I4(p_0_in37_in),
        .O(msxoria0138_out__8));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_4__0 
       (.I0(p_0_in116_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in104_in),
        .I3(p_0_in25_in),
        .I4(p_0_in29_in),
        .O(msxoria0120_out__8));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT5 #(
    .INIT(32'h00B84700)) 
    \msxor_ctix[1]_i_5__0 
       (.I0(p_0_in104_in),
        .I1(s_ovflw_reg_n_0),
        .I2(p_0_in92_in),
        .I3(p_0_in21_in),
        .I4(p_0_in25_in),
        .O(msxoria0111_out__8));
  FDRE \msxor_ctix_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctix[0]_i_1__0_n_0 ),
        .Q(msxor_ctix[0]),
        .R(1'b0));
  FDRE \msxor_ctix_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\msxor_ctix[1]_i_1__0_n_0 ),
        .Q(msxor_ctix[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \pd_hold[0]_i_1__0 
       (.I0(delay_change_reg_n_0),
        .I1(inc_run_reg_n_0),
        .I2(dec_run_reg_n_0),
        .O(pdcount1));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[1]_i_1__0 
       (.I0(p_0_in1_in[1]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[2]_i_1__0 
       (.I0(p_0_in1_in[2]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[3]_i_1__0 
       (.I0(p_0_in1_in[3]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[4]_i_1__0 
       (.I0(p_0_in1_in[4]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[5]_i_1__0 
       (.I0(p_0_in1_in[5]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[5]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[6]_i_1__0 
       (.I0(p_0_in1_in[6]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[6]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[7]_i_1__0 
       (.I0(p_0_in),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \pd_hold[7]_i_2__0 
       (.I0(p_0_in1_in[7]),
        .I1(dec_run_reg_n_0),
        .I2(inc_run_reg_n_0),
        .I3(delay_change_reg_n_0),
        .O(\pd_hold[7]_i_2__0_n_0 ));
  FDRE \pd_hold_reg[0] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(pdcount1),
        .Q(p_0_in1_in[1]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[1] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[1]_i_1__0_n_0 ),
        .Q(p_0_in1_in[2]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[2] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[2]_i_1__0_n_0 ),
        .Q(p_0_in1_in[3]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[3] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[3]_i_1__0_n_0 ),
        .Q(p_0_in1_in[4]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[4] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[4]_i_1__0_n_0 ),
        .Q(p_0_in1_in[5]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[5] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[5]_i_1__0_n_0 ),
        .Q(p_0_in1_in[6]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[6] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[6]_i_1__0_n_0 ),
        .Q(p_0_in1_in[7]),
        .R(not_rx_lckd_intd4));
  FDRE \pd_hold_reg[7] 
       (.C(CLK),
        .CE(\pd_hold[7]_i_1__0_n_0 ),
        .D(\pd_hold[7]_i_2__0_n_0 ),
        .Q(p_0_in),
        .R(not_rx_lckd_intd4));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h04)) 
    pd_max_i_1__0
       (.I0(delay_change_reg_n_0),
        .I1(pd_max242_in__0),
        .I2(pd_max),
        .O(pd_max0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    pd_max_i_2__0
       (.I0(pdcount_reg[5]),
        .I1(pdcount_reg[4]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[0]),
        .I4(pdcount_reg[3]),
        .I5(pdcount_reg[2]),
        .O(pd_max242_in__0));
  FDRE pd_max_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(pd_max0),
        .Q(pd_max),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    pd_min_i_1
       (.I0(not_rx_lckd_intd4),
        .O(p_12_in));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h04)) 
    pd_min_i_1__0
       (.I0(delay_change_reg_n_0),
        .I1(pd_min241_in__0),
        .I2(pd_min),
        .O(pd_min0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    pd_min_i_2__0
       (.I0(pdcount_reg[5]),
        .I1(pdcount_reg[4]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[0]),
        .I4(pdcount_reg[3]),
        .I5(pdcount_reg[2]),
        .O(pd_min241_in__0));
  FDRE pd_min_reg
       (.C(CLK),
        .CE(p_12_in),
        .D(pd_min0),
        .Q(pd_min),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \pdcount[0]_i_1__0 
       (.I0(pdcount_reg[0]),
        .O(\pdcount[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h69)) 
    \pdcount[1]_i_1__0 
       (.I0(pdcount_reg[0]),
        .I1(\pdcount[5]_i_4__0_n_0 ),
        .I2(pdcount_reg[1]),
        .O(\pdcount[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT4 #(
    .INIT(16'h78E1)) 
    \pdcount[2]_i_1__0 
       (.I0(pdcount_reg[0]),
        .I1(\pdcount[5]_i_4__0_n_0 ),
        .I2(pdcount_reg[2]),
        .I3(pdcount_reg[1]),
        .O(\pdcount[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT5 #(
    .INIT(32'h7F80FE01)) 
    \pdcount[3]_i_1__0 
       (.I0(\pdcount[5]_i_4__0_n_0 ),
        .I1(pdcount_reg[0]),
        .I2(pdcount_reg[1]),
        .I3(pdcount_reg[3]),
        .I4(pdcount_reg[2]),
        .O(\pdcount[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF8000FFFE0001)) 
    \pdcount[4]_i_1__0 
       (.I0(pdcount_reg[1]),
        .I1(pdcount_reg[0]),
        .I2(\pdcount[5]_i_4__0_n_0 ),
        .I3(pdcount_reg[2]),
        .I4(pdcount_reg[4]),
        .I5(pdcount_reg[3]),
        .O(\pdcount[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \pdcount[5]_i_1__0 
       (.I0(not_rx_lckd_intd4),
        .I1(p_0_in),
        .I2(delay_change_reg_n_0),
        .I3(inc_run_reg_n_0),
        .I4(dec_run_reg_n_0),
        .O(\pdcount[5]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \pdcount[5]_i_2__0 
       (.I0(\pdcount[5]_i_4__0_n_0 ),
        .I1(pd_min241_in__0),
        .I2(p_0_in47_in),
        .O(\pdcount[5]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'h78E1)) 
    \pdcount[5]_i_3__0 
       (.I0(\pdcount[5]_i_5__0_n_0 ),
        .I1(pdcount_reg[3]),
        .I2(pdcount_reg[5]),
        .I3(pdcount_reg[4]),
        .O(\pdcount[5]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \pdcount[5]_i_4__0 
       (.I0(\action_reg_n_0_[0] ),
        .I1(pd_max242_in__0),
        .O(\pdcount[5]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h5D55555555554544)) 
    \pdcount[5]_i_5__0 
       (.I0(pdcount_reg[3]),
        .I1(pdcount_reg[2]),
        .I2(pd_max242_in__0),
        .I3(\action_reg_n_0_[0] ),
        .I4(pdcount_reg[0]),
        .I5(pdcount_reg[1]),
        .O(\pdcount[5]_i_5__0_n_0 ));
  FDRE \pdcount_reg[0] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[0]_i_1__0_n_0 ),
        .Q(pdcount_reg[0]),
        .R(\pdcount[5]_i_1__0_n_0 ));
  FDRE \pdcount_reg[1] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[1]_i_1__0_n_0 ),
        .Q(pdcount_reg[1]),
        .R(\pdcount[5]_i_1__0_n_0 ));
  FDRE \pdcount_reg[2] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[2]_i_1__0_n_0 ),
        .Q(pdcount_reg[2]),
        .R(\pdcount[5]_i_1__0_n_0 ));
  FDRE \pdcount_reg[3] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[3]_i_1__0_n_0 ),
        .Q(pdcount_reg[3]),
        .R(\pdcount[5]_i_1__0_n_0 ));
  FDRE \pdcount_reg[4] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[4]_i_1__0_n_0 ),
        .Q(pdcount_reg[4]),
        .R(\pdcount[5]_i_1__0_n_0 ));
  FDSE \pdcount_reg[5] 
       (.C(CLK),
        .CE(\pdcount[5]_i_2__0_n_0 ),
        .D(\pdcount[5]_i_3__0_n_0 ),
        .Q(pdcount_reg[5]),
        .S(\pdcount[5]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \s_delay_mux[0]_i_1__0 
       (.I0(m_delay_mux__0[0]),
        .I1(\s_delay_mux[1]_i_2__0_n_0 ),
        .I2(s_delay_mux__0[0]),
        .O(\s_delay_mux[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \s_delay_mux[1]_i_1__0 
       (.I0(m_delay_mux__0[1]),
        .I1(\s_delay_mux[1]_i_2__0_n_0 ),
        .I2(s_delay_mux__0[1]),
        .O(\s_delay_mux[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7474744400000000)) 
    \s_delay_mux[1]_i_2__0 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(s_ovflw1),
        .I3(meq_min_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(\s_delay_mux[1]_i_3__0_n_0 ),
        .O(\s_delay_mux[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \s_delay_mux[1]_i_3__0 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .I2(s_state[2]),
        .I3(s_state[3]),
        .O(\s_delay_mux[1]_i_3__0_n_0 ));
  FDSE \s_delay_mux_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(\s_delay_mux[0]_i_1__0_n_0 ),
        .Q(s_delay_mux__0[0]),
        .S(not_rx_lckd_intd4));
  FDRE \s_delay_mux_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(\s_delay_mux[1]_i_1__0_n_0 ),
        .Q(s_delay_mux__0[1]),
        .R(not_rx_lckd_intd4));
  LUT5 #(
    .INIT(32'hFFF100F1)) 
    \s_delay_val_int[0]_i_1 
       (.I0(Q[0]),
        .I1(s_ovflw1),
        .I2(s_ovflw12_out),
        .I3(not_rx_lckd_intd4),
        .I4(\m_delay_val_int_reg[4]_0 [0]),
        .O(\s_delay_val_int[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF090000FF09)) 
    \s_delay_val_int[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [1]),
        .O(\s_delay_val_int[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF090000FF09)) 
    \s_delay_val_int[2]_i_1 
       (.I0(Q[2]),
        .I1(\s_delay_val_int[2]_i_2__0_n_0 ),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [2]),
        .O(\s_delay_val_int[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \s_delay_val_int[2]_i_2__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\s_delay_val_int[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFF060000FF06)) 
    \s_delay_val_int[3]_i_1 
       (.I0(Q[3]),
        .I1(\s_delay_val_int[3]_i_2__0_n_0 ),
        .I2(s_ovflw1),
        .I3(s_ovflw12_out),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [3]),
        .O(\s_delay_val_int[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \s_delay_val_int[3]_i_2__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(\s_delay_val_int[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF0C440CFF)) 
    \s_delay_val_int[4]_i_1__0 
       (.I0(m_delay_val_int1__0),
        .I1(\s_delay_val_int[4]_i_3__0_n_0 ),
        .I2(m_delay_val_int146_out__0),
        .I3(s_ovflw12_out),
        .I4(s_ovflw1),
        .I5(not_rx_lckd_intd4),
        .O(s_delay_val_int0));
  LUT6 #(
    .INIT(64'hFFFF00A2000000A2)) 
    \s_delay_val_int[4]_i_2 
       (.I0(\s_delay_val_int[4]_i_4__0_n_0 ),
        .I1(pd_max),
        .I2(delay_change_reg_n_0),
        .I3(inc_run_reg_n_0),
        .I4(not_rx_lckd_intd4),
        .I5(\m_delay_val_int_reg[4]_0 [4]),
        .O(\s_delay_val_int[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \s_delay_val_int[4]_i_3__0 
       (.I0(s_state[2]),
        .I1(s_state[3]),
        .I2(s_state[1]),
        .I3(s_state[0]),
        .O(\s_delay_val_int[4]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000006666666A)) 
    \s_delay_val_int[4]_i_4__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(s_ovflw1),
        .O(\s_delay_val_int[4]_i_4__0_n_0 ));
  FDRE \s_delay_val_int_reg[0] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[0]_i_1_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [0]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[1] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[1]_i_1__0_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [1]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[2] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[2]_i_1_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [2]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[3] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[3]_i_1_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [3]),
        .R(1'b0));
  FDRE \s_delay_val_int_reg[4] 
       (.C(CLK),
        .CE(s_delay_val_int0),
        .D(\s_delay_val_int[4]_i_2_n_0 ),
        .Q(\s_delay_val_int_reg[4]_0 [4]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00003301)) 
    s_ovflw_i_1__0
       (.I0(pd_min),
        .I1(dec_run_reg_n_0),
        .I2(pd_max),
        .I3(delay_change_reg_n_0),
        .I4(inc_run_reg_n_0),
        .I5(s_ovflw_reg_n_0),
        .O(s_ovflw_i_1__0_n_0));
  FDRE s_ovflw_reg
       (.C(CLK),
        .CE(1'b1),
        .D(s_ovflw_i_1__0_n_0),
        .Q(s_ovflw_reg_n_0),
        .R(not_rx_lckd_intd4));
  LUT1 #(
    .INIT(2'h1)) 
    \s_state[0]_i_1__0 
       (.I0(s_state[0]),
        .O(s_state0));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \s_state[1]_i_1__0 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \s_state[2]_i_1__0 
       (.I0(s_state[0]),
        .I1(s_state[1]),
        .I2(s_state[2]),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'h7777447477774444)) 
    \s_state[3]_i_1__0 
       (.I0(m_delay_val_int146_out__0),
        .I1(s_ovflw12_out),
        .I2(pd_min),
        .I3(delay_change_reg_n_0),
        .I4(dec_run_reg_n_0),
        .I5(meq_min_reg_n_0),
        .O(\s_state[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \s_state[3]_i_2__0 
       (.I0(s_state[1]),
        .I1(s_state[0]),
        .I2(s_state[2]),
        .I3(s_state[3]),
        .O(p_1_in[3]));
  FDRE \s_state_reg[0] 
       (.C(CLK),
        .CE(\s_state[3]_i_1__0_n_0 ),
        .D(s_state0),
        .Q(s_state[0]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[1] 
       (.C(CLK),
        .CE(\s_state[3]_i_1__0_n_0 ),
        .D(p_1_in[1]),
        .Q(s_state[1]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[2] 
       (.C(CLK),
        .CE(\s_state[3]_i_1__0_n_0 ),
        .D(p_1_in[2]),
        .Q(s_state[2]),
        .R(not_rx_lckd_intd4));
  FDRE \s_state_reg[3] 
       (.C(CLK),
        .CE(\s_state[3]_i_1__0_n_0 ),
        .D(p_1_in[3]),
        .Q(s_state[3]),
        .R(not_rx_lckd_intd4));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[0]_i_1__0 
       (.I0(\sdataoutc_reg[7]_0 ),
        .O(sdataout_8[0]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[1]_i_1__0 
       (.I0(p_5_out),
        .O(sdataout_8[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[2]_i_1__0 
       (.I0(p_6_out),
        .O(sdataout_8[2]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[3]_i_1__0 
       (.I0(p_7_out),
        .O(sdataout_8[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[4]_i_1__0 
       (.I0(\sdataouta_reg[4]_0 ),
        .O(sdataout_8[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[5]_i_1__0 
       (.I0(\sdataouta_reg[5]_0 ),
        .O(sdataout_8[5]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[6]_i_1__0 
       (.I0(p_10_out),
        .O(sdataout_8[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \sdataouta[7]_i_1__0 
       (.I0(p_11_out),
        .O(sdataout_8[7]));
  FDRE \sdataouta_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[0]),
        .Q(\sdataouta_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \sdataouta_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[1]),
        .Q(p_0_in68_in),
        .R(1'b0));
  FDRE \sdataouta_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[2]),
        .Q(p_0_in80_in),
        .R(1'b0));
  FDRE \sdataouta_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[3]),
        .Q(p_0_in92_in),
        .R(1'b0));
  FDRE \sdataouta_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[4]),
        .Q(p_0_in104_in),
        .R(1'b0));
  FDRE \sdataouta_reg[5] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[5]),
        .Q(p_0_in116_in),
        .R(1'b0));
  FDRE \sdataouta_reg[6] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[6]),
        .Q(p_0_in128_in),
        .R(1'b0));
  FDRE \sdataouta_reg[7] 
       (.C(CLK),
        .CE(1'b1),
        .D(sdataout_8[7]),
        .Q(p_0_in140_in),
        .R(1'b0));
  FDRE sdataoutb_reg
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in140_in),
        .Q(sdataoutb),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[0]_i_1__0 
       (.I0(sdataoutb),
        .I1(\sdataouta_reg_n_0_[0] ),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in68_in),
        .O(\sdataoutc[0]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[1]_i_1__0 
       (.I0(\sdataouta_reg_n_0_[0] ),
        .I1(p_0_in68_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in80_in),
        .O(\sdataoutc[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[2]_i_1__0 
       (.I0(p_0_in68_in),
        .I1(p_0_in80_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in92_in),
        .O(\sdataoutc[2]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[3]_i_1__0 
       (.I0(p_0_in80_in),
        .I1(p_0_in92_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in104_in),
        .O(\sdataoutc[3]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[4]_i_1__0 
       (.I0(p_0_in92_in),
        .I1(p_0_in104_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in116_in),
        .O(\sdataoutc[4]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[5]_i_1__0 
       (.I0(p_0_in104_in),
        .I1(p_0_in116_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in128_in),
        .O(\sdataoutc[5]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCCFACC0A)) 
    \sdataoutc[6]_i_1__0 
       (.I0(p_0_in116_in),
        .I1(p_0_in128_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(p_0_in140_in),
        .O(\sdataoutc[6]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCC0ACCFA)) 
    \sdataoutc[7]_i_1__0 
       (.I0(p_0_in128_in),
        .I1(p_0_in140_in),
        .I2(s_delay_mux__0[1]),
        .I3(s_delay_mux__0[0]),
        .I4(\sdataoutc_reg[7]_0 ),
        .O(\sdataoutc[7]_i_1__0_n_0 ));
  FDRE \sdataoutc_reg[0] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[0]_i_1__0_n_0 ),
        .Q(sdataoutc[0]),
        .R(1'b0));
  FDRE \sdataoutc_reg[1] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[1]_i_1__0_n_0 ),
        .Q(sdataoutc[1]),
        .R(1'b0));
  FDRE \sdataoutc_reg[2] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[2]_i_1__0_n_0 ),
        .Q(sdataoutc[2]),
        .R(1'b0));
  FDRE \sdataoutc_reg[3] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[3]_i_1__0_n_0 ),
        .Q(sdataoutc[3]),
        .R(1'b0));
  FDRE \sdataoutc_reg[4] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[4]_i_1__0_n_0 ),
        .Q(sdataoutc[4]),
        .R(1'b0));
  FDRE \sdataoutc_reg[5] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[5]_i_1__0_n_0 ),
        .Q(sdataoutc[5]),
        .R(1'b0));
  FDRE \sdataoutc_reg[6] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[6]_i_1__0_n_0 ),
        .Q(sdataoutc[6]),
        .R(1'b0));
  FDRE \sdataoutc_reg[7] 
       (.C(CLK),
        .CE(p_12_in),
        .D(\sdataoutc[7]_i_1__0_n_0 ),
        .Q(sdataoutc[7]),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_clk_lane
   (out,
    cl_status_reg,
    cl_rxclkactivehs_reg_0,
    cl_mode,
    cl_errcontrol,
    cl_stopstate,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_2 ,
    rx_cl_lp_dn,
    rx_cl_lp_dp,
    core_rst,
    cl_enable,
    core_clk,
    dl_forcerxmode_t0,
    \en_init_to_reg.init_to_r_2_reg[13]_0 ,
    system_rst,
    dl_status_reg_bit_0_reg,
    dl_status_reg_bit_0_reg_0,
    D,
    \cl_rx_state_reg[3]_0 ,
    \cl_rx_state_reg[0]_0 );
  output out;
  output [2:0]cl_status_reg;
  output cl_rxclkactivehs_reg_0;
  output [0:0]cl_mode;
  output cl_errcontrol;
  output cl_stopstate;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg_2 ;
  input rx_cl_lp_dn;
  input rx_cl_lp_dp;
  input core_rst;
  input cl_enable;
  input core_clk;
  input dl_forcerxmode_t0;
  input [13:0]\en_init_to_reg.init_to_r_2_reg[13]_0 ;
  input system_rst;
  input dl_status_reg_bit_0_reg;
  input dl_status_reg_bit_0_reg_0;
  input [1:0]D;
  input \cl_rx_state_reg[3]_0 ;
  input [0:0]\cl_rx_state_reg[0]_0 ;

  wire [1:0]D;
  wire cl_enable;
  wire cl_enable_sync;
  wire cl_enable_sync_i_n_1;
  wire cl_enable_sync_i_n_2;
  wire cl_enable_sync_i_n_3;
  wire cl_enable_sync_i_n_5;
  wire cl_enable_sync_i_n_6;
  wire cl_errcontrol;
  wire cl_init_done_coreclk0;
  wire cl_init_done_coreclk1;
  wire [0:0]cl_mode;
  wire [1:1]cl_rx_state;
  wire cl_rx_state0;
  wire \cl_rx_state[0]_i_2_n_0 ;
  wire \cl_rx_state[3]_i_10_n_0 ;
  wire \cl_rx_state[3]_i_16_n_0 ;
  wire \cl_rx_state[3]_i_6_n_0 ;
  wire [0:0]\cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[3]_0 ;
  wire \cl_rx_state_reg_n_0_[0] ;
  wire \cl_rx_state_reg_n_0_[1] ;
  wire \cl_rx_state_reg_n_0_[2] ;
  wire \cl_rx_state_reg_n_0_[3] ;
  wire cl_rxclkactivehs1_out;
  wire cl_rxclkactivehs_i_2_n_0;
  (* RTL_KEEP = "true" *) wire cl_rxclkactivehs_reg_0;
  wire cl_rxulpsclknot;
  (* DONT_TOUCH *) wire cl_status_reg_bit_1;
  wire cl_status_reg_bit_1__0;
  wire cl_status_reg_bit_1_i_2_n_0;
  wire cl_status_reg_bit_1_i_3_n_0;
  (* DONT_TOUCH *) wire cl_status_reg_bit_2;
  wire cl_status_reg_bit_2__0;
  (* DONT_TOUCH *) wire cl_status_reg_bit_4;
  wire cl_status_reg_bit_4__0;
  wire cl_status_reg_bit_5_i_2_n_0;
  wire cl_status_reg_bit_5_i_3_n_0;
  wire cl_stopstate;
  wire cl_ulpsactivenot;
  wire cl_ulpsactivenot_i_1_n_0;
  wire cl_ulpsactivenot_i_2_n_0;
  wire cl_ulpsclknot_i_1_n_0;
  wire cl_ulpsclknot_i_2_n_0;
  wire clear;
  wire core_clk;
  wire core_rst;
  wire dl_forcerxmode_ris_edge;
  wire dl_forcerxmode_ris_edge0;
  wire dl_forcerxmode_sync_r;
  wire dl_forcerxmode_t0;
  wire dl_forcerxmode_t_reg_n_0;
  wire [1:0]dl_lp_st_t;
  wire dl_status_reg_bit_0_reg;
  wire dl_status_reg_bit_0_reg_0;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_i_5_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_i_6_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_i_7_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_i_8_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_i_9_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_2 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_0 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_1 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_2 ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_3 ;
  wire \en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[7]_i_5_n_0 ;
  wire [7:0]\en_cl_init_to_blk.init_to_cnt_level1_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level20 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 ;
  wire [13:0]\en_cl_init_to_blk.init_to_cnt_level2_reg ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ;
  wire \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ;
  wire [13:0]\en_init_to_reg.init_to_r_2 ;
  wire [13:0]\en_init_to_reg.init_to_r_2_reg[13]_0 ;
  wire [11:0]\en_init_to_reg.init_to_r_3 ;
  wire \en_init_to_reg.init_to_r_3[0]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[0]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[0]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_3[10]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[11]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[1]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[1]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[2]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[2]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[2]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_3[3]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[3]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[4]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[4]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[4]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_3[5]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[5]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[6]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[6]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[6]_i_3_n_0 ;
  wire \en_init_to_reg.init_to_r_3[7]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[7]_i_2_n_0 ;
  wire \en_init_to_reg.init_to_r_3[8]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_3[9]_i_1_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[10]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[11]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[12]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[13]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[14]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[1]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[2]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[3]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[4]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[5]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[6]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[7]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[8]_srl2_n_0 ;
  wire \en_init_to_reg.init_to_r_reg[9]_srl2_n_0 ;
  wire [13:0]init_count;
  wire lp_00_r;
  wire lp_00_r_i_2_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_1__1_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[4]_i_1__1_n_0 ;
  wire \lp_st_cnt[4]_i_4_n_0 ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_10;
  wire lp_state_sync0_i_n_11;
  wire lp_state_sync0_i_n_2;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync0_i_n_5;
  wire lp_state_sync0_i_n_6;
  wire lp_state_sync1_i_n_1;
  wire lp_state_sync1_i_n_10;
  wire lp_state_sync1_i_n_11;
  wire lp_state_sync1_i_n_2;
  wire lp_state_sync1_i_n_4;
  wire lp_state_sync1_i_n_5;
  wire lp_state_sync1_i_n_6;
  wire lp_state_sync1_i_n_8;
  wire lp_state_sync1_i_n_9;
  (* DONT_TOUCH *) wire out;
  wire [7:0]p_0_in;
  wire rx_cl_lp_dn;
  wire rx_cl_lp_dp;
  wire system_rst;
  wire [3:1]\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_O_UNCONNECTED ;
  wire [3:1]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED ;

  assign cl_status_reg[2] = cl_status_reg_bit_4;
  assign cl_status_reg[1] = cl_status_reg_bit_2;
  assign cl_status_reg[0] = cl_status_reg_bit_1;
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_19 cl_enable_sync_i
       (.cl_enable(cl_enable),
        .cl_rx_state(cl_rx_state),
        .\cl_rx_state_reg[0] (\cl_rx_state[0]_i_2_n_0 ),
        .\cl_rx_state_reg[0]_0 (lp_state_sync1_i_n_6),
        .\cl_rx_state_reg[1] (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .\cl_rx_state_reg[3] (cl_enable_sync_i_n_2),
        .\cl_rx_state_reg[3]_0 (cl_enable_sync_i_n_5),
        .\cl_rx_state_reg[3]_1 (\cl_rx_state[3]_i_6_n_0 ),
        .\cl_rx_state_reg[3]_2 (\cl_rx_state_reg_n_0_[3] ),
        .\cl_rx_state_reg[3]_3 (lp_state_sync0_i_n_6),
        .cl_rxclkactivehs1_out(cl_rxclkactivehs1_out),
        .cl_rxclkactivehs_reg(cl_rxclkactivehs_i_2_n_0),
        .cl_rxclkactivehs_reg_0(lp_11_r_reg_n_0),
        .cl_ulpsactivenot_reg(\cl_rx_state_reg[0]_0 ),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_forcerxmode_ris_edge(dl_forcerxmode_ris_edge),
        .dl_forcerxmode_ris_edge_reg(cl_enable_sync_i_n_6),
        .out(cl_enable_sync),
        .\s_level_out_bus_d3_reg[1] (cl_enable_sync_i_n_1),
        .s_level_out_d2_reg_0(cl_enable_sync_i_n_3),
        .system_rst(system_rst));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h00F40FFF)) 
    \cl_rx_state[0]_i_2 
       (.I0(lp_00_r),
        .I1(lp_11_r_reg_n_0),
        .I2(\cl_rx_state_reg_n_0_[1] ),
        .I3(\cl_rx_state_reg_n_0_[2] ),
        .I4(\cl_rx_state_reg_n_0_[0] ),
        .O(\cl_rx_state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFAFAFACA)) 
    \cl_rx_state[3]_i_10 
       (.I0(\cl_rx_state[3]_i_16_n_0 ),
        .I1(\cl_rx_state_reg_n_0_[1] ),
        .I2(\cl_rx_state_reg_n_0_[2] ),
        .I3(\cl_rx_state_reg_n_0_[0] ),
        .I4(lp_11_r_reg_n_0),
        .O(\cl_rx_state[3]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \cl_rx_state[3]_i_13 
       (.I0(dl_lp_st_t[1]),
        .I1(dl_lp_st_t[0]),
        .I2(dl_forcerxmode_t_reg_n_0),
        .O(cl_rx_state0));
  LUT6 #(
    .INIT(64'hFFFFBBBB33308888)) 
    \cl_rx_state[3]_i_16 
       (.I0(lp_10_r),
        .I1(\cl_rx_state_reg_n_0_[1] ),
        .I2(lp_00_r),
        .I3(lp_01_r),
        .I4(\cl_rx_state_reg_n_0_[0] ),
        .I5(lp_11_r_reg_n_0),
        .O(\cl_rx_state[3]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT5 #(
    .INIT(32'h00006626)) 
    \cl_rx_state[3]_i_6 
       (.I0(\cl_rx_state_reg_n_0_[1] ),
        .I1(\cl_rx_state_reg_n_0_[0] ),
        .I2(lp_11_r_reg_n_0),
        .I3(lp_00_r),
        .I4(\cl_rx_state_reg_n_0_[2] ),
        .O(\cl_rx_state[3]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(lp_state_sync0_i_n_5),
        .D(cl_enable_sync_i_n_5),
        .Q(\cl_rx_state_reg_n_0_[0] ),
        .R(\cl_rx_state_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(lp_state_sync0_i_n_5),
        .D(cl_enable_sync_i_n_6),
        .Q(\cl_rx_state_reg_n_0_[1] ),
        .R(\cl_rx_state_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(lp_state_sync0_i_n_5),
        .D(lp_state_sync0_i_n_10),
        .Q(\cl_rx_state_reg_n_0_[2] ),
        .R(\cl_rx_state_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cl_rx_state_reg[3] 
       (.C(core_clk),
        .CE(lp_state_sync0_i_n_5),
        .D(cl_enable_sync_i_n_2),
        .Q(\cl_rx_state_reg_n_0_[3] ),
        .R(\cl_rx_state_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hFFFF0004)) 
    cl_rxclkactivehs_i_2
       (.I0(\cl_rx_state_reg_n_0_[1] ),
        .I1(\cl_rx_state_reg_n_0_[3] ),
        .I2(\cl_rx_state_reg_n_0_[0] ),
        .I3(\cl_rx_state_reg_n_0_[2] ),
        .I4(cl_rxclkactivehs_reg_0),
        .O(cl_rxclkactivehs_i_2_n_0));
  (* KEEP = "yes" *) 
  FDCE cl_rxclkactivehs_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(cl_rxclkactivehs1_out),
        .Q(cl_rxclkactivehs_reg_0));
  FDRE cl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_1),
        .Q(cl_mode),
        .R(cl_enable_sync_i_n_1));
  LUT6 #(
    .INIT(64'hFFF0FA30F0F0FA30)) 
    cl_status_reg_bit_1_i_1
       (.I0(lp_00_r),
        .I1(lp_11_r_reg_n_0),
        .I2(cl_status_reg_bit_1),
        .I3(cl_status_reg_bit_1_i_2_n_0),
        .I4(cl_status_reg_bit_1_i_3_n_0),
        .I5(lp_10_r),
        .O(cl_status_reg_bit_1__0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT4 #(
    .INIT(16'h1400)) 
    cl_status_reg_bit_1_i_2
       (.I0(\cl_rx_state_reg_n_0_[2] ),
        .I1(\cl_rx_state_reg_n_0_[0] ),
        .I2(\cl_rx_state_reg_n_0_[1] ),
        .I3(\cl_rx_state_reg_n_0_[3] ),
        .O(cl_status_reg_bit_1_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    cl_status_reg_bit_1_i_3
       (.I0(\cl_rx_state_reg_n_0_[2] ),
        .I1(\cl_rx_state_reg_n_0_[3] ),
        .I2(\cl_rx_state_reg_n_0_[0] ),
        .O(cl_status_reg_bit_1_i_3_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE cl_status_reg_bit_1_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_status_reg_bit_1__0),
        .Q(cl_status_reg_bit_1),
        .R(cl_enable_sync_i_n_1));
  LUT6 #(
    .INIT(64'hFFF0FA30F0F0FA30)) 
    cl_status_reg_bit_2_i_1
       (.I0(lp_00_r),
        .I1(lp_11_r_reg_n_0),
        .I2(cl_status_reg_bit_2),
        .I3(cl_status_reg_bit_1_i_2_n_0),
        .I4(cl_status_reg_bit_1_i_3_n_0),
        .I5(lp_10_r),
        .O(cl_status_reg_bit_2__0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE cl_status_reg_bit_2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_status_reg_bit_2__0),
        .Q(cl_status_reg_bit_2),
        .R(cl_enable_sync_i_n_1));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE cl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_status_reg_bit_4__0),
        .Q(cl_status_reg_bit_4),
        .R(cl_enable_sync_i_n_1));
  LUT6 #(
    .INIT(64'h30B833BB30B80088)) 
    cl_status_reg_bit_5_i_2
       (.I0(lp_01_r),
        .I1(\cl_rx_state_reg_n_0_[3] ),
        .I2(lp_10_r),
        .I3(\cl_rx_state_reg_n_0_[2] ),
        .I4(\cl_rx_state_reg_n_0_[1] ),
        .I5(lp_00_r),
        .O(cl_status_reg_bit_5_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000108888)) 
    cl_status_reg_bit_5_i_3
       (.I0(\cl_rx_state_reg_n_0_[2] ),
        .I1(lp_11_r_reg_n_0),
        .I2(lp_01_r),
        .I3(lp_00_r),
        .I4(\cl_rx_state_reg_n_0_[0] ),
        .I5(\cl_rx_state_reg_n_0_[1] ),
        .O(cl_status_reg_bit_5_i_3_n_0));
  FDRE cl_status_reg_bit_5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_2),
        .Q(cl_errcontrol),
        .R(cl_enable_sync_i_n_1));
  FDRE cl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_3),
        .Q(cl_stopstate),
        .R(cl_enable_sync_i_n_1));
  LUT4 #(
    .INIT(16'h8F80)) 
    cl_ulpsactivenot_i_1
       (.I0(\cl_rx_state_reg_n_0_[1] ),
        .I1(lp_10_r),
        .I2(cl_ulpsactivenot_i_2_n_0),
        .I3(cl_ulpsactivenot),
        .O(cl_ulpsactivenot_i_1_n_0));
  LUT6 #(
    .INIT(64'h0044400000004000)) 
    cl_ulpsactivenot_i_2
       (.I0(\cl_rx_state_reg_n_0_[2] ),
        .I1(\cl_rx_state_reg_n_0_[3] ),
        .I2(lp_10_r),
        .I3(\cl_rx_state_reg_n_0_[1] ),
        .I4(\cl_rx_state_reg_n_0_[0] ),
        .I5(lp_00_r),
        .O(cl_ulpsactivenot_i_2_n_0));
  FDSE cl_ulpsactivenot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_ulpsactivenot_i_1_n_0),
        .Q(cl_ulpsactivenot),
        .S(cl_enable_sync_i_n_1));
  LUT4 #(
    .INIT(16'h8F80)) 
    cl_ulpsclknot_i_1
       (.I0(lp_11_r_reg_n_0),
        .I1(\cl_rx_state_reg_n_0_[1] ),
        .I2(cl_ulpsclknot_i_2_n_0),
        .I3(cl_rxulpsclknot),
        .O(cl_ulpsclknot_i_1_n_0));
  LUT6 #(
    .INIT(64'h0808080000000800)) 
    cl_ulpsclknot_i_2
       (.I0(\cl_rx_state_reg_n_0_[3] ),
        .I1(\cl_rx_state_reg_n_0_[0] ),
        .I2(\cl_rx_state_reg_n_0_[2] ),
        .I3(lp_00_r),
        .I4(\cl_rx_state_reg_n_0_[1] ),
        .I5(lp_11_r_reg_n_0),
        .O(cl_ulpsclknot_i_2_n_0));
  FDSE cl_ulpsclknot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_ulpsclknot_i_1_n_0),
        .Q(cl_rxulpsclknot),
        .S(cl_enable_sync_i_n_1));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dl_forcerxmode_ris_edge_i_1
       (.I0(dl_forcerxmode_t_reg_n_0),
        .I1(dl_forcerxmode_sync_r),
        .O(dl_forcerxmode_ris_edge0));
  FDRE dl_forcerxmode_ris_edge_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_ris_edge0),
        .Q(dl_forcerxmode_ris_edge),
        .R(1'b0));
  FDRE dl_forcerxmode_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_t_reg_n_0),
        .Q(dl_forcerxmode_sync_r),
        .R(1'b0));
  FDRE dl_forcerxmode_t_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_t0),
        .Q(dl_forcerxmode_t_reg_n_0),
        .R(1'b0));
  FDRE \dl_lp_st_t_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(dl_lp_st_t[0]),
        .R(1'b0));
  FDRE \dl_lp_st_t_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(dl_lp_st_t[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h75)) 
    dl_status_reg_bit_6_i_4
       (.I0(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I1(system_rst),
        .I2(dl_status_reg_bit_0_reg),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 ));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h75)) 
    dl_status_reg_bit_6_i_4__0
       (.I0(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .I1(system_rst),
        .I2(dl_status_reg_bit_0_reg_0),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg_2 ));
  LUT2 #(
    .INIT(4'h1)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_5 
       (.I0(init_count[12]),
        .I1(init_count[13]),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_6 
       (.I0(init_count[9]),
        .I1(\en_init_to_reg.init_to_r_3 [9]),
        .I2(\en_init_to_reg.init_to_r_3 [11]),
        .I3(init_count[11]),
        .I4(\en_init_to_reg.init_to_r_3 [10]),
        .I5(init_count[10]),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_7 
       (.I0(init_count[6]),
        .I1(\en_init_to_reg.init_to_r_3 [6]),
        .I2(\en_init_to_reg.init_to_r_3 [8]),
        .I3(init_count[8]),
        .I4(\en_init_to_reg.init_to_r_3 [7]),
        .I5(init_count[7]),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_8 
       (.I0(init_count[3]),
        .I1(\en_init_to_reg.init_to_r_3 [3]),
        .I2(\en_init_to_reg.init_to_r_3 [5]),
        .I3(init_count[5]),
        .I4(\en_init_to_reg.init_to_r_3 [4]),
        .I5(init_count[4]),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_9 
       (.I0(init_count[0]),
        .I1(\en_init_to_reg.init_to_r_3 [0]),
        .I2(\en_init_to_reg.init_to_r_3 [2]),
        .I3(init_count[2]),
        .I4(\en_init_to_reg.init_to_r_3 [1]),
        .I5(init_count[1]),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_i_9_n_0 ));
  FDRE \en_cl_init_to_blk.cl_init_done_coreclk_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync0_i_n_4),
        .Q(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .R(1'b0));
  CARRY4 \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_3 
       (.CI(\en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_0 ),
        .CO({\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_3_CO_UNCONNECTED [3:1],cl_init_done_coreclk1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,1'b0,\en_cl_init_to_blk.cl_init_done_coreclk_i_5_n_0 }));
  CARRY4 \en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4 
       (.CI(1'b0),
        .CO({\en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_0 ,\en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_1 ,\en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_2 ,\en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_en_cl_init_to_blk.cl_init_done_coreclk_reg_i_4_O_UNCONNECTED [3:0]),
        .S({\en_cl_init_to_blk.cl_init_done_coreclk_i_6_n_0 ,\en_cl_init_to_blk.cl_init_done_coreclk_i_7_n_0 ,\en_cl_init_to_blk.cl_init_done_coreclk_i_8_n_0 ,\en_cl_init_to_blk.cl_init_done_coreclk_i_9_n_0 }));
  LUT5 #(
    .INIT(32'hAAAEAAAB)) 
    \en_cl_init_to_blk.cl_init_done_div4clk_i_1 
       (.I0(dl_forcerxmode_ris_edge),
        .I1(\cl_rx_state_reg_n_0_[1] ),
        .I2(\cl_rx_state_reg_n_0_[3] ),
        .I3(\cl_rx_state_reg_n_0_[2] ),
        .I4(\cl_rx_state_reg_n_0_[0] ),
        .O(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_cl_init_to_blk.cl_init_done_div4clk_reg 
       (.C(core_clk),
        .CE(cl_init_done_coreclk0),
        .D(1'b1),
        .Q(out),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_count_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .Q(init_count[0]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .Q(init_count[10]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .Q(init_count[11]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .Q(init_count[12]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .Q(init_count[13]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .Q(init_count[1]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .Q(init_count[2]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .Q(init_count[3]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .Q(init_count[4]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .Q(init_count[5]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .Q(init_count[6]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .Q(init_count[7]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .Q(init_count[8]),
        .R(1'b0));
  FDRE \en_cl_init_to_blk.init_count_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .Q(init_count[9]),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level1[0]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \en_cl_init_to_blk.init_to_cnt_level1[1]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \en_cl_init_to_blk.init_to_cnt_level1[2]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \en_cl_init_to_blk.init_to_cnt_level1[3]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[4]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[5]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[6]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \en_cl_init_to_blk.init_to_cnt_level1[6]_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[6]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_5_n_0 ),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .O(p_0_in[7]));
  LUT2 #(
    .INIT(4'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_3 
       (.I0(\cl_rx_state_reg_n_0_[3] ),
        .I1(\cl_rx_state_reg_n_0_[2] ),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_5 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_5_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level1[2]_i_1_n_0 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[5]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[6]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .R(clear));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_0_in[7]),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h00008000)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [2]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [3]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [0]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [1]),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \en_cl_init_to_blk.init_to_cnt_level1_tc_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg [5]),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg [4]),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg [7]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg [6]),
        .O(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_2_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level1_tc_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_cl_init_to_blk.init_to_cnt_level1_tc_i_1_n_0 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_3 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .O(\en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[0] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [0]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_7 }),
        .S({\en_cl_init_to_blk.init_to_cnt_level2_reg [3:1],\en_cl_init_to_blk.init_to_cnt_level2[0]_i_3_n_0 }));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[10] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [10]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[11] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [11]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[12] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [12]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ),
        .CO({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_CO_UNCONNECTED [3:1],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_O_UNCONNECTED [3:2],\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,\en_cl_init_to_blk.init_to_cnt_level2_reg [13:12]}));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[13] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[12]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [13]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[1] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [1]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[2] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [2]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[3] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [3]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[4] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [4]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[0]_i_2_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [7:4]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[5] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [5]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[6] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_5 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [6]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[7] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_4 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [7]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[8] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [8]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  CARRY4 \en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1 
       (.CI(\en_cl_init_to_blk.init_to_cnt_level2_reg[4]_i_1_n_0 ),
        .CO({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_0 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_1 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_2 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_4 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_5 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ,\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_7 }),
        .S(\en_cl_init_to_blk.init_to_cnt_level2_reg [11:8]));
  FDRE \en_cl_init_to_blk.init_to_cnt_level2_reg[9] 
       (.C(core_clk),
        .CE(\en_cl_init_to_blk.init_to_cnt_level20 ),
        .D(\en_cl_init_to_blk.init_to_cnt_level2_reg[8]_i_1_n_6 ),
        .Q(\en_cl_init_to_blk.init_to_cnt_level2_reg [9]),
        .R(\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ));
  FDRE \en_init_to_reg.init_to_r_2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[1]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [0]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[11]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [10]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[12]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [11]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[13]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [12]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[14]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [13]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[2]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [1]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[3]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [2]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[4]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [3]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[5]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [4]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[6]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [5]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[7]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [6]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[8]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [7]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[9]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [8]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_reg[10]_srl2_n_0 ),
        .Q(\en_init_to_reg.init_to_r_2 [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h3BBCF32F0B30C223)) 
    \en_init_to_reg.init_to_r_3[0]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [0]),
        .I1(\en_init_to_reg.init_to_r_3[0]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [2]),
        .I3(\en_init_to_reg.init_to_r_3[2]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [1]),
        .I5(\en_init_to_reg.init_to_r_3[0]_i_3_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h566A565AA595A995)) 
    \en_init_to_reg.init_to_r_3[0]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [2]),
        .I1(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r_3[2]_i_3_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[2]_i_2_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [4]),
        .I5(\en_init_to_reg.init_to_r_2 [3]),
        .O(\en_init_to_reg.init_to_r_3[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99DC63333339C466)) 
    \en_init_to_reg.init_to_r_3[0]_i_3 
       (.I0(\en_init_to_reg.init_to_r_2 [3]),
        .I1(\en_init_to_reg.init_to_r_2 [4]),
        .I2(\en_init_to_reg.init_to_r_3[2]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[2]_i_3_n_0 ),
        .I4(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2 [2]),
        .O(\en_init_to_reg.init_to_r_3[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h8E30)) 
    \en_init_to_reg.init_to_r_3[10]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [10]),
        .I1(\en_init_to_reg.init_to_r_2 [11]),
        .I2(\en_init_to_reg.init_to_r_2 [13]),
        .I3(\en_init_to_reg.init_to_r_2 [12]),
        .O(\en_init_to_reg.init_to_r_3[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'hE0)) 
    \en_init_to_reg.init_to_r_3[11]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [11]),
        .I1(\en_init_to_reg.init_to_r_2 [12]),
        .I2(\en_init_to_reg.init_to_r_2 [13]),
        .O(\en_init_to_reg.init_to_r_3[11]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF33F0330C223)) 
    \en_init_to_reg.init_to_r_3[1]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [1]),
        .I1(\en_init_to_reg.init_to_r_3[1]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [3]),
        .I3(\en_init_to_reg.init_to_r_3[3]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [2]),
        .I5(\en_init_to_reg.init_to_r_3[2]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \en_init_to_reg.init_to_r_3[1]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [4]),
        .I1(\en_init_to_reg.init_to_r_2 [3]),
        .I2(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF32F0B30C223)) 
    \en_init_to_reg.init_to_r_3[2]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [2]),
        .I1(\en_init_to_reg.init_to_r_3[2]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [4]),
        .I3(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [3]),
        .I5(\en_init_to_reg.init_to_r_3[2]_i_3_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h566A565AA595A995)) 
    \en_init_to_reg.init_to_r_3[2]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [4]),
        .I1(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r_3[4]_i_3_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[4]_i_2_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [6]),
        .I5(\en_init_to_reg.init_to_r_2 [5]),
        .O(\en_init_to_reg.init_to_r_3[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99DC63333339C466)) 
    \en_init_to_reg.init_to_r_3[2]_i_3 
       (.I0(\en_init_to_reg.init_to_r_2 [5]),
        .I1(\en_init_to_reg.init_to_r_2 [6]),
        .I2(\en_init_to_reg.init_to_r_3[4]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[4]_i_3_n_0 ),
        .I4(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2 [4]),
        .O(\en_init_to_reg.init_to_r_3[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF33F0330C223)) 
    \en_init_to_reg.init_to_r_3[3]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [3]),
        .I1(\en_init_to_reg.init_to_r_3[3]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [5]),
        .I3(\en_init_to_reg.init_to_r_3[5]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [4]),
        .I5(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \en_init_to_reg.init_to_r_3[3]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [6]),
        .I1(\en_init_to_reg.init_to_r_2 [5]),
        .I2(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF32F0B30C223)) 
    \en_init_to_reg.init_to_r_3[4]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [4]),
        .I1(\en_init_to_reg.init_to_r_3[4]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [6]),
        .I3(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [5]),
        .I5(\en_init_to_reg.init_to_r_3[4]_i_3_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h566A565AA595A995)) 
    \en_init_to_reg.init_to_r_3[4]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [6]),
        .I1(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .I2(\en_init_to_reg.init_to_r_3[6]_i_3_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[6]_i_2_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [8]),
        .I5(\en_init_to_reg.init_to_r_2 [7]),
        .O(\en_init_to_reg.init_to_r_3[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99DC63333339C466)) 
    \en_init_to_reg.init_to_r_3[4]_i_3 
       (.I0(\en_init_to_reg.init_to_r_2 [7]),
        .I1(\en_init_to_reg.init_to_r_2 [8]),
        .I2(\en_init_to_reg.init_to_r_3[6]_i_2_n_0 ),
        .I3(\en_init_to_reg.init_to_r_3[6]_i_3_n_0 ),
        .I4(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .I5(\en_init_to_reg.init_to_r_2 [6]),
        .O(\en_init_to_reg.init_to_r_3[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF33F0330C223)) 
    \en_init_to_reg.init_to_r_3[5]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [5]),
        .I1(\en_init_to_reg.init_to_r_3[5]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [7]),
        .I3(\en_init_to_reg.init_to_r_3[7]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [6]),
        .I5(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \en_init_to_reg.init_to_r_3[5]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [8]),
        .I1(\en_init_to_reg.init_to_r_2 [7]),
        .I2(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF32F0B30C223)) 
    \en_init_to_reg.init_to_r_3[6]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [6]),
        .I1(\en_init_to_reg.init_to_r_3[6]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [8]),
        .I3(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [7]),
        .I5(\en_init_to_reg.init_to_r_3[6]_i_3_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h96A5595A655996A5)) 
    \en_init_to_reg.init_to_r_3[6]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [8]),
        .I1(\en_init_to_reg.init_to_r_2 [10]),
        .I2(\en_init_to_reg.init_to_r_2 [13]),
        .I3(\en_init_to_reg.init_to_r_2 [12]),
        .I4(\en_init_to_reg.init_to_r_2 [11]),
        .I5(\en_init_to_reg.init_to_r_2 [9]),
        .O(\en_init_to_reg.init_to_r_3[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hD2F4BD2FB42D0B42)) 
    \en_init_to_reg.init_to_r_3[6]_i_3 
       (.I0(\en_init_to_reg.init_to_r_2 [9]),
        .I1(\en_init_to_reg.init_to_r_2 [11]),
        .I2(\en_init_to_reg.init_to_r_2 [12]),
        .I3(\en_init_to_reg.init_to_r_2 [13]),
        .I4(\en_init_to_reg.init_to_r_2 [10]),
        .I5(\en_init_to_reg.init_to_r_2 [8]),
        .O(\en_init_to_reg.init_to_r_3[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h3BBCF33F0330C223)) 
    \en_init_to_reg.init_to_r_3[7]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [7]),
        .I1(\en_init_to_reg.init_to_r_3[7]_i_2_n_0 ),
        .I2(\en_init_to_reg.init_to_r_2 [9]),
        .I3(\en_init_to_reg.init_to_r_3[9]_i_1_n_0 ),
        .I4(\en_init_to_reg.init_to_r_2 [8]),
        .I5(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .O(\en_init_to_reg.init_to_r_3[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h66965965)) 
    \en_init_to_reg.init_to_r_3[7]_i_2 
       (.I0(\en_init_to_reg.init_to_r_2 [9]),
        .I1(\en_init_to_reg.init_to_r_2 [12]),
        .I2(\en_init_to_reg.init_to_r_2 [13]),
        .I3(\en_init_to_reg.init_to_r_2 [11]),
        .I4(\en_init_to_reg.init_to_r_2 [10]),
        .O(\en_init_to_reg.init_to_r_3[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3833CE8C33E38C38)) 
    \en_init_to_reg.init_to_r_3[8]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [8]),
        .I1(\en_init_to_reg.init_to_r_2 [10]),
        .I2(\en_init_to_reg.init_to_r_2 [11]),
        .I3(\en_init_to_reg.init_to_r_2 [13]),
        .I4(\en_init_to_reg.init_to_r_2 [12]),
        .I5(\en_init_to_reg.init_to_r_2 [9]),
        .O(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h338CE338)) 
    \en_init_to_reg.init_to_r_3[9]_i_1 
       (.I0(\en_init_to_reg.init_to_r_2 [9]),
        .I1(\en_init_to_reg.init_to_r_2 [11]),
        .I2(\en_init_to_reg.init_to_r_2 [12]),
        .I3(\en_init_to_reg.init_to_r_2 [13]),
        .I4(\en_init_to_reg.init_to_r_2 [10]),
        .O(\en_init_to_reg.init_to_r_3[9]_i_1_n_0 ));
  FDRE \en_init_to_reg.init_to_r_3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[0]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [0]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[10]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [10]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[11]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [11]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[1]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [1]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[2]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [2]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[3]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [3]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[4]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [4]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[5]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [5]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[6]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [6]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[7]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [7]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[8]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [8]),
        .R(1'b0));
  FDRE \en_init_to_reg.init_to_r_3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\en_init_to_reg.init_to_r_3[9]_i_1_n_0 ),
        .Q(\en_init_to_reg.init_to_r_3 [9]),
        .R(1'b0));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[10]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[10]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [9]),
        .Q(\en_init_to_reg.init_to_r_reg[10]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[11]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[11]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [10]),
        .Q(\en_init_to_reg.init_to_r_reg[11]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[12]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[12]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [11]),
        .Q(\en_init_to_reg.init_to_r_reg[12]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[13]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[13]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [12]),
        .Q(\en_init_to_reg.init_to_r_reg[13]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[14]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[14]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [13]),
        .Q(\en_init_to_reg.init_to_r_reg[14]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[1]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [0]),
        .Q(\en_init_to_reg.init_to_r_reg[1]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[2]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [1]),
        .Q(\en_init_to_reg.init_to_r_reg[2]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[3]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[3]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [2]),
        .Q(\en_init_to_reg.init_to_r_reg[3]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[4]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[4]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [3]),
        .Q(\en_init_to_reg.init_to_r_reg[4]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[5]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[5]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [4]),
        .Q(\en_init_to_reg.init_to_r_reg[5]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[6]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[6]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [5]),
        .Q(\en_init_to_reg.init_to_r_reg[6]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[7]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[7]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [6]),
        .Q(\en_init_to_reg.init_to_r_reg[7]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[8]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[8]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [7]),
        .Q(\en_init_to_reg.init_to_r_reg[8]_srl2_n_0 ));
  (* srl_bus_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg " *) 
  (* srl_name = "inst/\inst/design_1_mipi_dphy_0_1_rx_support_i/slave_rx.dphy_rx_fab_top /\gen_rx_clk_lane.dphy_rx_clk_lane/en_init_to_reg.init_to_r_reg[9]_srl2 " *) 
  SRL16E \en_init_to_reg.init_to_r_reg[9]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(core_clk),
        .D(\en_init_to_reg.init_to_r_2_reg[13]_0 [8]),
        .Q(\en_init_to_reg.init_to_r_reg[9]_srl2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFB)) 
    lp_00_r_i_1
       (.I0(lp_st_cnt[2]),
        .I1(lp_st_cnt[1]),
        .I2(lp_st_cnt[0]),
        .I3(lp_st_cnt[3]),
        .I4(lp_st_cnt[4]),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_2
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_00_r_i_2_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_2_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_1__1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_11_r_i_1__1_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_1__1_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  LUT5 #(
    .INIT(32'h00000002)) 
    \lp_st_cnt[4]_i_1__1 
       (.I0(lp_st_cnt[1]),
        .I1(lp_st_cnt[4]),
        .I2(lp_st_cnt[0]),
        .I3(lp_st_cnt[3]),
        .I4(lp_st_cnt[2]),
        .O(\lp_st_cnt[4]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \lp_st_cnt[4]_i_4 
       (.I0(lp_10_r),
        .I1(lp_11_r_reg_n_0),
        .I2(lp_00_r),
        .I3(lp_01_r),
        .O(\lp_st_cnt[4]_i_4_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_1),
        .Q(lp_st_cnt[0]),
        .R(\lp_st_cnt[4]_i_1__1_n_0 ));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_8),
        .Q(lp_st_cnt[1]),
        .R(\lp_st_cnt[4]_i_1__1_n_0 ));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_9),
        .Q(lp_st_cnt[2]),
        .R(\lp_st_cnt[4]_i_1__1_n_0 ));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_10),
        .Q(lp_st_cnt[3]),
        .R(\lp_st_cnt[4]_i_1__1_n_0 ));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync1_i_n_11),
        .Q(lp_st_cnt[4]),
        .R(\lp_st_cnt[4]_i_1__1_n_0 ));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_20 lp_state_sync0_i
       (.CO(cl_init_done_coreclk1),
        .Q(dl_lp_st_t),
        .SR(clear),
        .cl_errcontrol(cl_errcontrol),
        .cl_init_done_coreclk0(cl_init_done_coreclk0),
        .cl_mode(cl_mode),
        .cl_rx_state0(cl_rx_state0),
        .\cl_rx_state[2]_i_2_0 (lp_state_sync1_i_n_5),
        .\cl_rx_state_reg[0] (lp_state_sync0_i_n_1),
        .\cl_rx_state_reg[0]_0 (\cl_rx_state_reg[0]_0 ),
        .\cl_rx_state_reg[0]_1 (cl_enable_sync_i_n_3),
        .\cl_rx_state_reg[0]_2 (\cl_rx_state[3]_i_10_n_0 ),
        .\cl_rx_state_reg[2] (lp_state_sync0_i_n_6),
        .\cl_rx_state_reg[2]_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .\cl_rx_state_reg[2]_1 (cl_enable_sync),
        .\cl_rx_state_reg[3] (lp_state_sync0_i_n_2),
        .\cl_rx_state_reg[3]_0 (lp_state_sync0_i_n_3),
        .\cl_rx_state_reg[3]_1 (lp_state_sync1_i_n_4),
        .cl_status_reg_bit_0_reg(\cl_rx_state_reg_n_0_[0] ),
        .cl_status_reg_bit_0_reg_0(\cl_rx_state_reg_n_0_[3] ),
        .cl_status_reg_bit_0_reg_1(\cl_rx_state_reg_n_0_[2] ),
        .cl_status_reg_bit_5_reg(cl_status_reg_bit_5_i_2_n_0),
        .cl_status_reg_bit_5_reg_0(cl_status_reg_bit_5_i_3_n_0),
        .cl_stopstate(cl_stopstate),
        .cl_stopstate_reg(lp_11_r_reg_n_0),
        .cl_stopstate_reg_0(lp_state_sync[1]),
        .cl_stopstate_reg_1(lp_state_sync1_i_n_2),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_forcerxmode_ris_edge(dl_forcerxmode_ris_edge),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (lp_state_sync0_i_n_4),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (\en_cl_init_to_blk.cl_init_done_div4clk_i_1_n_0 ),
        .\en_cl_init_to_blk.init_to_cnt_level1_reg[0] (\cl_rx_state_reg_n_0_[1] ),
        .\en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 (\en_cl_init_to_blk.init_to_cnt_level1[7]_i_3_n_0 ),
        .\en_cl_init_to_blk.init_to_cnt_level1_tc (\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .\en_cl_init_to_blk.init_to_cnt_level20 (\en_cl_init_to_blk.init_to_cnt_level20 ),
        .lp_00_r(lp_00_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_state_sync0_i_n_11),
        .out(lp_state_sync[0]),
        .rx_cl_lp_dn(rx_cl_lp_dn),
        .\s_level_out_bus_d3_reg[1] (lp_state_sync0_i_n_5),
        .s_level_out_d2_reg_0(lp_state_sync0_i_n_10),
        .system_rst(system_rst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_21 lp_state_sync1_i
       (.Q(lp_st_dup),
        .cl_rx_state(cl_rx_state),
        .\cl_rx_state[1]_i_2_0 (\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .\cl_rx_state_reg[0] (lp_state_sync1_i_n_2),
        .\cl_rx_state_reg[0]_0 (lp_state_sync0_i_n_11),
        .\cl_rx_state_reg[2] (lp_state_sync1_i_n_6),
        .cl_status_reg_bit_4__0(cl_status_reg_bit_4__0),
        .cl_status_reg_bit_4_reg(\cl_rx_state_reg_n_0_[3] ),
        .cl_status_reg_bit_4_reg_0(\cl_rx_state_reg_n_0_[0] ),
        .cl_status_reg_bit_4_reg_1(\cl_rx_state_reg_n_0_[2] ),
        .cl_status_reg_bit_4_reg_2(lp_11_r_reg_n_0),
        .cl_status_reg_bit_4_reg_3(cl_status_reg_bit_4),
        .cl_status_reg_bit_4_reg_4(\cl_rx_state_reg_n_0_[1] ),
        .core_clk(core_clk),
        .lp_00_r(lp_00_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_state_sync1_i_n_4),
        .lp_11_r_reg_0(lp_state_sync1_i_n_5),
        .lp_st_cnt(lp_st_cnt),
        .\lp_st_cnt_reg[0] (lp_state_sync1_i_n_1),
        .\lp_st_cnt_reg[1] (lp_state_sync1_i_n_8),
        .\lp_st_cnt_reg[2] (lp_state_sync1_i_n_9),
        .\lp_st_cnt_reg[3] (lp_state_sync1_i_n_10),
        .\lp_st_cnt_reg[4] (lp_state_sync1_i_n_11),
        .\lp_st_cnt_reg[4]_0 (lp_state_sync[0]),
        .\lp_st_cnt_reg[4]_1 (\lp_st_cnt[4]_i_4_n_0 ),
        .out(lp_state_sync[1]),
        .rx_cl_lp_dp(rx_cl_lp_dp));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane
   (out,
    dl_status_reg,
    dl0_rxclkesc,
    dl0_rxvalidesc,
    dl0_errsyncesc,
    align_done_reg,
    hs_dvalid_reg,
    dl0_rxsynchs,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_ulpsactivenot,
    dl0_errcontrol,
    dl0_erresc,
    dl0_stopstate,
    dl_rxulpsesc_reg,
    dl_rxlpdtesc_reg,
    SR,
    s_level_out_d3_reg,
    dl0_rxdatahs,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl_forcerxmode_t0,
    \lp_st_out_reg[1] ,
    pkt_cnt,
    rx_div4_clk,
    dl_forcerxmode_out,
    rx_dl0_lp_dn,
    rx_dl0_lp_dp,
    core_rst,
    dl0_enable,
    core_clk,
    dl0_forcerxmode,
    fifo_rd_reset,
    stopstate0,
    dl_status_reg_bit_0_reg,
    \lpdt_data_r_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[1] ,
    system_rst,
    dl_status_reg_bit_4_reg,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ,
    prmry_in,
    rx_dl0_hs_dp,
    Q,
    D);
  output out;
  output [4:0]dl_status_reg;
  output dl0_rxclkesc;
  output dl0_rxvalidesc;
  output dl0_errsyncesc;
  output align_done_reg;
  output hs_dvalid_reg;
  output dl0_rxsynchs;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_ulpsactivenot;
  output dl0_errcontrol;
  output dl0_erresc;
  output dl0_stopstate;
  output dl_rxulpsesc_reg;
  output dl_rxlpdtesc_reg;
  output [0:0]SR;
  output s_level_out_d3_reg;
  output [7:0]dl0_rxdatahs;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl_forcerxmode_t0;
  output [1:0]\lp_st_out_reg[1] ;
  output [15:0]pkt_cnt;
  input rx_div4_clk;
  input dl_forcerxmode_out;
  input rx_dl0_lp_dn;
  input rx_dl0_lp_dp;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input dl0_forcerxmode;
  input fifo_rd_reset;
  input stopstate0;
  input dl_status_reg_bit_0_reg;
  input \lpdt_data_r_reg[0] ;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input system_rst;
  input dl_status_reg_bit_4_reg;
  input \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  input \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ;
  input prmry_in;
  input [7:0]rx_dl0_hs_dp;
  input [1:0]Q;
  input [8:0]D;

  wire [8:0]D;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire align_done_reg;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxvalidesc;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl_en_hs_lpn_i;
  wire dl_forcerxmode_out;
  wire dl_forcerxmode_t0;
  wire dl_rxlpdtesc_reg;
  wire dl_rxulpsesc_reg;
  wire [1:0]dl_state;
  wire [4:0]dl_status_reg;
  wire dl_status_reg_bit_0_reg;
  wire dl_status_reg_bit_4_reg;
  wire fifo_rd_reset;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1_nxt;
  (* DONT_TOUCH *) wire fifo_rd_rst_t2;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_15 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ;
  wire hs_dvalid_reg;
  wire [1:0]\lp_st_out_reg[1] ;
  wire \lpdt_data_r_reg[0] ;
  wire out;
  wire [15:0]pkt_cnt;
  wire pkt_cnt_r0;
  wire \pkt_cnt_r[0]_i_3_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_1 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_2 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_3 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_4 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_5 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_6 ;
  wire \pkt_cnt_r_reg[0]_i_2_n_7 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[12]_i_1_n_7 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_0 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[4]_i_1_n_7 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_0 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_1 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_2 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_3 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_4 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_5 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_6 ;
  wire \pkt_cnt_r_reg[8]_i_1_n_7 ;
  wire prmry_in;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxactivehs_sync;
  wire rxactivehs_sync_i_n_1;
  wire rxactivehs_sync_i_n_2;
  wire s_level_out_d3_reg;
  wire stop_extn_cnt;
  wire [4:0]stop_extn_cnt__0;
  wire stopstate0;
  wire system_rst;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ;
  wire \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ;
  wire [3:3]\NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED ;

  (* FSM_ENCODED_STATES = "DL_ACTIVE:10,DL_START:00,DL_STOP:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ),
        .Q(dl_state[0]),
        .R(stopstate0));
  (* FSM_ENCODED_STATES = "DL_ACTIVE:10,DL_START:00,DL_STOP:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ),
        .Q(dl_state[1]),
        .R(stopstate0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_nxt_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_rst_t1),
        .Q(fifo_rd_rst_t1_nxt),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_reset),
        .Q(fifo_rd_rst_t1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_reset),
        .Q(fifo_rd_rst_t2),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_10 \gen_calib_result.cal_done_sync_i 
       (.rx_div4_clk(rx_div4_clk));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__2 \gen_calib_result.u_tap_comp_rst_byteclk_sync_i 
       (.prmry_in(1'b0),
        .scndry_aclk(rx_div4_clk),
        .scndry_out(\NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ));
  FDRE \gen_hs_high_rates_spec_v1_1.active_sm_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(rxactivehs_sync_i_n_2),
        .Q(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .R(stopstate0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sot_det_align_11 \gen_hs_high_rates_spec_v1_1.rx_sot_det_align_i 
       (.E(align_done_reg),
        .SR(SR),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .hs_dvalid_reg_0(hs_dvalid_reg),
        .pkt_cnt_r0(pkt_cnt_r0),
        .prmry_in(prmry_in),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl0_hs_dp(rx_dl0_hs_dp),
        .s_level_out_d3_reg(s_level_out_d3_reg),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg (\two_lane_hs_rx_timeout.maxfrm_wait_done_reg ),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 (\two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ));
  FDCE \gen_hs_high_rates_spec_v1_1.rxactivehs_coreclk_sync_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(rxactivehs_sync),
        .Q(rxactivehs_coreclk_sync_r));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1 
       (.I0(dl_state[0]),
        .I1(dl_state[1]),
        .I2(stop_extn_cnt__0[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT4 #(
    .INIT(16'h0440)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .I2(stop_extn_cnt__0[0]),
        .I3(stop_extn_cnt__0[1]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT5 #(
    .INIT(32'h04444000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .I2(stop_extn_cnt__0[1]),
        .I3(stop_extn_cnt__0[0]),
        .I4(stop_extn_cnt__0[2]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00007F0000008000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1 
       (.I0(stop_extn_cnt__0[1]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[2]),
        .I3(dl_state[0]),
        .I4(dl_state[1]),
        .I5(stop_extn_cnt__0[3]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_1 
       (.I0(stop_extn_cnt__0[3]),
        .I1(stop_extn_cnt__0[1]),
        .I2(stop_extn_cnt__0[0]),
        .I3(stop_extn_cnt__0[2]),
        .I4(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3_n_0 ),
        .I5(stop_extn_cnt__0[4]),
        .O(stop_extn_cnt));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2 
       (.I0(stop_extn_cnt__0[2]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[1]),
        .I3(stop_extn_cnt__0[3]),
        .I4(stop_extn_cnt__0[4]),
        .I5(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3_n_0 ),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3_n_0 ));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[0] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1_n_0 ),
        .Q(stop_extn_cnt__0[0]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[1] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1_n_0 ),
        .Q(stop_extn_cnt__0[1]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[2] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1_n_0 ),
        .Q(stop_extn_cnt__0[2]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[3] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1_n_0 ),
        .Q(stop_extn_cnt__0[3]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[4] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2_n_0 ),
        .Q(stop_extn_cnt__0[4]));
  LUT6 #(
    .INIT(64'h0000FF0000000100)) 
    \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1 
       (.I0(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2_n_0 ),
        .I1(stop_extn_cnt__0[3]),
        .I2(stop_extn_cnt__0[4]),
        .I3(dl_state[0]),
        .I4(dl_state[1]),
        .I5(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .O(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2 
       (.I0(stop_extn_cnt__0[1]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[2]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2_n_0 ));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1_n_0 ),
        .Q(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ));
  FDRE \gen_hs_high_rates_spec_v1_1.stopstate_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_15 ),
        .Q(dl0_stopstate),
        .R(stopstate0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_sm_12 \gen_rx_data_lane_sm.rx_data_lane_sm 
       (.D(D),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (\FSM_sequential_dl_rx_state_reg[1] ),
        .\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] (\gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ),
        .\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 (rxactivehs_sync_i_n_1),
        .Q(Q),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg_0(\gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ),
        .dl_forcerxmode_out(dl_forcerxmode_out),
        .dl_forcerxmode_t0(dl_forcerxmode_t0),
        .dl_rxlpdtesc_reg_0(dl_rxlpdtesc_reg),
        .dl_rxulpsesc_reg_0(dl_rxulpsesc_reg),
        .dl_state(dl_state),
        .dl_status_reg(dl_status_reg),
        .dl_status_reg_bit_0_reg_0(dl_status_reg_bit_0_reg),
        .dl_status_reg_bit_4_reg_0(dl_status_reg_bit_4_reg),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg (\gen_rx_data_lane_sm.rx_data_lane_sm_n_15 ),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 (rxactivehs_sync),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_1 (\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_2 (\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .\lp_st_out_reg[1]_0 (\lp_st_out_reg[1] ),
        .\lpdt_data_r_reg[0]_0 (\lpdt_data_r_reg[0] ),
        .out(out),
        .rx_dl0_lp_dn(rx_dl0_lp_dn),
        .rx_dl0_lp_dp(rx_dl0_lp_dp),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .system_rst(system_rst));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt_r[0]_i_3 
       (.I0(pkt_cnt[0]),
        .O(\pkt_cnt_r[0]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_7 ),
        .Q(pkt_cnt[0]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\pkt_cnt_r_reg[0]_i_2_n_0 ,\pkt_cnt_r_reg[0]_i_2_n_1 ,\pkt_cnt_r_reg[0]_i_2_n_2 ,\pkt_cnt_r_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_r_reg[0]_i_2_n_4 ,\pkt_cnt_r_reg[0]_i_2_n_5 ,\pkt_cnt_r_reg[0]_i_2_n_6 ,\pkt_cnt_r_reg[0]_i_2_n_7 }),
        .S({pkt_cnt[3:1],\pkt_cnt_r[0]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[10] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_5 ),
        .Q(pkt_cnt[10]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[11] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_4 ),
        .Q(pkt_cnt[11]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[12] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_7 ),
        .Q(pkt_cnt[12]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[12]_i_1 
       (.CI(\pkt_cnt_r_reg[8]_i_1_n_0 ),
        .CO({\NLW_pkt_cnt_r_reg[12]_i_1_CO_UNCONNECTED [3],\pkt_cnt_r_reg[12]_i_1_n_1 ,\pkt_cnt_r_reg[12]_i_1_n_2 ,\pkt_cnt_r_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[12]_i_1_n_4 ,\pkt_cnt_r_reg[12]_i_1_n_5 ,\pkt_cnt_r_reg[12]_i_1_n_6 ,\pkt_cnt_r_reg[12]_i_1_n_7 }),
        .S(pkt_cnt[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[13] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_6 ),
        .Q(pkt_cnt[13]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[14] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_5 ),
        .Q(pkt_cnt[14]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[15] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1_n_4 ),
        .Q(pkt_cnt[15]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_6 ),
        .Q(pkt_cnt[1]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_5 ),
        .Q(pkt_cnt[2]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2_n_4 ),
        .Q(pkt_cnt[3]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_7 ),
        .Q(pkt_cnt[4]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[4]_i_1 
       (.CI(\pkt_cnt_r_reg[0]_i_2_n_0 ),
        .CO({\pkt_cnt_r_reg[4]_i_1_n_0 ,\pkt_cnt_r_reg[4]_i_1_n_1 ,\pkt_cnt_r_reg[4]_i_1_n_2 ,\pkt_cnt_r_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[4]_i_1_n_4 ,\pkt_cnt_r_reg[4]_i_1_n_5 ,\pkt_cnt_r_reg[4]_i_1_n_6 ,\pkt_cnt_r_reg[4]_i_1_n_7 }),
        .S(pkt_cnt[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_6 ),
        .Q(pkt_cnt[5]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_5 ),
        .Q(pkt_cnt[6]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1_n_4 ),
        .Q(pkt_cnt[7]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[8] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_7 ),
        .Q(pkt_cnt[8]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[8]_i_1 
       (.CI(\pkt_cnt_r_reg[4]_i_1_n_0 ),
        .CO({\pkt_cnt_r_reg[8]_i_1_n_0 ,\pkt_cnt_r_reg[8]_i_1_n_1 ,\pkt_cnt_r_reg[8]_i_1_n_2 ,\pkt_cnt_r_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[8]_i_1_n_4 ,\pkt_cnt_r_reg[8]_i_1_n_5 ,\pkt_cnt_r_reg[8]_i_1_n_6 ,\pkt_cnt_r_reg[8]_i_1_n_7 }),
        .S(pkt_cnt[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[9] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1_n_6 ),
        .Q(pkt_cnt[9]),
        .R(fifo_rd_rst_t1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_13 rxactivehs_sync_i
       (.core_clk(core_clk),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg(rxactivehs_sync_i_n_2),
        .dl_state(dl_state),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg (rxactivehs_sync_i_n_1),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 (\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 (\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .out(rxactivehs_sync),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .s_level_out_d1_cdc_to_reg_0(align_done_reg));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_data_lane" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_3
   (out,
    s_level_out_d2_reg,
    dl_status_reg,
    dl1_rxclkesc,
    dl1_rxvalidesc,
    dl1_errsyncesc,
    align_done_reg,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_ulpsactivenot,
    dl1_errcontrol,
    dl1_erresc,
    dl1_stopstate,
    dl_rxulpsesc_reg,
    dl_rxlpdtesc_reg,
    dl1_rxdatahs,
    Q,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    pkt_cnt,
    rx_div4_clk,
    rx_dl1_lp_dn,
    rx_dl1_lp_dp,
    core_rst,
    dl1_enable,
    core_clk,
    dl1_forcerxmode,
    fifo_rd_reset,
    stopstate0,
    dl_status_reg_bit_0_reg,
    \lpdt_data_r_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[1] ,
    system_rst,
    dl_status_reg_bit_4_reg,
    rx_dl1_hs_dp,
    D);
  output out;
  output s_level_out_d2_reg;
  output [4:0]dl_status_reg;
  output dl1_rxclkesc;
  output dl1_rxvalidesc;
  output dl1_errsyncesc;
  output align_done_reg;
  output dl1_rxvalidhs;
  output dl1_rxsynchs;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_ulpsactivenot;
  output dl1_errcontrol;
  output dl1_erresc;
  output dl1_stopstate;
  output dl_rxulpsesc_reg;
  output dl_rxlpdtesc_reg;
  output [7:0]dl1_rxdatahs;
  output [1:0]Q;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output [15:0]pkt_cnt;
  input rx_div4_clk;
  input rx_dl1_lp_dn;
  input rx_dl1_lp_dp;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input dl1_forcerxmode;
  input fifo_rd_reset;
  input stopstate0;
  input dl_status_reg_bit_0_reg;
  input \lpdt_data_r_reg[0] ;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input system_rst;
  input dl_status_reg_bit_4_reg;
  input [7:0]rx_dl1_hs_dp;
  input [8:0]D;

  wire [8:0]D;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire [1:0]Q;
  wire align_done_reg;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dl_en_hs_lpn_i;
  wire dl_rxlpdtesc_reg;
  wire dl_rxulpsesc_reg;
  wire [1:0]dl_state;
  wire [4:0]dl_status_reg;
  wire dl_status_reg_bit_0_reg;
  wire dl_status_reg_bit_4_reg;
  wire fifo_rd_reset;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1;
  (* DONT_TOUCH *) wire fifo_rd_rst_t1_nxt;
  (* DONT_TOUCH *) wire fifo_rd_rst_t2;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm_n_18 ;
  wire \lpdt_data_r_reg[0] ;
  wire out;
  wire [15:0]pkt_cnt;
  wire pkt_cnt_r0;
  wire \pkt_cnt_r[0]_i_3__0_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_0 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_1 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_2 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_3 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_4 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_5 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_6 ;
  wire \pkt_cnt_r_reg[0]_i_2__0_n_7 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[12]_i_1__0_n_7 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_0 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[4]_i_1__0_n_7 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_0 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_1 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_2 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_3 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_4 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_5 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_6 ;
  wire \pkt_cnt_r_reg[8]_i_1__0_n_7 ;
  wire rx_div4_clk;
  wire [7:0]rx_dl1_hs_dp;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxactivehs_sync;
  wire rxactivehs_sync_i_n_1;
  wire rxactivehs_sync_i_n_2;
  wire s_level_out_d2_reg;
  wire stop_extn_cnt;
  wire [4:0]stop_extn_cnt__0;
  wire stopstate0;
  wire system_rst;
  wire \NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ;
  wire [3:3]\NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED ;

  (* FSM_ENCODED_STATES = "DL_ACTIVE:10,DL_START:00,DL_STOP:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_18 ),
        .Q(dl_state[0]),
        .R(stopstate0));
  (* FSM_ENCODED_STATES = "DL_ACTIVE:10,DL_START:00,DL_STOP:01" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ),
        .Q(dl_state[1]),
        .R(stopstate0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_nxt_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_rst_t1),
        .Q(fifo_rd_rst_t1_nxt),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t1_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_reset),
        .Q(fifo_rd_rst_t1),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE fifo_rd_rst_t2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(fifo_rd_reset),
        .Q(fifo_rd_rst_t2),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_4 \gen_calib_result.cal_done_sync_i 
       (.rx_div4_clk(rx_div4_clk));
  (* c_init_val = "1'b1" *) 
  (* c_mtbf_stages = "5'b00010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync \gen_calib_result.u_tap_comp_rst_byteclk_sync_i 
       (.prmry_in(1'b0),
        .scndry_aclk(rx_div4_clk),
        .scndry_out(\NLW_gen_calib_result.u_tap_comp_rst_byteclk_sync_i_scndry_out_UNCONNECTED ));
  FDRE \gen_hs_high_rates_spec_v1_1.active_sm_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(rxactivehs_sync_i_n_2),
        .Q(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .R(stopstate0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sot_det_align \gen_hs_high_rates_spec_v1_1.rx_sot_det_align_i 
       (.E(align_done_reg),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .pkt_cnt_r0(pkt_cnt_r0),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl1_hs_dp(rx_dl1_hs_dp));
  FDCE \gen_hs_high_rates_spec_v1_1.rxactivehs_coreclk_sync_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(rxactivehs_sync),
        .Q(rxactivehs_coreclk_sync_r));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1__0 
       (.I0(dl_state[0]),
        .I1(dl_state[1]),
        .I2(stop_extn_cnt__0[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT4 #(
    .INIT(16'h0440)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1__0 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .I2(stop_extn_cnt__0[0]),
        .I3(stop_extn_cnt__0[1]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT5 #(
    .INIT(32'h04444000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1__0 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .I2(stop_extn_cnt__0[1]),
        .I3(stop_extn_cnt__0[0]),
        .I4(stop_extn_cnt__0[2]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h00007F0000008000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1__0 
       (.I0(stop_extn_cnt__0[1]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[2]),
        .I3(dl_state[0]),
        .I4(dl_state[1]),
        .I5(stop_extn_cnt__0[3]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFBF)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_1__0 
       (.I0(stop_extn_cnt__0[3]),
        .I1(stop_extn_cnt__0[1]),
        .I2(stop_extn_cnt__0[0]),
        .I3(stop_extn_cnt__0[2]),
        .I4(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3__0_n_0 ),
        .I5(stop_extn_cnt__0[4]),
        .O(stop_extn_cnt));
  LUT6 #(
    .INIT(64'h000000007FFF8000)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2__0 
       (.I0(stop_extn_cnt__0[2]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[1]),
        .I3(stop_extn_cnt__0[3]),
        .I4(stop_extn_cnt__0[4]),
        .I5(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3__0_n_0 ),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3__0 
       (.I0(dl_state[1]),
        .I1(dl_state[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_3__0_n_0 ));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[0] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[0]_i_1__0_n_0 ),
        .Q(stop_extn_cnt__0[0]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[1] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[1]_i_1__0_n_0 ),
        .Q(stop_extn_cnt__0[1]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[2] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[2]_i_1__0_n_0 ),
        .Q(stop_extn_cnt__0[2]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[3] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[3]_i_1__0_n_0 ),
        .Q(stop_extn_cnt__0[3]));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_extn_cnt_reg[4] 
       (.C(core_clk),
        .CE(stop_extn_cnt),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_extn_cnt[4]_i_2__0_n_0 ),
        .Q(stop_extn_cnt__0[4]));
  LUT6 #(
    .INIT(64'h0000FF0000000100)) 
    \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1__0 
       (.I0(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2__0_n_0 ),
        .I1(stop_extn_cnt__0[3]),
        .I2(stop_extn_cnt__0[4]),
        .I3(dl_state[0]),
        .I4(dl_state[1]),
        .I5(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .O(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hF7)) 
    \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2__0 
       (.I0(stop_extn_cnt__0[1]),
        .I1(stop_extn_cnt__0[0]),
        .I2(stop_extn_cnt__0[2]),
        .O(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_2__0_n_0 ));
  FDCE \gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_i_1__0_n_0 ),
        .Q(\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ));
  FDRE \gen_hs_high_rates_spec_v1_1.stopstate_reg 
       (.C(core_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ),
        .Q(dl1_stopstate),
        .R(stopstate0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_sm \gen_rx_data_lane_sm.rx_data_lane_sm 
       (.D(D),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (\FSM_sequential_dl_rx_state_reg[1] ),
        .\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] (\gen_rx_data_lane_sm.rx_data_lane_sm_n_18 ),
        .\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 (rxactivehs_sync_i_n_1),
        .Q(Q),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg_0(\gen_rx_data_lane_sm.rx_data_lane_sm_n_17 ),
        .dl_rxlpdtesc_reg_0(dl_rxlpdtesc_reg),
        .dl_rxulpsesc_reg_0(dl_rxulpsesc_reg),
        .dl_state(dl_state),
        .dl_status_reg(dl_status_reg),
        .dl_status_reg_bit_0_reg_0(dl_status_reg_bit_0_reg),
        .dl_status_reg_bit_4_reg_0(dl_status_reg_bit_4_reg),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg (\gen_rx_data_lane_sm.rx_data_lane_sm_n_16 ),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 (rxactivehs_sync),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_1 (\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg_2 (\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .\lpdt_data_r_reg[0]_0 (\lpdt_data_r_reg[0] ),
        .out(out),
        .rx_dl1_lp_dn(rx_dl1_lp_dn),
        .rx_dl1_lp_dp(rx_dl1_lp_dp),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .s_level_out_d2_reg(s_level_out_d2_reg),
        .system_rst(system_rst));
  LUT1 #(
    .INIT(2'h1)) 
    \pkt_cnt_r[0]_i_3__0 
       (.I0(pkt_cnt[0]),
        .O(\pkt_cnt_r[0]_i_3__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_7 ),
        .Q(pkt_cnt[0]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[0]_i_2__0 
       (.CI(1'b0),
        .CO({\pkt_cnt_r_reg[0]_i_2__0_n_0 ,\pkt_cnt_r_reg[0]_i_2__0_n_1 ,\pkt_cnt_r_reg[0]_i_2__0_n_2 ,\pkt_cnt_r_reg[0]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\pkt_cnt_r_reg[0]_i_2__0_n_4 ,\pkt_cnt_r_reg[0]_i_2__0_n_5 ,\pkt_cnt_r_reg[0]_i_2__0_n_6 ,\pkt_cnt_r_reg[0]_i_2__0_n_7 }),
        .S({pkt_cnt[3:1],\pkt_cnt_r[0]_i_3__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[10] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_5 ),
        .Q(pkt_cnt[10]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[11] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_4 ),
        .Q(pkt_cnt[11]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[12] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_7 ),
        .Q(pkt_cnt[12]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[12]_i_1__0 
       (.CI(\pkt_cnt_r_reg[8]_i_1__0_n_0 ),
        .CO({\NLW_pkt_cnt_r_reg[12]_i_1__0_CO_UNCONNECTED [3],\pkt_cnt_r_reg[12]_i_1__0_n_1 ,\pkt_cnt_r_reg[12]_i_1__0_n_2 ,\pkt_cnt_r_reg[12]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[12]_i_1__0_n_4 ,\pkt_cnt_r_reg[12]_i_1__0_n_5 ,\pkt_cnt_r_reg[12]_i_1__0_n_6 ,\pkt_cnt_r_reg[12]_i_1__0_n_7 }),
        .S(pkt_cnt[15:12]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[13] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_6 ),
        .Q(pkt_cnt[13]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[14] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_5 ),
        .Q(pkt_cnt[14]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[15] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[12]_i_1__0_n_4 ),
        .Q(pkt_cnt[15]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_6 ),
        .Q(pkt_cnt[1]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_5 ),
        .Q(pkt_cnt[2]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[0]_i_2__0_n_4 ),
        .Q(pkt_cnt[3]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_7 ),
        .Q(pkt_cnt[4]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[4]_i_1__0 
       (.CI(\pkt_cnt_r_reg[0]_i_2__0_n_0 ),
        .CO({\pkt_cnt_r_reg[4]_i_1__0_n_0 ,\pkt_cnt_r_reg[4]_i_1__0_n_1 ,\pkt_cnt_r_reg[4]_i_1__0_n_2 ,\pkt_cnt_r_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[4]_i_1__0_n_4 ,\pkt_cnt_r_reg[4]_i_1__0_n_5 ,\pkt_cnt_r_reg[4]_i_1__0_n_6 ,\pkt_cnt_r_reg[4]_i_1__0_n_7 }),
        .S(pkt_cnt[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_6 ),
        .Q(pkt_cnt[5]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_5 ),
        .Q(pkt_cnt[6]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[4]_i_1__0_n_4 ),
        .Q(pkt_cnt[7]),
        .R(fifo_rd_rst_t1));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[8] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_7 ),
        .Q(pkt_cnt[8]),
        .R(fifo_rd_rst_t1));
  CARRY4 \pkt_cnt_r_reg[8]_i_1__0 
       (.CI(\pkt_cnt_r_reg[4]_i_1__0_n_0 ),
        .CO({\pkt_cnt_r_reg[8]_i_1__0_n_0 ,\pkt_cnt_r_reg[8]_i_1__0_n_1 ,\pkt_cnt_r_reg[8]_i_1__0_n_2 ,\pkt_cnt_r_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\pkt_cnt_r_reg[8]_i_1__0_n_4 ,\pkt_cnt_r_reg[8]_i_1__0_n_5 ,\pkt_cnt_r_reg[8]_i_1__0_n_6 ,\pkt_cnt_r_reg[8]_i_1__0_n_7 }),
        .S(pkt_cnt[11:8]));
  FDRE #(
    .INIT(1'b0)) 
    \pkt_cnt_r_reg[9] 
       (.C(rx_div4_clk),
        .CE(pkt_cnt_r0),
        .D(\pkt_cnt_r_reg[8]_i_1__0_n_6 ),
        .Q(pkt_cnt[9]),
        .R(fifo_rd_rst_t1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_5 rxactivehs_sync_i
       (.core_clk(core_clk),
        .dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .dl_en_hs_lpn_reg(rxactivehs_sync_i_n_2),
        .dl_state(dl_state),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg (rxactivehs_sync_i_n_1),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 (\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_n_0 ),
        .\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 (\gen_hs_high_rates_spec_v1_1.stop_state_extn_r_reg_n_0 ),
        .out(rxactivehs_sync),
        .rxactivehs_coreclk_sync_r(rxactivehs_coreclk_sync_r),
        .s_level_out_d1_cdc_to_reg_0(align_done_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_sm
   (out,
    s_level_out_d2_reg,
    dl_status_reg,
    dl1_rxclkesc,
    dl1_rxvalidesc,
    dl1_errsyncesc,
    dl1_ulpsactivenot,
    dl1_errcontrol,
    dl1_erresc,
    dl_en_hs_lpn_i,
    dl_rxulpsesc_reg_0,
    dl_rxlpdtesc_reg_0,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg ,
    dl_en_hs_lpn_reg_0,
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ,
    Q,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    rx_dl1_lp_dn,
    rx_dl1_lp_dp,
    core_rst,
    dl1_enable,
    core_clk,
    dl1_forcerxmode,
    dl_status_reg_bit_0_reg_0,
    \lpdt_data_r_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    system_rst,
    dl_status_reg_bit_4_reg_0,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ,
    rxactivehs_coreclk_sync_r,
    dl_state,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ,
    dl1_stopstate,
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ,
    D);
  output out;
  output s_level_out_d2_reg;
  output [4:0]dl_status_reg;
  output dl1_rxclkesc;
  output dl1_rxvalidesc;
  output dl1_errsyncesc;
  output dl1_ulpsactivenot;
  output dl1_errcontrol;
  output dl1_erresc;
  output dl_en_hs_lpn_i;
  output dl_rxulpsesc_reg_0;
  output dl_rxlpdtesc_reg_0;
  output \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  output dl_en_hs_lpn_reg_0;
  output \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ;
  output [1:0]Q;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  input rx_dl1_lp_dn;
  input rx_dl1_lp_dp;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input dl1_forcerxmode;
  input dl_status_reg_bit_0_reg_0;
  input \lpdt_data_r_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input system_rst;
  input dl_status_reg_bit_4_reg_0;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ;
  input rxactivehs_coreclk_sync_r;
  input [1:0]dl_state;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ;
  input dl1_stopstate;
  input \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ;
  input [8:0]D;

  wire [8:0]D;
  wire \FSM_sequential_dl_rx_state[0]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_9__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_11__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_15__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_16__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_17__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_18__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_19__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ;
  wire [1:0]Q;
  (* DONT_TOUCH *) wire [31:0]SETTLE_TIMEOUT;
  wire bit_cnt;
  wire \bit_cnt[2]_i_2__0_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire [1:0]byte_cnt;
  wire \byte_cnt[0]_i_1__0_n_0 ;
  wire \byte_cnt[1]_i_1__0_n_0 ;
  wire \byte_cnt[1]_i_2__0_n_0 ;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxvalidesc;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire dl_en_hs_lpn1_out;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_i_4__0_n_0;
  wire dl_en_hs_lpn_reg_0;
  wire dl_enable_sync_i_n_1;
  wire dl_enable_sync_i_n_17;
  wire dl_enable_sync_i_n_19;
  wire dl_enable_sync_i_n_2;
  wire dl_enable_sync_i_n_20;
  wire dl_enable_sync_i_n_21;
  wire dl_enable_sync_i_n_22;
  wire dl_enable_sync_i_n_23;
  wire dl_enable_sync_i_n_24;
  wire dl_enable_sync_i_n_25;
  wire dl_enable_sync_i_n_26;
  wire dl_enable_sync_i_n_27;
  wire dl_enable_sync_i_n_28;
  wire dl_enable_sync_i_n_29;
  wire dl_enable_sync_i_n_3;
  wire dl_enable_sync_i_n_30;
  wire dl_enable_sync_i_n_31;
  wire dl_enable_sync_i_n_32;
  wire dl_enable_sync_i_n_33;
  wire dl_enable_sync_i_n_34;
  wire dl_enable_sync_i_n_35;
  wire dl_enable_sync_i_n_36;
  wire dl_enable_sync_i_n_37;
  wire dl_enable_sync_i_n_38;
  wire dl_enable_sync_i_n_39;
  wire dl_enable_sync_i_n_4;
  wire dl_enable_sync_i_n_40;
  wire dl_enable_sync_i_n_41;
  wire dl_enable_sync_i_n_42;
  wire dl_enable_sync_i_n_43;
  wire dl_enable_sync_i_n_44;
  wire dl_enable_sync_i_n_45;
  wire dl_enable_sync_i_n_46;
  wire dl_enable_sync_i_n_47;
  wire dl_enable_sync_i_n_48;
  wire dl_enable_sync_i_n_49;
  wire dl_enable_sync_i_n_5;
  wire dl_enable_sync_i_n_50;
  wire dl_enable_sync_i_n_51;
  wire dl_enable_sync_i_n_6;
  wire dl_enable_sync_i_n_7;
  wire dl_errcontrol_i_10__0_n_0;
  wire dl_errcontrol_i_12__0_n_0;
  wire dl_errcontrol_i_13__0_n_0;
  wire dl_errcontrol_i_14__0_n_0;
  wire dl_errcontrol_i_16__0_n_0;
  wire dl_errcontrol_i_17__0_n_0;
  wire dl_errcontrol_i_18__0_n_0;
  wire dl_errcontrol_i_4__0_n_0;
  wire dl_errcontrol_i_6__0_n_0;
  wire dl_errcontrol_i_8__0_n_0;
  wire dl_errcontrol_i_9__0_n_0;
  wire dl_erresc_i_2__0_n_0;
  wire dl_erresc_i_3__0_n_0;
  wire dl_erresc_i_4__0_n_0;
  wire dl_erresc_i_5__0_n_0;
  wire dl_erresc_i_6__0_n_0;
  wire dl_erresc_i_7__0_n_0;
  wire dl_forcerxmode_ris_edge;
  wire dl_forcerxmode_ris_edge0;
  wire dl_forcerxmode_sync_r;
  wire [4:0]dl_rx_state__0;
  wire dl_rxlpdtesc_i_2__0_n_0;
  wire dl_rxlpdtesc_i_3__0_n_0;
  wire dl_rxlpdtesc_i_4__0_n_0;
  wire dl_rxlpdtesc_i_5__0_n_0;
  wire dl_rxlpdtesc_reg_0;
  wire \dl_rxtriggeresc[1]_i_2__0_n_0 ;
  wire \dl_rxtriggeresc[1]_i_3__0_n_0 ;
  wire \dl_rxtriggeresc[2]_i_2__0_n_0 ;
  wire \dl_rxtriggeresc[3]_i_3__0_n_0 ;
  wire \dl_rxtriggeresc[3]_i_5__0_n_0 ;
  wire \dl_rxtriggeresc[3]_i_6__0_n_0 ;
  wire \dl_rxtriggeresc[3]_i_7__0_n_0 ;
  wire \dl_rxtriggeresc[3]_i_8__0_n_0 ;
  wire dl_rxulpsesc_i_1__0_n_0;
  wire dl_rxulpsesc_reg_0;
  wire [1:0]dl_state;
  wire [3:0]\^dl_status_reg ;
  wire dl_status_reg_bit_0_i_2__0_n_0;
  wire dl_status_reg_bit_0_reg_0;
  wire dl_status_reg_bit_1_i_10__0_n_0;
  wire dl_status_reg_bit_1_i_11__0_n_0;
  wire dl_status_reg_bit_1_i_3__0_n_0;
  wire dl_status_reg_bit_1_i_5__0_n_0;
  wire dl_status_reg_bit_1_i_6__0_n_0;
  (* DONT_TOUCH *) wire dl_status_reg_bit_2;
  wire dl_status_reg_bit_2_i_1__0_n_0;
  wire dl_status_reg_bit_4_i_2__0_n_0;
  wire dl_status_reg_bit_4_reg_0;
  (* DONT_TOUCH *) wire dl_status_reg_bit_6;
  wire dl_status_reg_bit_626_out;
  wire dl_status_reg_bit_6_i_11__0_n_0;
  wire dl_status_reg_bit_6_i_12__0_n_0;
  wire dl_status_reg_bit_6_i_13__0_n_0;
  wire dl_status_reg_bit_6_i_6__0_n_0;
  wire dl_status_reg_bit_6_i_7__0_n_0;
  wire dl_stopstate;
  wire dl_stopstate_i_10__0_n_0;
  wire dl_stopstate_i_11__0_n_0;
  wire dl_stopstate_i_12__0_n_0;
  wire dl_stopstate_i_14__0_n_0;
  wire dl_stopstate_i_15__0_n_0;
  wire dl_stopstate_i_3__0_n_0;
  wire dl_stopstate_i_7__0_n_0;
  wire dl_stopstate_i_8__0_n_0;
  wire dl_stopstate_i_9__0_n_0;
  wire dl_ulpsactivenot_i_2__0_n_0;
  wire dl_ulpsactivenot_i_3__0_n_0;
  wire dl_ulpsactivenot_i_4__0_n_0;
  wire dl_ulpsactivenot_i_5__0_n_0;
  wire dl_ulpsactivenot_i_7__0_n_0;
  wire dl_ulpsactivenot_i_8__0_n_0;
  wire errsyncesc_r_i_2__0_n_0;
  wire errsyncesc_r_i_3__0_n_0;
  wire errsyncesc_r_i_4__0_n_0;
  wire errsyncesc_r_reg_n_0;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_2__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_3__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_4__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ;
  wire lp_00_r;
  wire lp_00_r_i_1__1_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1__1_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1__1_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_2__0_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire lp_clk_i_3__0_n_0;
  wire lp_clk_i_7__0_n_0;
  wire lp_clk_i_9__0_n_0;
  wire lp_clk_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[0]_i_2__0_n_0 ;
  wire \lp_st_cnt[0]_i_3__0_n_0 ;
  wire \lp_st_cnt_reg_n_0_[0] ;
  wire \lp_st_cnt_reg_n_0_[1] ;
  wire \lp_st_cnt_reg_n_0_[2] ;
  wire \lp_st_cnt_reg_n_0_[3] ;
  wire \lp_st_cnt_reg_n_0_[4] ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_2;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync0_i_n_5;
  wire lp_state_sync0_i_n_6;
  wire lp_state_sync0_i_n_7;
  wire lp_state_sync1_i_n_1;
  wire lp_state_sync1_i_n_10;
  wire lp_state_sync1_i_n_2;
  wire lp_state_sync1_i_n_3;
  wire lp_state_sync1_i_n_4;
  wire lp_state_sync1_i_n_5;
  wire lp_state_sync1_i_n_6;
  wire lp_state_sync1_i_n_7;
  wire lp_state_sync1_i_n_9;
  wire \lpdt_data_r[7]_i_3__0_n_0 ;
  wire \lpdt_data_r_reg[0]_0 ;
  wire \lpdt_data_r_reg_n_0_[0] ;
  wire \lpdt_data_r_reg_n_0_[1] ;
  wire \lpdt_data_r_reg_n_0_[2] ;
  wire \lpdt_data_r_reg_n_0_[3] ;
  wire \lpdt_data_r_reg_n_0_[4] ;
  wire \lpdt_data_r_reg_n_0_[5] ;
  wire \lpdt_data_r_reg_n_0_[6] ;
  wire \lpdt_data_r_reg_n_0_[7] ;
  wire out;
  wire [7:0]p_0_in;
  wire [7:0]p_1_in;
  wire p_2_in66_in;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxwaitesc_r;
  wire rxwaitesc_r_i_1__0_n_0;
  wire rxwaitesc_r_i_2__0_n_0;
  wire rxwaitesc_r_i_3__0_n_0;
  wire rxwaitesc_r_reg_n_0;
  wire s_level_out_d2_reg;
  wire sel;
  wire \settle_cnt[6]_i_2__0_n_0 ;
  wire \settle_cnt[7]_i_1__0_n_0 ;
  wire \settle_cnt[7]_i_4__0_n_0 ;
  wire [7:0]settle_cnt_reg;
  wire system_rst;
  wire time_out_settle0_carry__0_i_1__0_n_0;
  wire time_out_settle0_carry__0_i_2__0_n_0;
  wire time_out_settle0_carry__0_i_3__0_n_0;
  wire time_out_settle0_carry__0_i_4__0_n_0;
  wire time_out_settle0_carry__0_n_0;
  wire time_out_settle0_carry__0_n_1;
  wire time_out_settle0_carry__0_n_2;
  wire time_out_settle0_carry__0_n_3;
  wire time_out_settle0_carry__1_i_1__0_n_0;
  wire time_out_settle0_carry__1_i_2__0_n_0;
  wire time_out_settle0_carry__1_i_3__0_n_0;
  wire time_out_settle0_carry__1_n_1;
  wire time_out_settle0_carry__1_n_2;
  wire time_out_settle0_carry__1_n_3;
  wire time_out_settle0_carry_i_1__0_n_0;
  wire time_out_settle0_carry_i_2__0_n_0;
  wire time_out_settle0_carry_i_3__0_n_0;
  wire time_out_settle0_carry_i_4__0_n_0;
  wire time_out_settle0_carry_n_0;
  wire time_out_settle0_carry_n_1;
  wire time_out_settle0_carry_n_2;
  wire time_out_settle0_carry_n_3;
  wire time_out_settle_i_1__0_n_0;
  wire time_out_settle_reg_n_0;
  wire [3:0]NLW_time_out_settle0_carry_O_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_time_out_settle0_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__1_O_UNCONNECTED;

  assign dl_status_reg[4] = dl_status_reg_bit_6;
  assign dl_status_reg[3] = \^dl_status_reg [3];
  assign dl_status_reg[2] = dl_status_reg_bit_2;
  assign dl_status_reg[1:0] = \^dl_status_reg [1:0];
  LUT6 #(
    .INIT(64'h11DD000000010000)) 
    \FSM_sequential_dl_rx_state[0]_i_4__0 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_7__0_n_0 ),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[0]),
        .I4(dl_status_reg_bit_0_reg_0),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[0]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_rx_state[0]_i_7__0 
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \FSM_sequential_dl_rx_state[1]_i_8__0 
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rx_state__0[1]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(\FSM_sequential_dl_rx_state[1]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hEFEEEEEE10108181)) 
    \FSM_sequential_dl_rx_state[2]_i_4__0 
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[0]),
        .I3(lp_00_r),
        .I4(dl_rx_state__0[1]),
        .I5(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[2]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0A00C0000000000)) 
    \FSM_sequential_dl_rx_state[2]_i_5__0 
       (.I0(lp_10_r),
        .I1(\FSM_sequential_dl_rx_state[2]_i_8__0_n_0 ),
        .I2(dl_rx_state__0[0]),
        .I3(lp_01_r),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[2]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_rx_state[2]_i_7__0 
       (.I0(lp_01_r),
        .I1(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[2]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_rx_state[2]_i_8__0 
       (.I0(dl_rx_state__0[1]),
        .I1(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[2]_i_8__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \FSM_sequential_dl_rx_state[3]_i_2__0 
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .I3(lp_01_r),
        .I4(dl_rx_state__0[1]),
        .I5(\FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h3380008000800091)) 
    \FSM_sequential_dl_rx_state[3]_i_3__0 
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[0]),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000088888D88)) 
    \FSM_sequential_dl_rx_state[3]_i_6__0 
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(dl_rx_state__0[0]),
        .O(\FSM_sequential_dl_rx_state[3]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[3]_i_9__0 
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(\FSM_sequential_dl_rx_state[3]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'h11F1000011110000)) 
    \FSM_sequential_dl_rx_state[4]_i_11__0 
       (.I0(\settle_cnt[7]_i_1__0_n_0 ),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_errcontrol_i_9__0_n_0),
        .I3(dl_rx_state__0[0]),
        .I4(dl_status_reg_bit_0_reg_0),
        .I5(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[4]_i_11__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_dl_rx_state[4]_i_13__0 
       (.I0(lp_11_r_reg_n_0),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000F80088)) 
    \FSM_sequential_dl_rx_state[4]_i_15__0 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_17__0_n_0 ),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_10_r),
        .I5(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_15__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_rx_state[4]_i_16__0 
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_16__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_sequential_dl_rx_state[4]_i_17__0 
       (.I0(lp_01_r),
        .I1(lp_00_r),
        .I2(dl_rx_state__0[0]),
        .O(\FSM_sequential_dl_rx_state[4]_i_17__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[4]_i_18__0 
       (.I0(lp_11_r_reg_n_0),
        .I1(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_18__0_n_0 ));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \FSM_sequential_dl_rx_state[4]_i_19__0 
       (.I0(dl_errcontrol_i_14__0_n_0),
        .I1(dl_rx_state__0[0]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(\lpdt_data_r_reg[0]_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_19__0_n_0 ));
  LUT6 #(
    .INIT(64'h0203000012120000)) 
    \FSM_sequential_dl_rx_state[4]_i_4__0 
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[0]),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_rx_state__0[1]),
        .O(\FSM_sequential_dl_rx_state[4]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h0CFF04040C0C0404)) 
    \FSM_sequential_dl_rx_state[4]_i_5__0 
       (.I0(dl_errcontrol_i_17__0_n_0),
        .I1(dl_rx_state__0[4]),
        .I2(dl_ulpsactivenot_i_3__0_n_0),
        .I3(dl_errcontrol_i_8__0_n_0),
        .I4(lp_10_r),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[4]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h2222FFFF22222F22)) 
    \FSM_sequential_dl_rx_state[4]_i_6__0 
       (.I0(dl_rxulpsesc_reg_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_16__0_n_0 ),
        .I2(dl_errcontrol_i_14__0_n_0),
        .I3(\FSM_sequential_dl_rx_state[4]_i_17__0_n_0 ),
        .I4(dl_errcontrol_i_12__0_n_0),
        .I5(\FSM_sequential_dl_rx_state[4]_i_18__0_n_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h2030200020002000)) 
    \FSM_sequential_dl_rx_state[4]_i_7__0 
       (.I0(lp_01_r),
        .I1(dl_errcontrol_i_8__0_n_0),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .I4(time_out_settle_reg_n_0),
        .I5(dl_status_reg_bit_4_reg_0),
        .O(\FSM_sequential_dl_rx_state[4]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000F4)) 
    \FSM_sequential_dl_rx_state[4]_i_8__0 
       (.I0(dl_rx_state__0[0]),
        .I1(lp_01_r),
        .I2(lp_10_r),
        .I3(dl_ulpsactivenot_i_2__0_n_0),
        .I4(dl_rx_state__0[3]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_19__0_n_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_8__0_n_0 ));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(dl_enable_sync_i_n_5),
        .PRE(core_rst),
        .Q(dl_rx_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_4),
        .Q(dl_rx_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(lp_state_sync0_i_n_1),
        .PRE(core_rst),
        .Q(dl_rx_state__0[2]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[3] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(dl_enable_sync_i_n_3),
        .PRE(core_rst),
        .Q(dl_rx_state__0[3]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_rx_state_reg[4] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(dl_rx_state__0[4]));
  LUT5 #(
    .INIT(32'hF0FFFB00)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_1__0 
       (.I0(dl_state[1]),
        .I1(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2__0_n_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_2__0_n_0 ),
        .I3(\gen_hs_high_rates_spec_v1_1.stopstate_i_4__0_n_0 ),
        .I4(dl_state[0]),
        .O(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ));
  LUT3 #(
    .INIT(8'hAE)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I2(rxactivehs_coreclk_sync_r),
        .O(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hCFE0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[1]_i_1__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_4__0_n_0 ),
        .I3(dl_state[1]),
        .O(dl_en_hs_lpn_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \bit_cnt[2]_i_2__0 
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_00_r),
        .O(\bit_cnt[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \bit_cnt[3]_i_2__0 
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rx_state__0[1]),
        .I5(rxwaitesc_r_reg_n_0),
        .O(bit_cnt));
  FDRE \bit_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_1),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_49),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_50),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_51),
        .Q(p_2_in66_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0026)) 
    \byte_cnt[0]_i_1__0 
       (.I0(byte_cnt[0]),
        .I1(\byte_cnt[1]_i_2__0_n_0 ),
        .I2(byte_cnt[1]),
        .I3(dl_enable_sync_i_n_17),
        .O(\byte_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \byte_cnt[1]_i_1__0 
       (.I0(byte_cnt[1]),
        .I1(\byte_cnt[1]_i_2__0_n_0 ),
        .I2(byte_cnt[0]),
        .I3(dl_enable_sync_i_n_17),
        .O(\byte_cnt[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80008000)) 
    \byte_cnt[1]_i_2__0 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt[2]_i_2__0_n_0 ),
        .I4(byte_cnt[0]),
        .I5(byte_cnt[1]),
        .O(\byte_cnt[1]_i_2__0_n_0 ));
  FDRE \byte_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\byte_cnt[0]_i_1__0_n_0 ),
        .Q(byte_cnt[0]),
        .R(1'b0));
  FDRE \byte_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\byte_cnt[1]_i_1__0_n_0 ),
        .Q(byte_cnt[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    dl_en_hs_lpn_i_2__0
       (.I0(dl_rx_state__0[3]),
        .I1(lp_11_r_reg_n_0),
        .I2(time_out_settle_reg_n_0),
        .I3(dl_status_reg_bit_4_reg_0),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(dl_en_hs_lpn1_out));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h08)) 
    dl_en_hs_lpn_i_4__0
       (.I0(dl_status_reg_bit_4_reg_0),
        .I1(time_out_settle_reg_n_0),
        .I2(\settle_cnt[7]_i_1__0_n_0 ),
        .O(dl_en_hs_lpn_i_4__0_n_0));
  FDCE dl_en_hs_lpn_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_48),
        .Q(dl_en_hs_lpn_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_6 dl_enable_sync_i
       (.D({dl_enable_sync_i_n_2,dl_enable_sync_i_n_3,dl_enable_sync_i_n_4,dl_enable_sync_i_n_5}),
        .E(dl_enable_sync_i_n_21),
        .\FSM_sequential_dl_rx_state_reg[0] (dl_enable_sync_i_n_17),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (lp_state_sync0_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (\FSM_sequential_dl_rx_state[0]_i_4__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (lp_state_sync1_i_n_4),
        .\FSM_sequential_dl_rx_state_reg[1] (lp_state_sync1_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (dl_errcontrol_i_9__0_n_0),
        .\FSM_sequential_dl_rx_state_reg[1]_1 (lp_state_sync1_i_n_9),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_enable_sync_i_n_28),
        .\FSM_sequential_dl_rx_state_reg[3] (\FSM_sequential_dl_rx_state[3]_i_2__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3]_0 (\FSM_sequential_dl_rx_state[3]_i_3__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3]_1 (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[4] (dl_enable_sync_i_n_19),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (\FSM_sequential_dl_rx_state[4]_i_11__0_n_0 ),
        .Q(dl_rx_state__0),
        .bit_cnt(bit_cnt),
        .\bit_cnt_reg[0] (dl_enable_sync_i_n_1),
        .\bit_cnt_reg[0]_0 (\bit_cnt_reg_n_0_[0] ),
        .\bit_cnt_reg[0]_1 (rxwaitesc_r_reg_n_0),
        .\bit_cnt_reg[0]_2 (\lpdt_data_r[7]_i_3__0_n_0 ),
        .\bit_cnt_reg[1] (dl_enable_sync_i_n_49),
        .\bit_cnt_reg[1]_0 (\bit_cnt[2]_i_2__0_n_0 ),
        .\bit_cnt_reg[1]_1 (\bit_cnt_reg_n_0_[1] ),
        .\bit_cnt_reg[2] (dl_enable_sync_i_n_50),
        .\bit_cnt_reg[2]_0 (\bit_cnt_reg_n_0_[2] ),
        .\bit_cnt_reg[3] (dl_enable_sync_i_n_51),
        .byte_cnt(byte_cnt),
        .\byte_cnt_reg[0] (dl_rxulpsesc_reg_0),
        .\byte_cnt_reg[1] (dl_enable_sync_i_n_37),
        .\byte_cnt_reg[1]_0 (dl_enable_sync_i_n_38),
        .cl_rxclkactivehs_reg(dl_enable_sync_i_n_43),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_en_hs_lpn1_out(dl_en_hs_lpn1_out),
        .dl_en_hs_lpn_reg(dl_enable_sync_i_n_48),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_i_4__0_n_0),
        .dl_en_hs_lpn_reg_1(dl_status_reg_bit_0_i_2__0_n_0),
        .dl_en_hs_lpn_reg_2(dl_en_hs_lpn_i),
        .dl_errcontrol_i_2__0_0(dl_errcontrol_i_18__0_n_0),
        .dl_errcontrol_reg(dl_enable_sync_i_n_46),
        .dl_errcontrol_reg_0(dl_errcontrol_i_8__0_n_0),
        .dl_errcontrol_reg_1(lp_state_sync0_i_n_3),
        .dl_errcontrol_reg_2(dl_errcontrol_i_4__0_n_0),
        .dl_errcontrol_reg_3(lp_state_sync1_i_n_1),
        .dl_errcontrol_reg_4(dl_errcontrol_i_6__0_n_0),
        .dl_erresc_reg(dl_enable_sync_i_n_22),
        .dl_erresc_reg_0(dl_erresc_i_2__0_n_0),
        .dl_erresc_reg_1(dl_erresc_i_3__0_n_0),
        .dl_erresc_reg_2(dl_erresc_i_4__0_n_0),
        .dl_erresc_reg_3(dl_erresc_i_5__0_n_0),
        .dl_forcerxmode_ris_edge(dl_forcerxmode_ris_edge),
        .\dl_rxtriggeresc_reg[0] (\dl_rxtriggeresc[3]_i_3__0_n_0 ),
        .\dl_rxtriggeresc_reg[1] (\dl_rxtriggeresc[1]_i_3__0_n_0 ),
        .\dl_rxtriggeresc_reg[1]_0 (\dl_rxtriggeresc[1]_i_2__0_n_0 ),
        .\dl_rxtriggeresc_reg[2] (dl_rxlpdtesc_i_4__0_n_0),
        .\dl_rxtriggeresc_reg[2]_0 (\dl_rxtriggeresc[2]_i_2__0_n_0 ),
        .\dl_rxtriggeresc_reg[3] ({\lpdt_data_r_reg_n_0_[7] ,\lpdt_data_r_reg_n_0_[6] ,\lpdt_data_r_reg_n_0_[5] ,\lpdt_data_r_reg_n_0_[4] ,\lpdt_data_r_reg_n_0_[3] ,\lpdt_data_r_reg_n_0_[2] ,\lpdt_data_r_reg_n_0_[1] ,\lpdt_data_r_reg_n_0_[0] }),
        .dl_rxvalidesc_reg(dl_rxlpdtesc_reg_0),
        .dl_status_reg({dl_status_reg_bit_6,\^dl_status_reg [3],\^dl_status_reg [1]}),
        .dl_status_reg_bit_1_i_2__0_0(dl_errcontrol_i_14__0_n_0),
        .dl_status_reg_bit_1_i_2__0_1(dl_stopstate_i_15__0_n_0),
        .dl_status_reg_bit_1_reg(dl_enable_sync_i_n_41),
        .dl_status_reg_bit_1_reg_0(dl_ulpsactivenot_i_8__0_n_0),
        .dl_status_reg_bit_1_reg_1(dl_status_reg_bit_1_i_3__0_n_0),
        .dl_status_reg_bit_1_reg_2(dl_status_reg_bit_1_i_5__0_n_0),
        .dl_status_reg_bit_1_reg_3(dl_status_reg_bit_1_i_6__0_n_0),
        .dl_status_reg_bit_1_reg_4(dl_status_reg_bit_1_i_11__0_n_0),
        .dl_status_reg_bit_4_reg(dl_status_reg_bit_0_reg_0),
        .dl_status_reg_bit_4_reg_0(dl_status_reg_bit_4_i_2__0_n_0),
        .dl_status_reg_bit_4_reg_1(dl_status_reg_bit_4_reg_0),
        .dl_status_reg_bit_626_out(dl_status_reg_bit_626_out),
        .dl_status_reg_bit_6_i_5__0(dl_status_reg_bit_6_i_12__0_n_0),
        .dl_status_reg_bit_6_i_5__0_0(\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ),
        .dl_status_reg_bit_6_i_5__0_1(dl_status_reg_bit_6_i_13__0_n_0),
        .dl_status_reg_bit_6_reg(lp_state_sync1_i_n_6),
        .dl_status_reg_bit_6_reg_0(lp_state_sync1_i_n_3),
        .dl_status_reg_bit_6_reg_1(dl_status_reg_bit_6_i_6__0_n_0),
        .dl_status_reg_bit_6_reg_2(dl_errcontrol_i_12__0_n_0),
        .dl_status_reg_bit_6_reg_3(dl_status_reg_bit_6_i_7__0_n_0),
        .dl_stopstate(dl_stopstate),
        .dl_stopstate_reg(dl_enable_sync_i_n_23),
        .dl_stopstate_reg_0(lp_11_r_reg_n_0),
        .dl_stopstate_reg_1(lp_state_sync0_i_n_4),
        .dl_stopstate_reg_2(dl_stopstate_i_7__0_n_0),
        .dl_stopstate_reg_3(dl_stopstate_i_8__0_n_0),
        .dl_stopstate_reg_4(dl_stopstate_i_9__0_n_0),
        .dl_stopstate_reg_5(dl_stopstate_i_10__0_n_0),
        .dl_stopstate_reg_6(dl_stopstate_i_11__0_n_0),
        .dl_stopstate_reg_7(dl_stopstate_i_3__0_n_0),
        .dl_stopstate_reg_8(lp_state_sync0_i_n_5),
        .dl_ulpsactivenot_reg(dl_enable_sync_i_n_44),
        .dl_ulpsactivenot_reg_0(dl_ulpsactivenot_i_3__0_n_0),
        .dl_ulpsactivenot_reg_1(dl_ulpsactivenot_i_2__0_n_0),
        .dl_ulpsactivenot_reg_2(dl_ulpsactivenot_i_4__0_n_0),
        .dl_ulpsactivenot_reg_3(dl_ulpsactivenot_i_5__0_n_0),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (dl_enable_sync_i_n_42),
        .errsyncesc_r_reg(dl_enable_sync_i_n_47),
        .errsyncesc_r_reg_0(errsyncesc_r_i_2__0_n_0),
        .errsyncesc_r_reg_1(errsyncesc_r_reg_n_0),
        .errsyncesc_r_reg_2(errsyncesc_r_i_3__0_n_0),
        .errsyncesc_r_reg_3(errsyncesc_r_i_4__0_n_0),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(dl_enable_sync_i_n_20),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_reg(dl_enable_sync_i_n_40),
        .lp_clk_reg(dl_enable_sync_i_n_39),
        .lp_clk_reg_0(dl_enable_sync_i_n_45),
        .lp_clk_reg_1(lp_clk_i_3__0_n_0),
        .lp_clk_reg_2(lp_clk_i_7__0_n_0),
        .lp_clk_reg_3(lp_clk_reg_n_0),
        .lp_clk_reg_4(lp_state_sync1_i_n_5),
        .\lpdt_data_r_reg[0] ({dl_enable_sync_i_n_29,dl_enable_sync_i_n_30,dl_enable_sync_i_n_31,dl_enable_sync_i_n_32,dl_enable_sync_i_n_33,dl_enable_sync_i_n_34,dl_enable_sync_i_n_35,dl_enable_sync_i_n_36}),
        .\lpdt_data_r_reg[0]_0 (\lpdt_data_r_reg[0]_0 ),
        .\lpdt_data_r_reg[7] ({dl_enable_sync_i_n_24,dl_enable_sync_i_n_25,dl_enable_sync_i_n_26,dl_enable_sync_i_n_27}),
        .out(out),
        .p_1_in(p_1_in),
        .p_2_in66_in(p_2_in66_in),
        .rxwaitesc_r(rxwaitesc_r),
        .s_level_out_d2_reg_0(dl_enable_sync_i_n_6),
        .s_level_out_d2_reg_1(dl_enable_sync_i_n_7),
        .system_rst(system_rst));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dl_errcontrol_i_10__0
       (.I0(lp_01_r),
        .I1(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_10__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_errcontrol_i_12__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_errcontrol_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    dl_errcontrol_i_13__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[0]),
        .I3(\lpdt_data_r_reg[0]_0 ),
        .O(dl_errcontrol_i_13__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_errcontrol_i_14__0
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .O(dl_errcontrol_i_14__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    dl_errcontrol_i_16__0
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(errsyncesc_r_i_2__0_n_0),
        .I5(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_16__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT3 #(
    .INIT(8'h47)) 
    dl_errcontrol_i_17__0
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[1]),
        .I2(lp_01_r),
        .O(dl_errcontrol_i_17__0_n_0));
  LUT6 #(
    .INIT(64'h000000A800000000)) 
    dl_errcontrol_i_18__0
       (.I0(dl_rx_state__0[3]),
        .I1(lp_01_r),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(dl_errcontrol_i_18__0_n_0));
  LUT6 #(
    .INIT(64'h0000100000001010)) 
    dl_errcontrol_i_4__0
       (.I0(dl_rx_state__0[0]),
        .I1(dl_errcontrol_i_12__0_n_0),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(lp_00_r),
        .O(dl_errcontrol_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hBAAABAAABAAAAAAA)) 
    dl_errcontrol_i_6__0
       (.I0(dl_errcontrol_i_16__0_n_0),
        .I1(dl_ulpsactivenot_i_3__0_n_0),
        .I2(dl_rx_state__0[4]),
        .I3(dl_errcontrol_i_17__0_n_0),
        .I4(lp_11_r_reg_n_0),
        .I5(lp_10_r),
        .O(dl_errcontrol_i_6__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    dl_errcontrol_i_8__0
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_8__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    dl_errcontrol_i_9__0
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .O(dl_errcontrol_i_9__0_n_0));
  FDCE dl_errcontrol_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_46),
        .Q(dl1_errcontrol));
  LUT6 #(
    .INIT(64'hAAFEAAAFAAAEAAAE)) 
    dl_erresc_i_2__0
       (.I0(dl_erresc_i_6__0_n_0),
        .I1(dl_erresc_i_7__0_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(dl_rxlpdtesc_i_5__0_n_0),
        .I4(\lpdt_data_r_reg_n_0_[1] ),
        .I5(\dl_rxtriggeresc[1]_i_2__0_n_0 ),
        .O(dl_erresc_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0000DF0000000000)) 
    dl_erresc_i_3__0
       (.I0(\lpdt_data_r_reg_n_0_[3] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .I2(\lpdt_data_r_reg_n_0_[4] ),
        .I3(\lpdt_data_r_reg_n_0_[2] ),
        .I4(byte_cnt[1]),
        .I5(byte_cnt[0]),
        .O(dl_erresc_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h2222002231113031)) 
    dl_erresc_i_4__0
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(dl_rxlpdtesc_i_5__0_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[7] ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(dl_erresc_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h01)) 
    dl_erresc_i_5__0
       (.I0(rxwaitesc_r_reg_n_0),
        .I1(dl_rxlpdtesc_reg_0),
        .I2(dl_rxulpsesc_reg_0),
        .O(dl_erresc_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    dl_erresc_i_6__0
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(\lpdt_data_r_reg_n_0_[6] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\lpdt_data_r_reg_n_0_[2] ),
        .I4(byte_cnt[1]),
        .I5(byte_cnt[0]),
        .O(dl_erresc_i_6__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'hFFFF8E8A)) 
    dl_erresc_i_7__0
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(\lpdt_data_r_reg_n_0_[7] ),
        .I2(\lpdt_data_r_reg_n_0_[6] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(dl_rxlpdtesc_i_4__0_n_0),
        .O(dl_erresc_i_7__0_n_0));
  FDRE dl_erresc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_22),
        .Q(dl1_erresc),
        .R(1'b0));
  FDCE dl_errsyncesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(errsyncesc_r_reg_n_0),
        .Q(dl1_errsyncesc));
  FDRE dl_forcerxmode_ris_edge_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_ris_edge0),
        .Q(dl_forcerxmode_ris_edge),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_7 dl_forcerxmode_sync_i
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl_forcerxmode_ris_edge0(dl_forcerxmode_ris_edge0),
        .dl_forcerxmode_sync_r(dl_forcerxmode_sync_r),
        .out(s_level_out_d2_reg));
  FDRE dl_forcerxmode_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2_reg),
        .Q(dl_forcerxmode_sync_r),
        .R(1'b0));
  FDCE \dl_rxdataesc_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_36),
        .Q(dl1_rxdataesc[0]));
  FDCE \dl_rxdataesc_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_35),
        .Q(dl1_rxdataesc[1]));
  FDCE \dl_rxdataesc_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_34),
        .Q(dl1_rxdataesc[2]));
  FDCE \dl_rxdataesc_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_33),
        .Q(dl1_rxdataesc[3]));
  FDCE \dl_rxdataesc_reg[4] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_32),
        .Q(dl1_rxdataesc[4]));
  FDCE \dl_rxdataesc_reg[5] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_31),
        .Q(dl1_rxdataesc[5]));
  FDCE \dl_rxdataesc_reg[6] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_30),
        .Q(dl1_rxdataesc[6]));
  FDCE \dl_rxdataesc_reg[7] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_29),
        .Q(dl1_rxdataesc[7]));
  FDCE dl_rxescclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_39),
        .Q(dl1_rxclkesc));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'hFFFF0010)) 
    dl_rxlpdtesc_i_2__0
       (.I0(rxwaitesc_r_reg_n_0),
        .I1(dl_rxulpsesc_reg_0),
        .I2(dl_rxlpdtesc_i_3__0_n_0),
        .I3(dl_rxlpdtesc_i_4__0_n_0),
        .I4(dl_rxlpdtesc_reg_0),
        .O(dl_rxlpdtesc_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    dl_rxlpdtesc_i_3__0
       (.I0(dl_rxlpdtesc_i_5__0_n_0),
        .I1(\lpdt_data_r_reg_n_0_[1] ),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[7] ),
        .O(dl_rxlpdtesc_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    dl_rxlpdtesc_i_4__0
       (.I0(\lpdt_data_r_reg_n_0_[5] ),
        .I1(\lpdt_data_r_reg_n_0_[4] ),
        .I2(\lpdt_data_r_reg_n_0_[3] ),
        .O(dl_rxlpdtesc_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_rxlpdtesc_i_5__0
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .O(dl_rxlpdtesc_i_5__0_n_0));
  FDRE dl_rxlpdtesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_rxlpdtesc_i_2__0_n_0),
        .Q(dl_rxlpdtesc_reg_0),
        .R(rxwaitesc_r));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \dl_rxtriggeresc[1]_i_2__0 
       (.I0(\lpdt_data_r_reg_n_0_[6] ),
        .I1(\lpdt_data_r_reg_n_0_[7] ),
        .O(\dl_rxtriggeresc[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \dl_rxtriggeresc[1]_i_3__0 
       (.I0(\lpdt_data_r_reg_n_0_[4] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .I2(\lpdt_data_r_reg_n_0_[3] ),
        .O(\dl_rxtriggeresc[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \dl_rxtriggeresc[2]_i_2__0 
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(\lpdt_data_r_reg_n_0_[2] ),
        .O(\dl_rxtriggeresc[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h4040404040000000)) 
    \dl_rxtriggeresc[3]_i_3__0 
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_erresc_i_5__0_n_0),
        .I3(\dl_rxtriggeresc[1]_i_2__0_n_0 ),
        .I4(\dl_rxtriggeresc[3]_i_5__0_n_0 ),
        .I5(\dl_rxtriggeresc[3]_i_6__0_n_0 ),
        .O(\dl_rxtriggeresc[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0400000000000020)) 
    \dl_rxtriggeresc[3]_i_5__0 
       (.I0(\lpdt_data_r_reg_n_0_[5] ),
        .I1(\lpdt_data_r_reg_n_0_[4] ),
        .I2(\lpdt_data_r_reg_n_0_[1] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(\lpdt_data_r_reg_n_0_[3] ),
        .I5(\lpdt_data_r_reg_n_0_[2] ),
        .O(\dl_rxtriggeresc[3]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001400)) 
    \dl_rxtriggeresc[3]_i_6__0 
       (.I0(\dl_rxtriggeresc[3]_i_7__0_n_0 ),
        .I1(\lpdt_data_r_reg_n_0_[0] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\dl_rxtriggeresc[3]_i_8__0_n_0 ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(\dl_rxtriggeresc[3]_i_6__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \dl_rxtriggeresc[3]_i_7__0 
       (.I0(\lpdt_data_r_reg_n_0_[4] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .O(\dl_rxtriggeresc[3]_i_7__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \dl_rxtriggeresc[3]_i_8__0 
       (.I0(\lpdt_data_r_reg_n_0_[2] ),
        .I1(\lpdt_data_r_reg_n_0_[3] ),
        .O(\dl_rxtriggeresc[3]_i_8__0_n_0 ));
  FDRE \dl_rxtriggeresc_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_27),
        .Q(dl1_rxtriggeresc[0]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_26),
        .Q(dl1_rxtriggeresc[1]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_25),
        .Q(dl1_rxtriggeresc[2]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_24),
        .Q(dl1_rxtriggeresc[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_rxulpsesc_i_1__0
       (.I0(dl_ulpsactivenot_i_4__0_n_0),
        .I1(rxwaitesc_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .I3(dl_rxulpsesc_reg_0),
        .O(dl_rxulpsesc_i_1__0_n_0));
  FDRE dl_rxulpsesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_rxulpsesc_i_1__0_n_0),
        .Q(dl_rxulpsesc_reg_0),
        .R(rxwaitesc_r));
  FDCE dl_rxvalidesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_37),
        .Q(dl1_rxvalidesc));
  LUT6 #(
    .INIT(64'h0000208000000000)) 
    dl_status_reg_bit_0_i_2__0
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_0_i_2__0_n_0));
  FDCE dl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_10),
        .Q(\^dl_status_reg [0]));
  LUT6 #(
    .INIT(64'h0012000200000000)) 
    dl_status_reg_bit_1_i_10__0
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[0]),
        .I5(lp_10_r),
        .O(dl_status_reg_bit_1_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h00000000C0038000)) 
    dl_status_reg_bit_1_i_11__0
       (.I0(lp_10_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[0]),
        .I4(lp_01_r),
        .I5(dl_ulpsactivenot_i_2__0_n_0),
        .O(dl_status_reg_bit_1_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF45004000)) 
    dl_status_reg_bit_1_i_3__0
       (.I0(dl_ulpsactivenot_i_3__0_n_0),
        .I1(lp_00_r),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rxulpsesc_reg_0),
        .I5(dl_status_reg_bit_1_i_10__0_n_0),
        .O(dl_status_reg_bit_1_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h8080808080B08080)) 
    dl_status_reg_bit_1_i_5__0
       (.I0(\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_errcontrol_i_14__0_n_0),
        .I4(lp_01_r),
        .I5(dl_rx_state__0[0]),
        .O(dl_status_reg_bit_1_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h0000010C00000000)) 
    dl_status_reg_bit_1_i_6__0
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_1_i_6__0_n_0));
  FDCE dl_status_reg_bit_1_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_41),
        .Q(\^dl_status_reg [1]));
  LUT5 #(
    .INIT(32'hFFFF0001)) 
    dl_status_reg_bit_2_i_1__0
       (.I0(dl_ulpsactivenot_i_4__0_n_0),
        .I1(rxwaitesc_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_status_reg_bit_2),
        .O(dl_status_reg_bit_2_i_1__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE dl_status_reg_bit_2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_status_reg_bit_2_i_1__0_n_0),
        .Q(dl_status_reg_bit_2),
        .R(rxwaitesc_r));
  LUT2 #(
    .INIT(4'hE)) 
    dl_status_reg_bit_4_i_2__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_status_reg_bit_4_i_2__0_n_0));
  FDCE dl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_43),
        .Q(\^dl_status_reg [3]));
  LUT6 #(
    .INIT(64'h000000FF00000047)) 
    dl_status_reg_bit_6_i_11__0
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[1]),
        .I2(lp_01_r),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[0]),
        .O(dl_status_reg_bit_6_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'hFFFF0001)) 
    dl_status_reg_bit_6_i_12__0
       (.I0(dl_rx_state__0[2]),
        .I1(lp_10_r),
        .I2(lp_01_r),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_rx_state__0[3]),
        .O(dl_status_reg_bit_6_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    dl_status_reg_bit_6_i_13__0
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_6_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hFF88008AFF88FF8A)) 
    dl_status_reg_bit_6_i_6__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[0]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(\FSM_sequential_dl_rx_state[2]_i_7__0_n_0 ),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_6_i_6__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_status_reg_bit_6_i_7__0
       (.I0(dl_rx_state__0[0]),
        .I1(lp_00_r),
        .O(dl_status_reg_bit_6_i_7__0_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_reg_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_status_reg_bit_626_out),
        .Q(dl_status_reg_bit_6));
  LUT6 #(
    .INIT(64'h88CC88CCF8FCF8CC)) 
    dl_stopstate_i_10__0
       (.I0(dl_rx_state__0[0]),
        .I1(dl_stopstate_i_14__0_n_0),
        .I2(dl_ulpsactivenot_i_8__0_n_0),
        .I3(lp_00_r),
        .I4(lp_10_r),
        .I5(dl_errcontrol_i_14__0_n_0),
        .O(dl_stopstate_i_10__0_n_0));
  LUT6 #(
    .INIT(64'hA0A00000A3A00000)) 
    dl_stopstate_i_11__0
       (.I0(dl_status_reg_bit_6_i_11__0_n_0),
        .I1(dl_stopstate_i_15__0_n_0),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_status_reg_bit_6_i_7__0_n_0),
        .O(dl_stopstate_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h8)) 
    dl_stopstate_i_12__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_stopstate_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    dl_stopstate_i_14__0
       (.I0(dl_rx_state__0[4]),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .O(dl_stopstate_i_14__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    dl_stopstate_i_15__0
       (.I0(lp_10_r),
        .I1(lp_01_r),
        .I2(dl_rxulpsesc_reg_0),
        .O(dl_stopstate_i_15__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT5 #(
    .INIT(32'h103010E0)) 
    dl_stopstate_i_3__0
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_status_reg_bit_0_reg_0),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .O(dl_stopstate_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    dl_stopstate_i_7__0
       (.I0(\FSM_sequential_dl_rx_state[3]_i_9__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state[4]_i_18__0_n_0 ),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[0]),
        .I4(lp_10_r),
        .I5(lp_01_r),
        .O(dl_stopstate_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h1FFF0E0000000000)) 
    dl_stopstate_i_8__0
       (.I0(lp_01_r),
        .I1(lp_10_r),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ),
        .O(dl_stopstate_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h2020202020203020)) 
    dl_stopstate_i_9__0
       (.I0(\lpdt_data_r[7]_i_3__0_n_0 ),
        .I1(errsyncesc_r_i_2__0_n_0),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rxulpsesc_reg_0),
        .I5(dl_ulpsactivenot_i_3__0_n_0),
        .O(dl_stopstate_i_9__0_n_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_40),
        .Q(dl_stopstate));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_ulpsactivenot_i_2__0
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .O(dl_ulpsactivenot_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    dl_ulpsactivenot_i_3__0
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .O(dl_ulpsactivenot_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    dl_ulpsactivenot_i_4__0
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(\lpdt_data_r_reg_n_0_[6] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\dl_rxtriggeresc[1]_i_3__0_n_0 ),
        .I4(dl_ulpsactivenot_i_7__0_n_0),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(dl_ulpsactivenot_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h0080FFFF)) 
    dl_ulpsactivenot_i_5__0
       (.I0(dl_ulpsactivenot_i_8__0_n_0),
        .I1(lp_10_r),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rxulpsesc_reg_0),
        .O(dl_ulpsactivenot_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    dl_ulpsactivenot_i_7__0
       (.I0(byte_cnt[0]),
        .I1(byte_cnt[1]),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_7__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT3 #(
    .INIT(8'h02)) 
    dl_ulpsactivenot_i_8__0
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .O(dl_ulpsactivenot_i_8__0_n_0));
  FDPE dl_ulpsactivenot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_44),
        .PRE(core_rst),
        .Q(dl1_ulpsactivenot));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(SETTLE_TIMEOUT[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(SETTLE_TIMEOUT[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(SETTLE_TIMEOUT[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(SETTLE_TIMEOUT[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(SETTLE_TIMEOUT[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(SETTLE_TIMEOUT[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(SETTLE_TIMEOUT[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(SETTLE_TIMEOUT[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(SETTLE_TIMEOUT[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    errsyncesc_r_i_2__0
       (.I0(lp_10_r),
        .I1(lp_01_r),
        .I2(lp_00_r),
        .O(errsyncesc_r_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT5 #(
    .INIT(32'h01000104)) 
    errsyncesc_r_i_3__0
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[0]),
        .O(errsyncesc_r_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h40)) 
    errsyncesc_r_i_4__0
       (.I0(p_2_in66_in),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .O(errsyncesc_r_i_4__0_n_0));
  FDCE errsyncesc_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_47),
        .Q(errsyncesc_r_reg_n_0));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_1 
       (.I0(\gen_hs_high_rates_spec_v1_1.stopstate_i_2__0_n_0 ),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_i_3__0_n_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_4__0_n_0 ),
        .I3(dl1_stopstate),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_reg ));
  LUT6 #(
    .INIT(64'h0010001010100010)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_2__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(dl_state[1]),
        .I2(dl_state[0]),
        .I3(\gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ),
        .I4(dl_stopstate),
        .I5(\gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030513000)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_3__0 
       (.I0(dl_en_hs_lpn_i),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I2(rxactivehs_coreclk_sync_r),
        .I3(dl_state[1]),
        .I4(dl_stopstate),
        .I5(dl_state[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E5F5E0F0F0F0E)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_4__0 
       (.I0(dl_state[0]),
        .I1(dl_stopstate),
        .I2(dl_state[1]),
        .I3(dl_en_hs_lpn_i),
        .I4(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I5(rxactivehs_coreclk_sync_r),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[22]));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_1__1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_00_r_i_1__1_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_1__1_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1__1
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1__1_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1__1_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1__1
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1__1_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1__1_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    lp_11_r_i_1__0
       (.I0(\lp_st_cnt_reg_n_0_[1] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[3] ),
        .I3(\lp_st_cnt_reg_n_0_[2] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_2__0
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_11_r_i_2__0_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_2__0_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    lp_clk_i_3__0
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[4]),
        .O(lp_clk_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    lp_clk_i_7__0
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[1]),
        .I3(lp_00_r),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(lp_clk_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAAE)) 
    lp_clk_i_9__0
       (.I0(dl_status_reg_bit_1_i_5__0_n_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_status_reg_bit_6_i_13__0_n_0),
        .I5(dl_status_reg_bit_1_i_3__0_n_0),
        .O(lp_clk_i_9__0_n_0));
  FDCE lp_clk_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_45),
        .Q(lp_clk_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FFFD)) 
    \lp_st_cnt[0]_i_2__0 
       (.I0(\lp_st_cnt_reg_n_0_[1] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[3] ),
        .I3(\lp_st_cnt_reg_n_0_[2] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \lp_st_cnt[0]_i_3__0 
       (.I0(lp_11_r_reg_n_0),
        .I1(lp_10_r),
        .I2(lp_01_r),
        .I3(lp_00_r),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_3__0_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[0]),
        .Q(\lp_st_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[1]),
        .Q(\lp_st_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[2]),
        .Q(\lp_st_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[3]),
        .Q(\lp_st_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[4]),
        .Q(\lp_st_cnt_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  FDRE \lp_st_out_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_dup[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \lp_st_out_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_dup[1]),
        .Q(Q[1]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1 lp_state_sync0_i
       (.D(lp_state_sync0_i_n_1),
        .\FSM_sequential_dl_rx_state[2]_i_2__0_0 (\lpdt_data_r_reg[0]_0 ),
        .\FSM_sequential_dl_rx_state[3]_i_5__0_0 (\FSM_sequential_dl_rx_state[3]_i_9__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0] (lp_state_sync0_i_n_4),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (lp_state_sync0_i_n_5),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (lp_state_sync0_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (dl_status_reg_bit_0_reg_0),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_enable_sync_i_n_28),
        .\FSM_sequential_dl_rx_state_reg[2]_0 (\FSM_sequential_dl_rx_state[2]_i_4__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_1 (lp_11_r_reg_n_0),
        .\FSM_sequential_dl_rx_state_reg[2]_2 (\FSM_sequential_dl_rx_state[3]_i_2__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_3 (\FSM_sequential_dl_rx_state[2]_i_5__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_4 (\FSM_sequential_dl_rx_state[2]_i_7__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_5 (dl_rxulpsesc_reg_0),
        .\FSM_sequential_dl_rx_state_reg[2]_6 (dl_status_reg_bit_4_i_2__0_n_0),
        .\FSM_sequential_dl_rx_state_reg[4] (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (lp_state_sync0_i_n_6),
        .Q(dl_rx_state__0),
        .core_clk(core_clk),
        .dl_errcontrol_reg(dl_errcontrol_i_9__0_n_0),
        .dl_errcontrol_reg_0(dl_errcontrol_i_10__0_n_0),
        .dl_errcontrol_reg_1(lp_clk_i_3__0_n_0),
        .dl_stopstate_i_2__0(dl_stopstate_i_12__0_n_0),
        .dl_stopstate_reg(errsyncesc_r_i_2__0_n_0),
        .dl_stopstate_reg_0(lp_state_sync1_i_n_6),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(lp_state_sync0_i_n_3),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .\lp_st_cnt_reg[1] ({\lp_st_cnt_reg_n_0_[4] ,\lp_st_cnt_reg_n_0_[3] ,\lp_st_cnt_reg_n_0_[2] ,\lp_st_cnt_reg_n_0_[1] ,\lp_st_cnt_reg_n_0_[0] }),
        .\lp_st_cnt_reg[2] (lp_st_cnt[4:1]),
        .\lp_st_cnt_reg[4] (lp_st_dup),
        .\lp_st_cnt_reg[4]_0 (lp_state_sync[1]),
        .out(lp_state_sync[0]),
        .rx_dl1_lp_dn(rx_dl1_lp_dn));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_8 lp_state_sync1_i
       (.D(p_1_in[0]),
        .E(lp_state_sync1_i_n_2),
        .\FSM_sequential_dl_rx_state[0]_i_6__0_0 (\lpdt_data_r_reg[0]_0 ),
        .\FSM_sequential_dl_rx_state_reg[0] (\FSM_sequential_dl_rx_state[4]_i_4__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (\FSM_sequential_dl_rx_state[4]_i_5__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (\FSM_sequential_dl_rx_state[4]_i_6__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (\FSM_sequential_dl_rx_state[4]_i_7__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_3 (\FSM_sequential_dl_rx_state[4]_i_8__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_4 (dl_ulpsactivenot_i_3__0_n_0),
        .\FSM_sequential_dl_rx_state_reg[0]_5 (lp_state_sync0_i_n_6),
        .\FSM_sequential_dl_rx_state_reg[0]_6 (\FSM_sequential_dl_rx_state[4]_i_13__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_7 (\FSM_sequential_dl_rx_state[4]_i_15__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[1] (\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (\FSM_sequential_dl_rx_state[1]_i_8__0_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[4] (lp_state_sync1_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (lp_state_sync1_i_n_10),
        .Q(dl_rx_state__0),
        .core_clk(core_clk),
        .dl_errcontrol_reg(dl_errcontrol_i_13__0_n_0),
        .dl_errcontrol_reg_0(dl_errcontrol_i_14__0_n_0),
        .dl_errcontrol_reg_1(dl_enable_sync_i_n_6),
        .dl_status_reg({dl_status_reg_bit_6,\^dl_status_reg [0]}),
        .dl_status_reg_bit_0_reg(dl_status_reg_bit_0_reg_0),
        .dl_status_reg_bit_0_reg_0(dl_errcontrol_i_8__0_n_0),
        .dl_status_reg_bit_0_reg_1(dl_enable_sync_i_n_19),
        .dl_status_reg_bit_0_reg_2(dl_status_reg_bit_0_i_2__0_n_0),
        .dl_status_reg_bit_6_i_5__0_0(dl_stopstate_i_3__0_n_0),
        .dl_status_reg_bit_6_i_5__0_1(\FSM_sequential_dl_rx_state[0]_i_7__0_n_0 ),
        .dl_status_reg_bit_6_reg(dl_enable_sync_i_n_20),
        .dl_status_reg_bit_6_reg_0(lp_11_r_reg_n_0),
        .dl_status_reg_bit_6_reg_1(dl_enable_sync_i_n_7),
        .dl_status_reg_bit_6_reg_2(dl_status_reg_bit_6_i_11__0_n_0),
        .dl_status_reg_bit_6_reg_3(\lpdt_data_r[7]_i_3__0_n_0 ),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(lp_state_sync1_i_n_1),
        .lp_00_r_reg_0(lp_state_sync1_i_n_4),
        .lp_00_r_reg_1(lp_state_sync1_i_n_6),
        .lp_10_r(lp_10_r),
        .lp_10_r_reg(lp_state_sync1_i_n_5),
        .lp_10_r_reg_0(lp_state_sync1_i_n_9),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_state_sync1_i_n_3),
        .lp_clk_reg(lp_clk_i_9__0_n_0),
        .lp_clk_reg_0(dl_enable_sync_i_n_42),
        .\lp_st_cnt_reg[0] (lp_state_sync[0]),
        .\lp_st_cnt_reg[0]_0 (\lp_st_cnt[0]_i_2__0_n_0 ),
        .\lp_st_cnt_reg[0]_1 (\lp_st_cnt[0]_i_3__0_n_0 ),
        .\lp_st_cnt_reg[0]_2 (lp_st_dup),
        .\lp_st_dup_reg[1] (lp_st_cnt[0]),
        .out(lp_state_sync[1]),
        .rx_dl1_lp_dp(rx_dl1_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \lpdt_data_r[7]_i_3__0 
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .O(\lpdt_data_r[7]_i_3__0_n_0 ));
  FDCE \lpdt_data_r_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[0]),
        .Q(\lpdt_data_r_reg_n_0_[0] ));
  FDCE \lpdt_data_r_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[1]),
        .Q(\lpdt_data_r_reg_n_0_[1] ));
  FDCE \lpdt_data_r_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[2]),
        .Q(\lpdt_data_r_reg_n_0_[2] ));
  FDCE \lpdt_data_r_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[3]),
        .Q(\lpdt_data_r_reg_n_0_[3] ));
  FDCE \lpdt_data_r_reg[4] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[4]),
        .Q(\lpdt_data_r_reg_n_0_[4] ));
  FDCE \lpdt_data_r_reg[5] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[5]),
        .Q(\lpdt_data_r_reg_n_0_[5] ));
  FDCE \lpdt_data_r_reg[6] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[6]),
        .Q(\lpdt_data_r_reg_n_0_[6] ));
  FDCE \lpdt_data_r_reg[7] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[7]),
        .Q(\lpdt_data_r_reg_n_0_[7] ));
  LUT4 #(
    .INIT(16'hFFAE)) 
    rxwaitesc_r_i_1__0
       (.I0(\dl_rxtriggeresc[3]_i_3__0_n_0 ),
        .I1(rxwaitesc_r_i_2__0_n_0),
        .I2(rxwaitesc_r_i_3__0_n_0),
        .I3(rxwaitesc_r_reg_n_0),
        .O(rxwaitesc_r_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000000028)) 
    rxwaitesc_r_i_2__0
       (.I0(\lpdt_data_r_reg_n_0_[7] ),
        .I1(\lpdt_data_r_reg_n_0_[0] ),
        .I2(\lpdt_data_r_reg_n_0_[6] ),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_rxlpdtesc_reg_0),
        .I5(rxwaitesc_r_reg_n_0),
        .O(rxwaitesc_r_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    rxwaitesc_r_i_3__0
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(dl_rxlpdtesc_i_5__0_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[3] ),
        .I4(\lpdt_data_r_reg_n_0_[5] ),
        .I5(\lpdt_data_r_reg_n_0_[4] ),
        .O(rxwaitesc_r_i_3__0_n_0));
  FDRE rxwaitesc_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(rxwaitesc_r_i_1__0_n_0),
        .Q(rxwaitesc_r_reg_n_0),
        .R(rxwaitesc_r));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[0]_i_1__0 
       (.I0(settle_cnt_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[1]_i_1__0 
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \settle_cnt[2]_i_1__0 
       (.I0(settle_cnt_reg[1]),
        .I1(settle_cnt_reg[0]),
        .I2(settle_cnt_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \settle_cnt[3]_i_1__0 
       (.I0(settle_cnt_reg[2]),
        .I1(settle_cnt_reg[0]),
        .I2(settle_cnt_reg[1]),
        .I3(settle_cnt_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \settle_cnt[4]_i_1__0 
       (.I0(settle_cnt_reg[3]),
        .I1(settle_cnt_reg[1]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[2]),
        .I4(settle_cnt_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \settle_cnt[5]_i_1__0 
       (.I0(settle_cnt_reg[4]),
        .I1(settle_cnt_reg[2]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[1]),
        .I4(settle_cnt_reg[3]),
        .I5(settle_cnt_reg[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \settle_cnt[6]_i_1__0 
       (.I0(settle_cnt_reg[5]),
        .I1(settle_cnt_reg[3]),
        .I2(\settle_cnt[6]_i_2__0_n_0 ),
        .I3(settle_cnt_reg[2]),
        .I4(settle_cnt_reg[4]),
        .I5(settle_cnt_reg[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \settle_cnt[6]_i_2__0 
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .O(\settle_cnt[6]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    \settle_cnt[7]_i_1__0 
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .O(\settle_cnt[7]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[7]_i_2__0 
       (.I0(time_out_settle0_carry__1_n_1),
        .O(sel));
  LUT3 #(
    .INIT(8'hD2)) 
    \settle_cnt[7]_i_3__0 
       (.I0(settle_cnt_reg[6]),
        .I1(\settle_cnt[7]_i_4__0_n_0 ),
        .I2(settle_cnt_reg[7]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \settle_cnt[7]_i_4__0 
       (.I0(settle_cnt_reg[4]),
        .I1(settle_cnt_reg[2]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[1]),
        .I4(settle_cnt_reg[3]),
        .I5(settle_cnt_reg[5]),
        .O(\settle_cnt[7]_i_4__0_n_0 ));
  FDRE \settle_cnt_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(settle_cnt_reg[0]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(settle_cnt_reg[1]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(settle_cnt_reg[2]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(settle_cnt_reg[3]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(settle_cnt_reg[4]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(settle_cnt_reg[5]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(settle_cnt_reg[6]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  FDRE \settle_cnt_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(settle_cnt_reg[7]),
        .R(\settle_cnt[7]_i_1__0_n_0 ));
  CARRY4 time_out_settle0_carry
       (.CI(1'b0),
        .CO({time_out_settle0_carry_n_0,time_out_settle0_carry_n_1,time_out_settle0_carry_n_2,time_out_settle0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_settle0_carry_i_1__0_n_0,time_out_settle0_carry_i_2__0_n_0,time_out_settle0_carry_i_3__0_n_0,time_out_settle0_carry_i_4__0_n_0}));
  CARRY4 time_out_settle0_carry__0
       (.CI(time_out_settle0_carry_n_0),
        .CO({time_out_settle0_carry__0_n_0,time_out_settle0_carry__0_n_1,time_out_settle0_carry__0_n_2,time_out_settle0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__0_O_UNCONNECTED[3:0]),
        .S({time_out_settle0_carry__0_i_1__0_n_0,time_out_settle0_carry__0_i_2__0_n_0,time_out_settle0_carry__0_i_3__0_n_0,time_out_settle0_carry__0_i_4__0_n_0}));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_1__0
       (.I0(SETTLE_TIMEOUT[23]),
        .I1(SETTLE_TIMEOUT[22]),
        .I2(SETTLE_TIMEOUT[21]),
        .O(time_out_settle0_carry__0_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_2__0
       (.I0(SETTLE_TIMEOUT[20]),
        .I1(SETTLE_TIMEOUT[19]),
        .I2(SETTLE_TIMEOUT[18]),
        .O(time_out_settle0_carry__0_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_3__0
       (.I0(SETTLE_TIMEOUT[17]),
        .I1(SETTLE_TIMEOUT[16]),
        .I2(SETTLE_TIMEOUT[15]),
        .O(time_out_settle0_carry__0_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_4__0
       (.I0(SETTLE_TIMEOUT[14]),
        .I1(SETTLE_TIMEOUT[13]),
        .I2(SETTLE_TIMEOUT[12]),
        .O(time_out_settle0_carry__0_i_4__0_n_0));
  CARRY4 time_out_settle0_carry__1
       (.CI(time_out_settle0_carry__0_n_0),
        .CO({NLW_time_out_settle0_carry__1_CO_UNCONNECTED[3],time_out_settle0_carry__1_n_1,time_out_settle0_carry__1_n_2,time_out_settle0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,time_out_settle0_carry__1_i_1__0_n_0,time_out_settle0_carry__1_i_2__0_n_0,time_out_settle0_carry__1_i_3__0_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    time_out_settle0_carry__1_i_1__0
       (.I0(SETTLE_TIMEOUT[30]),
        .I1(SETTLE_TIMEOUT[31]),
        .O(time_out_settle0_carry__1_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__1_i_2__0
       (.I0(SETTLE_TIMEOUT[29]),
        .I1(SETTLE_TIMEOUT[28]),
        .I2(SETTLE_TIMEOUT[27]),
        .O(time_out_settle0_carry__1_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__1_i_3__0
       (.I0(SETTLE_TIMEOUT[26]),
        .I1(SETTLE_TIMEOUT[25]),
        .I2(SETTLE_TIMEOUT[24]),
        .O(time_out_settle0_carry__1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry_i_1__0
       (.I0(SETTLE_TIMEOUT[11]),
        .I1(SETTLE_TIMEOUT[10]),
        .I2(SETTLE_TIMEOUT[9]),
        .O(time_out_settle0_carry_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h41000041)) 
    time_out_settle0_carry_i_2__0
       (.I0(SETTLE_TIMEOUT[8]),
        .I1(SETTLE_TIMEOUT[7]),
        .I2(settle_cnt_reg[7]),
        .I3(settle_cnt_reg[6]),
        .I4(SETTLE_TIMEOUT[6]),
        .O(time_out_settle0_carry_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    time_out_settle0_carry_i_3__0
       (.I0(SETTLE_TIMEOUT[5]),
        .I1(settle_cnt_reg[5]),
        .I2(SETTLE_TIMEOUT[4]),
        .I3(settle_cnt_reg[4]),
        .I4(settle_cnt_reg[3]),
        .I5(SETTLE_TIMEOUT[3]),
        .O(time_out_settle0_carry_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h8200008241000041)) 
    time_out_settle0_carry_i_4__0
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .I2(SETTLE_TIMEOUT[1]),
        .I3(settle_cnt_reg[2]),
        .I4(SETTLE_TIMEOUT[2]),
        .I5(SETTLE_TIMEOUT[0]),
        .O(time_out_settle0_carry_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT3 #(
    .INIT(8'h32)) 
    time_out_settle_i_1__0
       (.I0(time_out_settle0_carry__1_n_1),
        .I1(\settle_cnt[7]_i_1__0_n_0 ),
        .I2(time_out_settle_reg_n_0),
        .O(time_out_settle_i_1__0_n_0));
  FDRE time_out_settle_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_settle_i_1__0_n_0),
        .Q(time_out_settle_reg_n_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_data_lane_sm" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_sm_12
   (out,
    dl_status_reg,
    dl0_rxclkesc,
    dl0_rxvalidesc,
    dl0_errsyncesc,
    dl0_ulpsactivenot,
    dl0_errcontrol,
    dl0_erresc,
    dl_en_hs_lpn_i,
    dl_rxulpsesc_reg_0,
    dl_rxlpdtesc_reg_0,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg ,
    dl_en_hs_lpn_reg_0,
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl_forcerxmode_t0,
    \lp_st_out_reg[1]_0 ,
    rx_dl0_lp_dn,
    rx_dl0_lp_dp,
    core_rst,
    dl0_enable,
    core_clk,
    dl0_forcerxmode,
    dl_status_reg_bit_0_reg_0,
    \lpdt_data_r_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    system_rst,
    dl_status_reg_bit_4_reg_0,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ,
    rxactivehs_coreclk_sync_r,
    dl_state,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ,
    dl0_stopstate,
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ,
    D,
    dl_forcerxmode_out,
    Q);
  output out;
  output [4:0]dl_status_reg;
  output dl0_rxclkesc;
  output dl0_rxvalidesc;
  output dl0_errsyncesc;
  output dl0_ulpsactivenot;
  output dl0_errcontrol;
  output dl0_erresc;
  output dl_en_hs_lpn_i;
  output dl_rxulpsesc_reg_0;
  output dl_rxlpdtesc_reg_0;
  output \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  output dl_en_hs_lpn_reg_0;
  output \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl_forcerxmode_t0;
  output [1:0]\lp_st_out_reg[1]_0 ;
  input rx_dl0_lp_dn;
  input rx_dl0_lp_dp;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input dl0_forcerxmode;
  input dl_status_reg_bit_0_reg_0;
  input \lpdt_data_r_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input system_rst;
  input dl_status_reg_bit_4_reg_0;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ;
  input rxactivehs_coreclk_sync_r;
  input [1:0]dl_state;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ;
  input dl0_stopstate;
  input \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ;
  input [8:0]D;
  input dl_forcerxmode_out;
  input [1:0]Q;

  wire [8:0]D;
  wire \FSM_sequential_dl_rx_state[0]_i_4_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_7_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_4_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_5_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_7_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_3_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_6_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_9_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_11_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_13_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_15_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_16_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_17_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_18_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_19_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_4_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_5_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_6_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_7_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2_n_0 ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ;
  wire \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ;
  wire [1:0]Q;
  (* DONT_TOUCH *) wire [31:0]SETTLE_TIMEOUT;
  wire bit_cnt;
  wire \bit_cnt[2]_i_2_n_0 ;
  wire \bit_cnt_reg_n_0_[0] ;
  wire \bit_cnt_reg_n_0_[1] ;
  wire \bit_cnt_reg_n_0_[2] ;
  wire [1:0]byte_cnt;
  wire \byte_cnt[0]_i_1_n_0 ;
  wire \byte_cnt[1]_i_1_n_0 ;
  wire \byte_cnt[1]_i_2_n_0 ;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxvalidesc;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl_en_hs_lpn1_out;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_i_4_n_0;
  wire dl_en_hs_lpn_reg_0;
  wire dl_enable_sync_i_n_1;
  wire dl_enable_sync_i_n_17;
  wire dl_enable_sync_i_n_19;
  wire dl_enable_sync_i_n_2;
  wire dl_enable_sync_i_n_20;
  wire dl_enable_sync_i_n_21;
  wire dl_enable_sync_i_n_22;
  wire dl_enable_sync_i_n_23;
  wire dl_enable_sync_i_n_24;
  wire dl_enable_sync_i_n_25;
  wire dl_enable_sync_i_n_26;
  wire dl_enable_sync_i_n_27;
  wire dl_enable_sync_i_n_28;
  wire dl_enable_sync_i_n_29;
  wire dl_enable_sync_i_n_3;
  wire dl_enable_sync_i_n_30;
  wire dl_enable_sync_i_n_31;
  wire dl_enable_sync_i_n_32;
  wire dl_enable_sync_i_n_33;
  wire dl_enable_sync_i_n_34;
  wire dl_enable_sync_i_n_35;
  wire dl_enable_sync_i_n_36;
  wire dl_enable_sync_i_n_37;
  wire dl_enable_sync_i_n_38;
  wire dl_enable_sync_i_n_39;
  wire dl_enable_sync_i_n_4;
  wire dl_enable_sync_i_n_40;
  wire dl_enable_sync_i_n_41;
  wire dl_enable_sync_i_n_42;
  wire dl_enable_sync_i_n_43;
  wire dl_enable_sync_i_n_44;
  wire dl_enable_sync_i_n_45;
  wire dl_enable_sync_i_n_46;
  wire dl_enable_sync_i_n_47;
  wire dl_enable_sync_i_n_48;
  wire dl_enable_sync_i_n_49;
  wire dl_enable_sync_i_n_5;
  wire dl_enable_sync_i_n_50;
  wire dl_enable_sync_i_n_51;
  wire dl_enable_sync_i_n_6;
  wire dl_enable_sync_i_n_7;
  wire dl_errcontrol_i_10_n_0;
  wire dl_errcontrol_i_12_n_0;
  wire dl_errcontrol_i_13_n_0;
  wire dl_errcontrol_i_14_n_0;
  wire dl_errcontrol_i_16_n_0;
  wire dl_errcontrol_i_17_n_0;
  wire dl_errcontrol_i_18_n_0;
  wire dl_errcontrol_i_4_n_0;
  wire dl_errcontrol_i_6_n_0;
  wire dl_errcontrol_i_8_n_0;
  wire dl_errcontrol_i_9_n_0;
  wire dl_erresc_i_2_n_0;
  wire dl_erresc_i_3_n_0;
  wire dl_erresc_i_4_n_0;
  wire dl_erresc_i_5_n_0;
  wire dl_erresc_i_6_n_0;
  wire dl_erresc_i_7_n_0;
  wire dl_forcerxmode_out;
  wire [0:0]dl_forcerxmode_out_i;
  wire dl_forcerxmode_ris_edge;
  wire dl_forcerxmode_ris_edge0;
  wire dl_forcerxmode_sync_r;
  wire dl_forcerxmode_t0;
  wire [4:0]dl_rx_state__0;
  wire dl_rxlpdtesc_i_2_n_0;
  wire dl_rxlpdtesc_i_3_n_0;
  wire dl_rxlpdtesc_i_4_n_0;
  wire dl_rxlpdtesc_i_5_n_0;
  wire dl_rxlpdtesc_reg_0;
  wire \dl_rxtriggeresc[1]_i_2_n_0 ;
  wire \dl_rxtriggeresc[1]_i_3_n_0 ;
  wire \dl_rxtriggeresc[2]_i_2_n_0 ;
  wire \dl_rxtriggeresc[3]_i_3_n_0 ;
  wire \dl_rxtriggeresc[3]_i_5_n_0 ;
  wire \dl_rxtriggeresc[3]_i_6_n_0 ;
  wire \dl_rxtriggeresc[3]_i_7_n_0 ;
  wire \dl_rxtriggeresc[3]_i_8_n_0 ;
  wire dl_rxulpsesc_i_1_n_0;
  wire dl_rxulpsesc_reg_0;
  wire [1:0]dl_state;
  wire [3:0]\^dl_status_reg ;
  wire dl_status_reg_bit_0_i_2_n_0;
  wire dl_status_reg_bit_0_reg_0;
  wire dl_status_reg_bit_1_i_10_n_0;
  wire dl_status_reg_bit_1_i_11_n_0;
  wire dl_status_reg_bit_1_i_3_n_0;
  wire dl_status_reg_bit_1_i_5_n_0;
  wire dl_status_reg_bit_1_i_6_n_0;
  (* DONT_TOUCH *) wire dl_status_reg_bit_2;
  wire dl_status_reg_bit_2_i_1_n_0;
  wire dl_status_reg_bit_4_i_2_n_0;
  wire dl_status_reg_bit_4_reg_0;
  (* DONT_TOUCH *) wire dl_status_reg_bit_6;
  wire dl_status_reg_bit_626_out;
  wire dl_status_reg_bit_6_i_11_n_0;
  wire dl_status_reg_bit_6_i_12_n_0;
  wire dl_status_reg_bit_6_i_13_n_0;
  wire dl_status_reg_bit_6_i_6_n_0;
  wire dl_status_reg_bit_6_i_7_n_0;
  wire dl_stopstate;
  wire dl_stopstate_i_10_n_0;
  wire dl_stopstate_i_11_n_0;
  wire dl_stopstate_i_12_n_0;
  wire dl_stopstate_i_14_n_0;
  wire dl_stopstate_i_15_n_0;
  wire dl_stopstate_i_3_n_0;
  wire dl_stopstate_i_7_n_0;
  wire dl_stopstate_i_8_n_0;
  wire dl_stopstate_i_9_n_0;
  wire dl_ulpsactivenot_i_2_n_0;
  wire dl_ulpsactivenot_i_3_n_0;
  wire dl_ulpsactivenot_i_4_n_0;
  wire dl_ulpsactivenot_i_5_n_0;
  wire dl_ulpsactivenot_i_7_n_0;
  wire dl_ulpsactivenot_i_8_n_0;
  wire errsyncesc_r_i_2_n_0;
  wire errsyncesc_r_i_3_n_0;
  wire errsyncesc_r_i_4_n_0;
  wire errsyncesc_r_reg_n_0;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_3_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_4_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_i_5_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ;
  wire lp_00_r;
  wire lp_00_r_i_1__0_n_0;
  wire lp_01_r;
  wire lp_01_r_i_1__0_n_0;
  wire lp_10_r;
  wire lp_10_r_i_1__0_n_0;
  wire lp_11_r;
  wire lp_11_r_dly;
  wire lp_11_r_i_2_n_0;
  wire lp_11_r_nxt;
  wire lp_11_r_reg_n_0;
  wire lp_clk_i_3_n_0;
  wire lp_clk_i_7_n_0;
  wire lp_clk_i_9_n_0;
  wire lp_clk_reg_n_0;
  wire [4:0]lp_st_cnt;
  wire \lp_st_cnt[0]_i_2_n_0 ;
  wire \lp_st_cnt[0]_i_3_n_0 ;
  wire \lp_st_cnt_reg_n_0_[0] ;
  wire \lp_st_cnt_reg_n_0_[1] ;
  wire \lp_st_cnt_reg_n_0_[2] ;
  wire \lp_st_cnt_reg_n_0_[3] ;
  wire \lp_st_cnt_reg_n_0_[4] ;
  wire [1:0]lp_st_dup;
  wire [1:0]lp_st_out;
  wire [1:0]\lp_st_out_reg[1]_0 ;
  wire [1:0]lp_state_sync;
  wire lp_state_sync0_i_n_1;
  wire lp_state_sync0_i_n_2;
  wire lp_state_sync0_i_n_3;
  wire lp_state_sync0_i_n_4;
  wire lp_state_sync0_i_n_5;
  wire lp_state_sync0_i_n_6;
  wire lp_state_sync0_i_n_7;
  wire lp_state_sync1_i_n_1;
  wire lp_state_sync1_i_n_10;
  wire lp_state_sync1_i_n_2;
  wire lp_state_sync1_i_n_3;
  wire lp_state_sync1_i_n_4;
  wire lp_state_sync1_i_n_5;
  wire lp_state_sync1_i_n_6;
  wire lp_state_sync1_i_n_7;
  wire lp_state_sync1_i_n_9;
  wire \lpdt_data_r[7]_i_3_n_0 ;
  wire \lpdt_data_r_reg[0]_0 ;
  wire \lpdt_data_r_reg_n_0_[0] ;
  wire \lpdt_data_r_reg_n_0_[1] ;
  wire \lpdt_data_r_reg_n_0_[2] ;
  wire \lpdt_data_r_reg_n_0_[3] ;
  wire \lpdt_data_r_reg_n_0_[4] ;
  wire \lpdt_data_r_reg_n_0_[5] ;
  wire \lpdt_data_r_reg_n_0_[6] ;
  wire \lpdt_data_r_reg_n_0_[7] ;
  wire out;
  wire [7:0]p_0_in;
  wire [7:0]p_1_in;
  wire p_2_in66_in;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire rxactivehs_coreclk_sync_r;
  wire rxwaitesc_r;
  wire rxwaitesc_r_i_1_n_0;
  wire rxwaitesc_r_i_2_n_0;
  wire rxwaitesc_r_i_3_n_0;
  wire rxwaitesc_r_reg_n_0;
  wire sel;
  wire \settle_cnt[6]_i_2_n_0 ;
  wire \settle_cnt[7]_i_1_n_0 ;
  wire \settle_cnt[7]_i_4_n_0 ;
  wire [7:0]settle_cnt_reg;
  wire system_rst;
  wire time_out_settle0_carry__0_i_1_n_0;
  wire time_out_settle0_carry__0_i_2_n_0;
  wire time_out_settle0_carry__0_i_3_n_0;
  wire time_out_settle0_carry__0_i_4_n_0;
  wire time_out_settle0_carry__0_n_0;
  wire time_out_settle0_carry__0_n_1;
  wire time_out_settle0_carry__0_n_2;
  wire time_out_settle0_carry__0_n_3;
  wire time_out_settle0_carry__1_i_1_n_0;
  wire time_out_settle0_carry__1_i_2_n_0;
  wire time_out_settle0_carry__1_i_3_n_0;
  wire time_out_settle0_carry__1_n_1;
  wire time_out_settle0_carry__1_n_2;
  wire time_out_settle0_carry__1_n_3;
  wire time_out_settle0_carry_i_1_n_0;
  wire time_out_settle0_carry_i_2_n_0;
  wire time_out_settle0_carry_i_3_n_0;
  wire time_out_settle0_carry_i_4_n_0;
  wire time_out_settle0_carry_n_0;
  wire time_out_settle0_carry_n_1;
  wire time_out_settle0_carry_n_2;
  wire time_out_settle0_carry_n_3;
  wire time_out_settle_i_1_n_0;
  wire time_out_settle_reg_n_0;
  wire [3:0]NLW_time_out_settle0_carry_O_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__0_O_UNCONNECTED;
  wire [3:3]NLW_time_out_settle0_carry__1_CO_UNCONNECTED;
  wire [3:0]NLW_time_out_settle0_carry__1_O_UNCONNECTED;

  assign dl_status_reg[4] = dl_status_reg_bit_6;
  assign dl_status_reg[3] = \^dl_status_reg [3];
  assign dl_status_reg[2] = dl_status_reg_bit_2;
  assign dl_status_reg[1:0] = \^dl_status_reg [1:0];
  LUT6 #(
    .INIT(64'h11DD000000010000)) 
    \FSM_sequential_dl_rx_state[0]_i_4 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_7_n_0 ),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[0]),
        .I4(dl_status_reg_bit_0_reg_0),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_rx_state[0]_i_7 
       (.I0(lp_10_r),
        .I1(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \FSM_sequential_dl_rx_state[1]_i_8 
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rx_state__0[1]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(\FSM_sequential_dl_rx_state[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hEFEEEEEE10108181)) 
    \FSM_sequential_dl_rx_state[2]_i_4 
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[0]),
        .I3(lp_00_r),
        .I4(dl_rx_state__0[1]),
        .I5(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hF0A00C0000000000)) 
    \FSM_sequential_dl_rx_state[2]_i_5 
       (.I0(lp_10_r),
        .I1(\FSM_sequential_dl_rx_state[2]_i_8_n_0 ),
        .I2(dl_rx_state__0[0]),
        .I3(lp_01_r),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_sequential_dl_rx_state[2]_i_7 
       (.I0(lp_01_r),
        .I1(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[2]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_rx_state[2]_i_8 
       (.I0(dl_rx_state__0[1]),
        .I1(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000001)) 
    \FSM_sequential_dl_rx_state[3]_i_2 
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .I3(lp_01_r),
        .I4(dl_rx_state__0[1]),
        .I5(\FSM_sequential_dl_rx_state[3]_i_6_n_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h3380008000800091)) 
    \FSM_sequential_dl_rx_state[3]_i_3 
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[0]),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000088888D88)) 
    \FSM_sequential_dl_rx_state[3]_i_6 
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(dl_rx_state__0[0]),
        .O(\FSM_sequential_dl_rx_state[3]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[3]_i_9 
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(\FSM_sequential_dl_rx_state[3]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h11F1000011110000)) 
    \FSM_sequential_dl_rx_state[4]_i_11 
       (.I0(\settle_cnt[7]_i_1_n_0 ),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_errcontrol_i_9_n_0),
        .I3(dl_rx_state__0[0]),
        .I4(dl_status_reg_bit_0_reg_0),
        .I5(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[4]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_dl_rx_state[4]_i_13 
       (.I0(lp_11_r_reg_n_0),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000F80088)) 
    \FSM_sequential_dl_rx_state[4]_i_15 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_17_n_0 ),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_10_r),
        .I5(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_15_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \FSM_sequential_dl_rx_state[4]_i_16 
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_16_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    \FSM_sequential_dl_rx_state[4]_i_17 
       (.I0(lp_01_r),
        .I1(lp_00_r),
        .I2(dl_rx_state__0[0]),
        .O(\FSM_sequential_dl_rx_state[4]_i_17_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_dl_rx_state[4]_i_18 
       (.I0(lp_11_r_reg_n_0),
        .I1(dl_rx_state__0[4]),
        .O(\FSM_sequential_dl_rx_state[4]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \FSM_sequential_dl_rx_state[4]_i_19 
       (.I0(dl_errcontrol_i_14_n_0),
        .I1(dl_rx_state__0[0]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(\lpdt_data_r_reg[0]_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0203000012120000)) 
    \FSM_sequential_dl_rx_state[4]_i_4 
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[0]),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_rx_state__0[1]),
        .O(\FSM_sequential_dl_rx_state[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0CFF04040C0C0404)) 
    \FSM_sequential_dl_rx_state[4]_i_5 
       (.I0(dl_errcontrol_i_17_n_0),
        .I1(dl_rx_state__0[4]),
        .I2(dl_ulpsactivenot_i_3_n_0),
        .I3(dl_errcontrol_i_8_n_0),
        .I4(lp_10_r),
        .I5(dl_rx_state__0[2]),
        .O(\FSM_sequential_dl_rx_state[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h2222FFFF22222F22)) 
    \FSM_sequential_dl_rx_state[4]_i_6 
       (.I0(dl_rxulpsesc_reg_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_16_n_0 ),
        .I2(dl_errcontrol_i_14_n_0),
        .I3(\FSM_sequential_dl_rx_state[4]_i_17_n_0 ),
        .I4(dl_errcontrol_i_12_n_0),
        .I5(\FSM_sequential_dl_rx_state[4]_i_18_n_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h2030200020002000)) 
    \FSM_sequential_dl_rx_state[4]_i_7 
       (.I0(lp_01_r),
        .I1(dl_errcontrol_i_8_n_0),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .I4(time_out_settle_reg_n_0),
        .I5(dl_status_reg_bit_4_reg_0),
        .O(\FSM_sequential_dl_rx_state[4]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000F4)) 
    \FSM_sequential_dl_rx_state[4]_i_8 
       (.I0(dl_rx_state__0[0]),
        .I1(lp_01_r),
        .I2(lp_10_r),
        .I3(dl_ulpsactivenot_i_2_n_0),
        .I4(dl_rx_state__0[3]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_19_n_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_8_n_0 ));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[0] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(dl_enable_sync_i_n_5),
        .PRE(core_rst),
        .Q(dl_rx_state__0[0]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_rx_state_reg[1] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_4),
        .Q(dl_rx_state__0[1]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[2] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(lp_state_sync0_i_n_1),
        .PRE(core_rst),
        .Q(dl_rx_state__0[2]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDPE #(
    .INIT(1'b1)) 
    \FSM_sequential_dl_rx_state_reg[3] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .D(dl_enable_sync_i_n_3),
        .PRE(core_rst),
        .Q(dl_rx_state__0[3]));
  (* FSM_ENCODED_STATES = "DL_RX_ESC_ABORT:00000,DL_RX_ESC_SPACE:00010,DL_RX_ESC_MARK0:00101,DL_RX_ERR_CTRL2:00110,DL_RX_ERR_CTRL1:01010,DL_RX_HS_RQST:00111,DL_RX_STOP:00001,DL_RX_ERR_CTRL0:01001,DL_RX_ULPSESC_MARK1:01110,DL_RX_INIT_DONE:01100,DL_RX_BEGIN:01101,DL_RX_ESC_MARK1:00100,DL_RX_ESC_GO:01111,DL_RX_LP_RQST:01000,DL_RX_HS_ABORT:10001,DL_RX_ESC_RQST:10010,DL_RX_LP_YIELD:10000,DL_RX_HS_RUN:10011,DL_RX_HS_SYNC:01011,DL_RX_ULPSESC:00011" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_dl_rx_state_reg[4] 
       (.C(core_clk),
        .CE(lp_state_sync1_i_n_2),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_2),
        .Q(dl_rx_state__0[4]));
  LUT5 #(
    .INIT(32'hF0FFFB00)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_1 
       (.I0(dl_state[1]),
        .I1(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2_n_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_3_n_0 ),
        .I3(\gen_hs_high_rates_spec_v1_1.stopstate_i_5_n_0 ),
        .I4(dl_state[0]),
        .O(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1] ));
  LUT3 #(
    .INIT(8'hAE)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2 
       (.I0(dl_en_hs_lpn_i),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I2(rxactivehs_coreclk_sync_r),
        .O(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hCFE0)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[1]_i_1 
       (.I0(dl_en_hs_lpn_i),
        .I1(\FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state_reg[1]_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_5_n_0 ),
        .I3(dl_state[1]),
        .O(dl_en_hs_lpn_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    \bit_cnt[2]_i_2 
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_00_r),
        .O(\bit_cnt[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \bit_cnt[3]_i_2 
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rx_state__0[1]),
        .I5(rxwaitesc_r_reg_n_0),
        .O(bit_cnt));
  FDRE \bit_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_1),
        .Q(\bit_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_49),
        .Q(\bit_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_50),
        .Q(\bit_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \bit_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_51),
        .Q(p_2_in66_in),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h0026)) 
    \byte_cnt[0]_i_1 
       (.I0(byte_cnt[0]),
        .I1(\byte_cnt[1]_i_2_n_0 ),
        .I2(byte_cnt[1]),
        .I3(dl_enable_sync_i_n_17),
        .O(\byte_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h006A)) 
    \byte_cnt[1]_i_1 
       (.I0(byte_cnt[1]),
        .I1(\byte_cnt[1]_i_2_n_0 ),
        .I2(byte_cnt[0]),
        .I3(dl_enable_sync_i_n_17),
        .O(\byte_cnt[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFF80008000)) 
    \byte_cnt[1]_i_2 
       (.I0(\bit_cnt_reg_n_0_[1] ),
        .I1(\bit_cnt_reg_n_0_[0] ),
        .I2(\bit_cnt_reg_n_0_[2] ),
        .I3(\bit_cnt[2]_i_2_n_0 ),
        .I4(byte_cnt[0]),
        .I5(byte_cnt[1]),
        .O(\byte_cnt[1]_i_2_n_0 ));
  FDRE \byte_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\byte_cnt[0]_i_1_n_0 ),
        .Q(byte_cnt[0]),
        .R(1'b0));
  FDRE \byte_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\byte_cnt[1]_i_1_n_0 ),
        .Q(byte_cnt[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    dl_en_hs_lpn_i_2
       (.I0(dl_rx_state__0[3]),
        .I1(lp_11_r_reg_n_0),
        .I2(time_out_settle_reg_n_0),
        .I3(dl_status_reg_bit_4_reg_0),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(dl_en_hs_lpn1_out));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h08)) 
    dl_en_hs_lpn_i_4
       (.I0(dl_status_reg_bit_4_reg_0),
        .I1(time_out_settle_reg_n_0),
        .I2(\settle_cnt[7]_i_1_n_0 ),
        .O(dl_en_hs_lpn_i_4_n_0));
  FDCE dl_en_hs_lpn_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_48),
        .Q(dl_en_hs_lpn_i));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_14 dl_enable_sync_i
       (.D({dl_enable_sync_i_n_2,dl_enable_sync_i_n_3,dl_enable_sync_i_n_4,dl_enable_sync_i_n_5}),
        .E(dl_enable_sync_i_n_21),
        .\FSM_sequential_dl_rx_state_reg[0] (dl_enable_sync_i_n_17),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (lp_state_sync0_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (\FSM_sequential_dl_rx_state[0]_i_4_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (lp_state_sync1_i_n_4),
        .\FSM_sequential_dl_rx_state_reg[1] (lp_state_sync1_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (dl_errcontrol_i_9_n_0),
        .\FSM_sequential_dl_rx_state_reg[1]_1 (lp_state_sync1_i_n_9),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_enable_sync_i_n_28),
        .\FSM_sequential_dl_rx_state_reg[3] (\FSM_sequential_dl_rx_state[3]_i_2_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3]_0 (\FSM_sequential_dl_rx_state[3]_i_3_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[3]_1 (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[4] (dl_enable_sync_i_n_19),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (\FSM_sequential_dl_rx_state[4]_i_11_n_0 ),
        .Q(dl_rx_state__0),
        .bit_cnt(bit_cnt),
        .\bit_cnt_reg[0] (dl_enable_sync_i_n_1),
        .\bit_cnt_reg[0]_0 (\bit_cnt_reg_n_0_[0] ),
        .\bit_cnt_reg[0]_1 (rxwaitesc_r_reg_n_0),
        .\bit_cnt_reg[0]_2 (\lpdt_data_r[7]_i_3_n_0 ),
        .\bit_cnt_reg[1] (dl_enable_sync_i_n_49),
        .\bit_cnt_reg[1]_0 (\bit_cnt[2]_i_2_n_0 ),
        .\bit_cnt_reg[1]_1 (\bit_cnt_reg_n_0_[1] ),
        .\bit_cnt_reg[2] (dl_enable_sync_i_n_50),
        .\bit_cnt_reg[2]_0 (\bit_cnt_reg_n_0_[2] ),
        .\bit_cnt_reg[3] (dl_enable_sync_i_n_51),
        .byte_cnt(byte_cnt),
        .\byte_cnt_reg[0] (dl_rxulpsesc_reg_0),
        .\byte_cnt_reg[1] (dl_enable_sync_i_n_37),
        .\byte_cnt_reg[1]_0 (dl_enable_sync_i_n_38),
        .cl_rxclkactivehs_reg(dl_enable_sync_i_n_43),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_en_hs_lpn1_out(dl_en_hs_lpn1_out),
        .dl_en_hs_lpn_reg(dl_enable_sync_i_n_48),
        .dl_en_hs_lpn_reg_0(dl_en_hs_lpn_i_4_n_0),
        .dl_en_hs_lpn_reg_1(dl_status_reg_bit_0_i_2_n_0),
        .dl_en_hs_lpn_reg_2(dl_en_hs_lpn_i),
        .dl_errcontrol_i_2_0(dl_errcontrol_i_18_n_0),
        .dl_errcontrol_reg(dl_enable_sync_i_n_46),
        .dl_errcontrol_reg_0(dl_errcontrol_i_8_n_0),
        .dl_errcontrol_reg_1(lp_state_sync0_i_n_3),
        .dl_errcontrol_reg_2(dl_errcontrol_i_4_n_0),
        .dl_errcontrol_reg_3(lp_state_sync1_i_n_1),
        .dl_errcontrol_reg_4(dl_errcontrol_i_6_n_0),
        .dl_erresc_reg(dl_enable_sync_i_n_22),
        .dl_erresc_reg_0(dl_erresc_i_2_n_0),
        .dl_erresc_reg_1(dl_erresc_i_3_n_0),
        .dl_erresc_reg_2(dl_erresc_i_4_n_0),
        .dl_erresc_reg_3(dl_erresc_i_5_n_0),
        .dl_forcerxmode_ris_edge(dl_forcerxmode_ris_edge),
        .\dl_rxtriggeresc_reg[0] (\dl_rxtriggeresc[3]_i_3_n_0 ),
        .\dl_rxtriggeresc_reg[1] (\dl_rxtriggeresc[1]_i_3_n_0 ),
        .\dl_rxtriggeresc_reg[1]_0 (\dl_rxtriggeresc[1]_i_2_n_0 ),
        .\dl_rxtriggeresc_reg[2] (dl_rxlpdtesc_i_4_n_0),
        .\dl_rxtriggeresc_reg[2]_0 (\dl_rxtriggeresc[2]_i_2_n_0 ),
        .\dl_rxtriggeresc_reg[3] ({\lpdt_data_r_reg_n_0_[7] ,\lpdt_data_r_reg_n_0_[6] ,\lpdt_data_r_reg_n_0_[5] ,\lpdt_data_r_reg_n_0_[4] ,\lpdt_data_r_reg_n_0_[3] ,\lpdt_data_r_reg_n_0_[2] ,\lpdt_data_r_reg_n_0_[1] ,\lpdt_data_r_reg_n_0_[0] }),
        .dl_rxvalidesc_reg(dl_rxlpdtesc_reg_0),
        .dl_status_reg({dl_status_reg_bit_6,\^dl_status_reg [3],\^dl_status_reg [1]}),
        .dl_status_reg_bit_1_i_2_0(dl_errcontrol_i_14_n_0),
        .dl_status_reg_bit_1_i_2_1(dl_stopstate_i_15_n_0),
        .dl_status_reg_bit_1_reg(dl_enable_sync_i_n_41),
        .dl_status_reg_bit_1_reg_0(dl_ulpsactivenot_i_8_n_0),
        .dl_status_reg_bit_1_reg_1(dl_status_reg_bit_1_i_3_n_0),
        .dl_status_reg_bit_1_reg_2(dl_status_reg_bit_1_i_5_n_0),
        .dl_status_reg_bit_1_reg_3(dl_status_reg_bit_1_i_6_n_0),
        .dl_status_reg_bit_1_reg_4(dl_status_reg_bit_1_i_11_n_0),
        .dl_status_reg_bit_4_reg(dl_status_reg_bit_0_reg_0),
        .dl_status_reg_bit_4_reg_0(dl_status_reg_bit_4_i_2_n_0),
        .dl_status_reg_bit_4_reg_1(dl_status_reg_bit_4_reg_0),
        .dl_status_reg_bit_626_out(dl_status_reg_bit_626_out),
        .dl_status_reg_bit_6_i_5(dl_status_reg_bit_6_i_12_n_0),
        .dl_status_reg_bit_6_i_5_0(\FSM_sequential_dl_rx_state[4]_i_13_n_0 ),
        .dl_status_reg_bit_6_i_5_1(dl_status_reg_bit_6_i_13_n_0),
        .dl_status_reg_bit_6_reg(lp_state_sync1_i_n_6),
        .dl_status_reg_bit_6_reg_0(lp_state_sync1_i_n_3),
        .dl_status_reg_bit_6_reg_1(dl_status_reg_bit_6_i_6_n_0),
        .dl_status_reg_bit_6_reg_2(dl_errcontrol_i_12_n_0),
        .dl_status_reg_bit_6_reg_3(dl_status_reg_bit_6_i_7_n_0),
        .dl_stopstate(dl_stopstate),
        .dl_stopstate_reg(dl_enable_sync_i_n_23),
        .dl_stopstate_reg_0(lp_11_r_reg_n_0),
        .dl_stopstate_reg_1(lp_state_sync0_i_n_4),
        .dl_stopstate_reg_2(dl_stopstate_i_7_n_0),
        .dl_stopstate_reg_3(dl_stopstate_i_8_n_0),
        .dl_stopstate_reg_4(dl_stopstate_i_9_n_0),
        .dl_stopstate_reg_5(dl_stopstate_i_10_n_0),
        .dl_stopstate_reg_6(dl_stopstate_i_11_n_0),
        .dl_stopstate_reg_7(dl_stopstate_i_3_n_0),
        .dl_stopstate_reg_8(lp_state_sync0_i_n_5),
        .dl_ulpsactivenot_reg(dl_enable_sync_i_n_44),
        .dl_ulpsactivenot_reg_0(dl_ulpsactivenot_i_3_n_0),
        .dl_ulpsactivenot_reg_1(dl_ulpsactivenot_i_2_n_0),
        .dl_ulpsactivenot_reg_2(dl_ulpsactivenot_i_4_n_0),
        .dl_ulpsactivenot_reg_3(dl_ulpsactivenot_i_5_n_0),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg (dl_enable_sync_i_n_42),
        .errsyncesc_r_reg(dl_enable_sync_i_n_47),
        .errsyncesc_r_reg_0(errsyncesc_r_i_2_n_0),
        .errsyncesc_r_reg_1(errsyncesc_r_reg_n_0),
        .errsyncesc_r_reg_2(errsyncesc_r_i_3_n_0),
        .errsyncesc_r_reg_3(errsyncesc_r_i_4_n_0),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(dl_enable_sync_i_n_20),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_reg(dl_enable_sync_i_n_40),
        .lp_clk_reg(dl_enable_sync_i_n_39),
        .lp_clk_reg_0(dl_enable_sync_i_n_45),
        .lp_clk_reg_1(lp_clk_i_3_n_0),
        .lp_clk_reg_2(lp_clk_i_7_n_0),
        .lp_clk_reg_3(lp_clk_reg_n_0),
        .lp_clk_reg_4(lp_state_sync1_i_n_5),
        .\lpdt_data_r_reg[0] ({dl_enable_sync_i_n_29,dl_enable_sync_i_n_30,dl_enable_sync_i_n_31,dl_enable_sync_i_n_32,dl_enable_sync_i_n_33,dl_enable_sync_i_n_34,dl_enable_sync_i_n_35,dl_enable_sync_i_n_36}),
        .\lpdt_data_r_reg[0]_0 (\lpdt_data_r_reg[0]_0 ),
        .\lpdt_data_r_reg[7] ({dl_enable_sync_i_n_24,dl_enable_sync_i_n_25,dl_enable_sync_i_n_26,dl_enable_sync_i_n_27}),
        .out(out),
        .p_1_in(p_1_in),
        .p_2_in66_in(p_2_in66_in),
        .rxwaitesc_r(rxwaitesc_r),
        .s_level_out_d2_reg_0(dl_enable_sync_i_n_6),
        .s_level_out_d2_reg_1(dl_enable_sync_i_n_7),
        .system_rst(system_rst));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h2)) 
    dl_errcontrol_i_10
       (.I0(lp_01_r),
        .I1(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_10_n_0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_errcontrol_i_12
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_errcontrol_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h1000)) 
    dl_errcontrol_i_13
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[0]),
        .I3(\lpdt_data_r_reg[0]_0 ),
        .O(dl_errcontrol_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'hE)) 
    dl_errcontrol_i_14
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .O(dl_errcontrol_i_14_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    dl_errcontrol_i_16
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(errsyncesc_r_i_2_n_0),
        .I5(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_16_n_0));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h47)) 
    dl_errcontrol_i_17
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[1]),
        .I2(lp_01_r),
        .O(dl_errcontrol_i_17_n_0));
  LUT6 #(
    .INIT(64'h000000A800000000)) 
    dl_errcontrol_i_18
       (.I0(dl_rx_state__0[3]),
        .I1(lp_01_r),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(dl_errcontrol_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000100000001010)) 
    dl_errcontrol_i_4
       (.I0(dl_rx_state__0[0]),
        .I1(dl_errcontrol_i_12_n_0),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(lp_00_r),
        .O(dl_errcontrol_i_4_n_0));
  LUT6 #(
    .INIT(64'hBAAABAAABAAAAAAA)) 
    dl_errcontrol_i_6
       (.I0(dl_errcontrol_i_16_n_0),
        .I1(dl_ulpsactivenot_i_3_n_0),
        .I2(dl_rx_state__0[4]),
        .I3(dl_errcontrol_i_17_n_0),
        .I4(lp_11_r_reg_n_0),
        .I5(lp_10_r),
        .O(dl_errcontrol_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    dl_errcontrol_i_8
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[0]),
        .O(dl_errcontrol_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    dl_errcontrol_i_9
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .O(dl_errcontrol_i_9_n_0));
  FDCE dl_errcontrol_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_46),
        .Q(dl0_errcontrol));
  LUT6 #(
    .INIT(64'hAAFEAAAFAAAEAAAE)) 
    dl_erresc_i_2
       (.I0(dl_erresc_i_6_n_0),
        .I1(dl_erresc_i_7_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(dl_rxlpdtesc_i_5_n_0),
        .I4(\lpdt_data_r_reg_n_0_[1] ),
        .I5(\dl_rxtriggeresc[1]_i_2_n_0 ),
        .O(dl_erresc_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000DF0000000000)) 
    dl_erresc_i_3
       (.I0(\lpdt_data_r_reg_n_0_[3] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .I2(\lpdt_data_r_reg_n_0_[4] ),
        .I3(\lpdt_data_r_reg_n_0_[2] ),
        .I4(byte_cnt[1]),
        .I5(byte_cnt[0]),
        .O(dl_erresc_i_3_n_0));
  LUT6 #(
    .INIT(64'h2222002231113031)) 
    dl_erresc_i_4
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(dl_rxlpdtesc_i_5_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[7] ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(dl_erresc_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT3 #(
    .INIT(8'h01)) 
    dl_erresc_i_5
       (.I0(rxwaitesc_r_reg_n_0),
        .I1(dl_rxlpdtesc_reg_0),
        .I2(dl_rxulpsesc_reg_0),
        .O(dl_erresc_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000100000000000)) 
    dl_erresc_i_6
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(\lpdt_data_r_reg_n_0_[6] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\lpdt_data_r_reg_n_0_[2] ),
        .I4(byte_cnt[1]),
        .I5(byte_cnt[0]),
        .O(dl_erresc_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'hFFFF8E8A)) 
    dl_erresc_i_7
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(\lpdt_data_r_reg_n_0_[7] ),
        .I2(\lpdt_data_r_reg_n_0_[6] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(dl_rxlpdtesc_i_4_n_0),
        .O(dl_erresc_i_7_n_0));
  FDRE dl_erresc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_22),
        .Q(dl0_erresc),
        .R(1'b0));
  FDCE dl_errsyncesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(errsyncesc_r_reg_n_0),
        .Q(dl0_errsyncesc));
  FDRE dl_forcerxmode_ris_edge_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_ris_edge0),
        .Q(dl_forcerxmode_ris_edge),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_15 dl_forcerxmode_sync_i
       (.Q(lp_st_out),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl_forcerxmode_out(dl_forcerxmode_out),
        .dl_forcerxmode_ris_edge0(dl_forcerxmode_ris_edge0),
        .dl_forcerxmode_sync_r(dl_forcerxmode_sync_r),
        .dl_forcerxmode_t0(dl_forcerxmode_t0),
        .\dl_lp_st_t_reg[1] (Q),
        .\lp_st_out_reg[1] (\lp_st_out_reg[1]_0 ),
        .out(dl_forcerxmode_out_i));
  FDRE dl_forcerxmode_sync_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_forcerxmode_out_i),
        .Q(dl_forcerxmode_sync_r),
        .R(1'b0));
  FDCE \dl_rxdataesc_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_36),
        .Q(dl0_rxdataesc[0]));
  FDCE \dl_rxdataesc_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_35),
        .Q(dl0_rxdataesc[1]));
  FDCE \dl_rxdataesc_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_34),
        .Q(dl0_rxdataesc[2]));
  FDCE \dl_rxdataesc_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_33),
        .Q(dl0_rxdataesc[3]));
  FDCE \dl_rxdataesc_reg[4] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_32),
        .Q(dl0_rxdataesc[4]));
  FDCE \dl_rxdataesc_reg[5] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_31),
        .Q(dl0_rxdataesc[5]));
  FDCE \dl_rxdataesc_reg[6] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_30),
        .Q(dl0_rxdataesc[6]));
  FDCE \dl_rxdataesc_reg[7] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_38),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_29),
        .Q(dl0_rxdataesc[7]));
  FDCE dl_rxescclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_39),
        .Q(dl0_rxclkesc));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'hFFFF0010)) 
    dl_rxlpdtesc_i_2
       (.I0(rxwaitesc_r_reg_n_0),
        .I1(dl_rxulpsesc_reg_0),
        .I2(dl_rxlpdtesc_i_3_n_0),
        .I3(dl_rxlpdtesc_i_4_n_0),
        .I4(dl_rxlpdtesc_reg_0),
        .O(dl_rxlpdtesc_i_2_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    dl_rxlpdtesc_i_3
       (.I0(dl_rxlpdtesc_i_5_n_0),
        .I1(\lpdt_data_r_reg_n_0_[1] ),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[7] ),
        .O(dl_rxlpdtesc_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    dl_rxlpdtesc_i_4
       (.I0(\lpdt_data_r_reg_n_0_[5] ),
        .I1(\lpdt_data_r_reg_n_0_[4] ),
        .I2(\lpdt_data_r_reg_n_0_[3] ),
        .O(dl_rxlpdtesc_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_rxlpdtesc_i_5
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .O(dl_rxlpdtesc_i_5_n_0));
  FDRE dl_rxlpdtesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_rxlpdtesc_i_2_n_0),
        .Q(dl_rxlpdtesc_reg_0),
        .R(rxwaitesc_r));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \dl_rxtriggeresc[1]_i_2 
       (.I0(\lpdt_data_r_reg_n_0_[6] ),
        .I1(\lpdt_data_r_reg_n_0_[7] ),
        .O(\dl_rxtriggeresc[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    \dl_rxtriggeresc[1]_i_3 
       (.I0(\lpdt_data_r_reg_n_0_[4] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .I2(\lpdt_data_r_reg_n_0_[3] ),
        .O(\dl_rxtriggeresc[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \dl_rxtriggeresc[2]_i_2 
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(\lpdt_data_r_reg_n_0_[2] ),
        .O(\dl_rxtriggeresc[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h4040404040000000)) 
    \dl_rxtriggeresc[3]_i_3 
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_erresc_i_5_n_0),
        .I3(\dl_rxtriggeresc[1]_i_2_n_0 ),
        .I4(\dl_rxtriggeresc[3]_i_5_n_0 ),
        .I5(\dl_rxtriggeresc[3]_i_6_n_0 ),
        .O(\dl_rxtriggeresc[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0400000000000020)) 
    \dl_rxtriggeresc[3]_i_5 
       (.I0(\lpdt_data_r_reg_n_0_[5] ),
        .I1(\lpdt_data_r_reg_n_0_[4] ),
        .I2(\lpdt_data_r_reg_n_0_[1] ),
        .I3(\lpdt_data_r_reg_n_0_[0] ),
        .I4(\lpdt_data_r_reg_n_0_[3] ),
        .I5(\lpdt_data_r_reg_n_0_[2] ),
        .O(\dl_rxtriggeresc[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001400)) 
    \dl_rxtriggeresc[3]_i_6 
       (.I0(\dl_rxtriggeresc[3]_i_7_n_0 ),
        .I1(\lpdt_data_r_reg_n_0_[0] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\dl_rxtriggeresc[3]_i_8_n_0 ),
        .I4(\lpdt_data_r_reg_n_0_[6] ),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(\dl_rxtriggeresc[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \dl_rxtriggeresc[3]_i_7 
       (.I0(\lpdt_data_r_reg_n_0_[4] ),
        .I1(\lpdt_data_r_reg_n_0_[5] ),
        .O(\dl_rxtriggeresc[3]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \dl_rxtriggeresc[3]_i_8 
       (.I0(\lpdt_data_r_reg_n_0_[2] ),
        .I1(\lpdt_data_r_reg_n_0_[3] ),
        .O(\dl_rxtriggeresc[3]_i_8_n_0 ));
  FDRE \dl_rxtriggeresc_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_27),
        .Q(dl0_rxtriggeresc[0]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_26),
        .Q(dl0_rxtriggeresc[1]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_25),
        .Q(dl0_rxtriggeresc[2]),
        .R(1'b0));
  FDRE \dl_rxtriggeresc_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_23),
        .D(dl_enable_sync_i_n_24),
        .Q(dl0_rxtriggeresc[3]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFF01)) 
    dl_rxulpsesc_i_1
       (.I0(dl_ulpsactivenot_i_4_n_0),
        .I1(rxwaitesc_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .I3(dl_rxulpsesc_reg_0),
        .O(dl_rxulpsesc_i_1_n_0));
  FDRE dl_rxulpsesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_rxulpsesc_i_1_n_0),
        .Q(dl_rxulpsesc_reg_0),
        .R(rxwaitesc_r));
  FDCE dl_rxvalidesc_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_37),
        .Q(dl0_rxvalidesc));
  LUT6 #(
    .INIT(64'h0000208000000000)) 
    dl_status_reg_bit_0_i_2
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_0_i_2_n_0));
  FDCE dl_status_reg_bit_0_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(lp_state_sync1_i_n_10),
        .Q(\^dl_status_reg [0]));
  LUT6 #(
    .INIT(64'h0012000200000000)) 
    dl_status_reg_bit_1_i_10
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[0]),
        .I5(lp_10_r),
        .O(dl_status_reg_bit_1_i_10_n_0));
  LUT6 #(
    .INIT(64'h00000000C0038000)) 
    dl_status_reg_bit_1_i_11
       (.I0(lp_10_r),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[0]),
        .I4(lp_01_r),
        .I5(dl_ulpsactivenot_i_2_n_0),
        .O(dl_status_reg_bit_1_i_11_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF45004000)) 
    dl_status_reg_bit_1_i_3
       (.I0(dl_ulpsactivenot_i_3_n_0),
        .I1(lp_00_r),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rxulpsesc_reg_0),
        .I5(dl_status_reg_bit_1_i_10_n_0),
        .O(dl_status_reg_bit_1_i_3_n_0));
  LUT6 #(
    .INIT(64'h8080808080B08080)) 
    dl_status_reg_bit_1_i_5
       (.I0(\FSM_sequential_dl_rx_state[4]_i_13_n_0 ),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_errcontrol_i_14_n_0),
        .I4(lp_01_r),
        .I5(dl_rx_state__0[0]),
        .O(dl_status_reg_bit_1_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000010C00000000)) 
    dl_status_reg_bit_1_i_6
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rx_state__0[4]),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_1_i_6_n_0));
  FDCE dl_status_reg_bit_1_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_41),
        .Q(\^dl_status_reg [1]));
  LUT5 #(
    .INIT(32'hFFFF0001)) 
    dl_status_reg_bit_2_i_1
       (.I0(dl_ulpsactivenot_i_4_n_0),
        .I1(rxwaitesc_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_status_reg_bit_2),
        .O(dl_status_reg_bit_2_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE dl_status_reg_bit_2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_status_reg_bit_2_i_1_n_0),
        .Q(dl_status_reg_bit_2),
        .R(rxwaitesc_r));
  LUT2 #(
    .INIT(4'hE)) 
    dl_status_reg_bit_4_i_2
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_status_reg_bit_4_i_2_n_0));
  FDCE dl_status_reg_bit_4_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_43),
        .Q(\^dl_status_reg [3]));
  LUT6 #(
    .INIT(64'h000000FF00000047)) 
    dl_status_reg_bit_6_i_11
       (.I0(lp_00_r),
        .I1(dl_rx_state__0[1]),
        .I2(lp_01_r),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .I5(dl_rx_state__0[0]),
        .O(dl_status_reg_bit_6_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT5 #(
    .INIT(32'hFFFF0001)) 
    dl_status_reg_bit_6_i_12
       (.I0(dl_rx_state__0[2]),
        .I1(lp_10_r),
        .I2(lp_01_r),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_rx_state__0[3]),
        .O(dl_status_reg_bit_6_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h00100000)) 
    dl_status_reg_bit_6_i_13
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[2]),
        .I3(dl_rx_state__0[3]),
        .I4(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_6_i_13_n_0));
  LUT6 #(
    .INIT(64'hFF88008AFF88FF8A)) 
    dl_status_reg_bit_6_i_6
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[0]),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[3]),
        .I4(\FSM_sequential_dl_rx_state[2]_i_7_n_0 ),
        .I5(lp_11_r_reg_n_0),
        .O(dl_status_reg_bit_6_i_6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_status_reg_bit_6_i_7
       (.I0(dl_rx_state__0[0]),
        .I1(lp_00_r),
        .O(dl_status_reg_bit_6_i_7_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDCE dl_status_reg_bit_6_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_status_reg_bit_626_out),
        .Q(dl_status_reg_bit_6));
  LUT6 #(
    .INIT(64'h88CC88CCF8FCF8CC)) 
    dl_stopstate_i_10
       (.I0(dl_rx_state__0[0]),
        .I1(dl_stopstate_i_14_n_0),
        .I2(dl_ulpsactivenot_i_8_n_0),
        .I3(lp_00_r),
        .I4(lp_10_r),
        .I5(dl_errcontrol_i_14_n_0),
        .O(dl_stopstate_i_10_n_0));
  LUT6 #(
    .INIT(64'hA0A00000A3A00000)) 
    dl_stopstate_i_11
       (.I0(dl_status_reg_bit_6_i_11_n_0),
        .I1(dl_stopstate_i_15_n_0),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .I4(lp_11_r_reg_n_0),
        .I5(dl_status_reg_bit_6_i_7_n_0),
        .O(dl_stopstate_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    dl_stopstate_i_12
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .O(dl_stopstate_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    dl_stopstate_i_14
       (.I0(dl_rx_state__0[4]),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .O(dl_stopstate_i_14_n_0));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    dl_stopstate_i_15
       (.I0(lp_10_r),
        .I1(lp_01_r),
        .I2(dl_rxulpsesc_reg_0),
        .O(dl_stopstate_i_15_n_0));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT5 #(
    .INIT(32'h103010E0)) 
    dl_stopstate_i_3
       (.I0(dl_rx_state__0[1]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_status_reg_bit_0_reg_0),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .O(dl_stopstate_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    dl_stopstate_i_7
       (.I0(\FSM_sequential_dl_rx_state[3]_i_9_n_0 ),
        .I1(\FSM_sequential_dl_rx_state[4]_i_18_n_0 ),
        .I2(lp_00_r),
        .I3(dl_rx_state__0[0]),
        .I4(lp_10_r),
        .I5(lp_01_r),
        .O(dl_stopstate_i_7_n_0));
  LUT6 #(
    .INIT(64'h1FFF0E0000000000)) 
    dl_stopstate_i_8
       (.I0(lp_01_r),
        .I1(lp_10_r),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[3]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_13_n_0 ),
        .O(dl_stopstate_i_8_n_0));
  LUT6 #(
    .INIT(64'h2020202020203020)) 
    dl_stopstate_i_9
       (.I0(\lpdt_data_r[7]_i_3_n_0 ),
        .I1(errsyncesc_r_i_2_n_0),
        .I2(lp_11_r_reg_n_0),
        .I3(dl_rx_state__0[1]),
        .I4(dl_rxulpsesc_reg_0),
        .I5(dl_ulpsactivenot_i_3_n_0),
        .O(dl_stopstate_i_9_n_0));
  FDCE dl_stopstate_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_40),
        .Q(dl_stopstate));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'hB)) 
    dl_ulpsactivenot_i_2
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .O(dl_ulpsactivenot_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    dl_ulpsactivenot_i_3
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[0]),
        .O(dl_ulpsactivenot_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    dl_ulpsactivenot_i_4
       (.I0(\lpdt_data_r_reg_n_0_[0] ),
        .I1(\lpdt_data_r_reg_n_0_[6] ),
        .I2(\lpdt_data_r_reg_n_0_[7] ),
        .I3(\dl_rxtriggeresc[1]_i_3_n_0 ),
        .I4(dl_ulpsactivenot_i_7_n_0),
        .I5(\lpdt_data_r_reg_n_0_[1] ),
        .O(dl_ulpsactivenot_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT5 #(
    .INIT(32'h0080FFFF)) 
    dl_ulpsactivenot_i_5
       (.I0(dl_ulpsactivenot_i_8_n_0),
        .I1(lp_10_r),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[4]),
        .I4(dl_rxulpsesc_reg_0),
        .O(dl_ulpsactivenot_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    dl_ulpsactivenot_i_7
       (.I0(byte_cnt[0]),
        .I1(byte_cnt[1]),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .O(dl_ulpsactivenot_i_7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT3 #(
    .INIT(8'h02)) 
    dl_ulpsactivenot_i_8
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[2]),
        .O(dl_ulpsactivenot_i_8_n_0));
  FDPE dl_ulpsactivenot_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl_enable_sync_i_n_44),
        .PRE(core_rst),
        .Q(dl0_ulpsactivenot));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(SETTLE_TIMEOUT[0]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(SETTLE_TIMEOUT[1]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[2]),
        .Q(SETTLE_TIMEOUT[2]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[3]),
        .Q(SETTLE_TIMEOUT[3]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[4]),
        .Q(SETTLE_TIMEOUT[4]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[5]),
        .Q(SETTLE_TIMEOUT[5]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[6]),
        .Q(SETTLE_TIMEOUT[6]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[7]),
        .Q(SETTLE_TIMEOUT[7]),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \en_regs_rx_dl_sm.SETTLE_TIMEOUT_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(D[8]),
        .Q(SETTLE_TIMEOUT[8]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    errsyncesc_r_i_2
       (.I0(lp_10_r),
        .I1(lp_01_r),
        .I2(lp_00_r),
        .O(errsyncesc_r_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT5 #(
    .INIT(32'h01000104)) 
    errsyncesc_r_i_3
       (.I0(dl_rx_state__0[4]),
        .I1(dl_rx_state__0[1]),
        .I2(dl_rx_state__0[3]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_rx_state__0[0]),
        .O(errsyncesc_r_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT3 #(
    .INIT(8'h40)) 
    errsyncesc_r_i_4
       (.I0(p_2_in66_in),
        .I1(lp_11_r_reg_n_0),
        .I2(dl_rxlpdtesc_reg_0),
        .O(errsyncesc_r_i_4_n_0));
  FDCE errsyncesc_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_47),
        .Q(errsyncesc_r_reg_n_0));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_2 
       (.I0(\gen_hs_high_rates_spec_v1_1.stopstate_i_3_n_0 ),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_i_4_n_0 ),
        .I2(\gen_hs_high_rates_spec_v1_1.stopstate_i_5_n_0 ),
        .I3(dl0_stopstate),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_reg ));
  LUT6 #(
    .INIT(64'h0010001010100010)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_3 
       (.I0(dl_en_hs_lpn_i),
        .I1(dl_state[1]),
        .I2(dl_state[0]),
        .I3(\gen_hs_high_rates_spec_v1_1.stopstate_reg_1 ),
        .I4(dl_stopstate),
        .I5(\gen_hs_high_rates_spec_v1_1.stopstate_reg_2 ),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000030513000)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_4 
       (.I0(dl_en_hs_lpn_i),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I2(rxactivehs_coreclk_sync_r),
        .I3(dl_state[1]),
        .I4(dl_stopstate),
        .I5(dl_state[0]),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E5F5E0F0F0F0E)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_5 
       (.I0(dl_state[0]),
        .I1(dl_stopstate),
        .I2(dl_state[1]),
        .I3(dl_en_hs_lpn_i),
        .I4(\gen_hs_high_rates_spec_v1_1.stopstate_reg_0 ),
        .I5(rxactivehs_coreclk_sync_r),
        .O(\gen_hs_high_rates_spec_v1_1.stopstate_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(SETTLE_TIMEOUT[22]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h1)) 
    lp_00_r_i_1__0
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_00_r_i_1__0_n_0));
  FDRE lp_00_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_00_r_i_1__0_n_0),
        .Q(lp_00_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_01_r_i_1__0
       (.I0(lp_st_dup[0]),
        .I1(lp_st_dup[1]),
        .O(lp_01_r_i_1__0_n_0));
  FDRE lp_01_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_01_r_i_1__0_n_0),
        .Q(lp_01_r),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h2)) 
    lp_10_r_i_1__0
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_10_r_i_1__0_n_0));
  FDRE lp_10_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_10_r_i_1__0_n_0),
        .Q(lp_10_r),
        .R(lp_11_r));
  FDRE lp_11_r_dly_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_nxt),
        .Q(lp_11_r_dly),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFD)) 
    lp_11_r_i_1
       (.I0(\lp_st_cnt_reg_n_0_[1] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[3] ),
        .I3(\lp_st_cnt_reg_n_0_[2] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    lp_11_r_i_2
       (.I0(lp_st_dup[1]),
        .I1(lp_st_dup[0]),
        .O(lp_11_r_i_2_n_0));
  FDRE lp_11_r_nxt_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_reg_n_0),
        .Q(lp_11_r_nxt),
        .R(1'b0));
  FDRE lp_11_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_11_r_i_2_n_0),
        .Q(lp_11_r_reg_n_0),
        .R(lp_11_r));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    lp_clk_i_3
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[4]),
        .O(lp_clk_i_3_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    lp_clk_i_7
       (.I0(dl_rx_state__0[2]),
        .I1(dl_rx_state__0[3]),
        .I2(dl_rx_state__0[1]),
        .I3(lp_00_r),
        .I4(dl_rx_state__0[4]),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(lp_clk_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFAAAE)) 
    lp_clk_i_9
       (.I0(dl_status_reg_bit_1_i_5_n_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_13_n_0 ),
        .I2(dl_rx_state__0[0]),
        .I3(dl_rx_state__0[2]),
        .I4(dl_status_reg_bit_6_i_13_n_0),
        .I5(dl_status_reg_bit_1_i_3_n_0),
        .O(lp_clk_i_9_n_0));
  FDCE lp_clk_reg
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst),
        .D(dl_enable_sync_i_n_45),
        .Q(lp_clk_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FFFD)) 
    \lp_st_cnt[0]_i_2 
       (.I0(\lp_st_cnt_reg_n_0_[1] ),
        .I1(\lp_st_cnt_reg_n_0_[4] ),
        .I2(\lp_st_cnt_reg_n_0_[3] ),
        .I3(\lp_st_cnt_reg_n_0_[2] ),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT5 #(
    .INIT(32'h0001FFFF)) 
    \lp_st_cnt[0]_i_3 
       (.I0(lp_11_r_reg_n_0),
        .I1(lp_10_r),
        .I2(lp_01_r),
        .I3(lp_00_r),
        .I4(\lp_st_cnt_reg_n_0_[0] ),
        .O(\lp_st_cnt[0]_i_3_n_0 ));
  FDRE \lp_st_cnt_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[0]),
        .Q(\lp_st_cnt_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[1]),
        .Q(\lp_st_cnt_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[2]),
        .Q(\lp_st_cnt_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[3]),
        .Q(\lp_st_cnt_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \lp_st_cnt_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_cnt[4]),
        .Q(\lp_st_cnt_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \lp_st_dup_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[0]),
        .Q(lp_st_dup[0]),
        .R(1'b0));
  FDRE \lp_st_dup_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_state_sync[1]),
        .Q(lp_st_dup[1]),
        .R(1'b0));
  FDRE \lp_st_out_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_dup[0]),
        .Q(lp_st_out[0]),
        .R(1'b0));
  FDRE \lp_st_out_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(lp_st_dup[1]),
        .Q(lp_st_out[1]),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_16 lp_state_sync0_i
       (.D(lp_state_sync0_i_n_1),
        .\FSM_sequential_dl_rx_state[2]_i_2_0 (\lpdt_data_r_reg[0]_0 ),
        .\FSM_sequential_dl_rx_state[3]_i_5_0 (\FSM_sequential_dl_rx_state[3]_i_9_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0] (lp_state_sync0_i_n_4),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (lp_state_sync0_i_n_5),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (lp_state_sync0_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (dl_status_reg_bit_0_reg_0),
        .\FSM_sequential_dl_rx_state_reg[2] (dl_enable_sync_i_n_28),
        .\FSM_sequential_dl_rx_state_reg[2]_0 (\FSM_sequential_dl_rx_state[2]_i_4_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_1 (lp_11_r_reg_n_0),
        .\FSM_sequential_dl_rx_state_reg[2]_2 (\FSM_sequential_dl_rx_state[3]_i_2_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_3 (\FSM_sequential_dl_rx_state[2]_i_5_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_4 (\FSM_sequential_dl_rx_state[2]_i_7_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[2]_5 (dl_rxulpsesc_reg_0),
        .\FSM_sequential_dl_rx_state_reg[2]_6 (dl_status_reg_bit_4_i_2_n_0),
        .\FSM_sequential_dl_rx_state_reg[4] (lp_state_sync0_i_n_2),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (lp_state_sync0_i_n_6),
        .Q(dl_rx_state__0),
        .core_clk(core_clk),
        .dl_errcontrol_reg(dl_errcontrol_i_9_n_0),
        .dl_errcontrol_reg_0(dl_errcontrol_i_10_n_0),
        .dl_errcontrol_reg_1(lp_clk_i_3_n_0),
        .dl_stopstate_i_2(dl_stopstate_i_12_n_0),
        .dl_stopstate_reg(errsyncesc_r_i_2_n_0),
        .dl_stopstate_reg_0(lp_state_sync1_i_n_6),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(lp_state_sync0_i_n_3),
        .lp_01_r(lp_01_r),
        .lp_10_r(lp_10_r),
        .lp_11_r_dly(lp_11_r_dly),
        .\lp_st_cnt_reg[1] ({\lp_st_cnt_reg_n_0_[4] ,\lp_st_cnt_reg_n_0_[3] ,\lp_st_cnt_reg_n_0_[2] ,\lp_st_cnt_reg_n_0_[1] ,\lp_st_cnt_reg_n_0_[0] }),
        .\lp_st_cnt_reg[2] (lp_st_cnt[4:1]),
        .\lp_st_cnt_reg[4] (lp_st_dup),
        .\lp_st_cnt_reg[4]_0 (lp_state_sync[1]),
        .out(lp_state_sync[0]),
        .rx_dl0_lp_dn(rx_dl0_lp_dn));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_17 lp_state_sync1_i
       (.D(p_1_in[0]),
        .E(lp_state_sync1_i_n_2),
        .\FSM_sequential_dl_rx_state[0]_i_6_0 (\lpdt_data_r_reg[0]_0 ),
        .\FSM_sequential_dl_rx_state_reg[0] (\FSM_sequential_dl_rx_state[4]_i_4_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_0 (\FSM_sequential_dl_rx_state[4]_i_5_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_1 (\FSM_sequential_dl_rx_state[4]_i_6_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_2 (\FSM_sequential_dl_rx_state[4]_i_7_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_3 (\FSM_sequential_dl_rx_state[4]_i_8_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_4 (dl_ulpsactivenot_i_3_n_0),
        .\FSM_sequential_dl_rx_state_reg[0]_5 (lp_state_sync0_i_n_6),
        .\FSM_sequential_dl_rx_state_reg[0]_6 (\FSM_sequential_dl_rx_state[4]_i_13_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[0]_7 (\FSM_sequential_dl_rx_state[4]_i_15_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[1] (\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .\FSM_sequential_dl_rx_state_reg[1]_0 (\FSM_sequential_dl_rx_state[1]_i_8_n_0 ),
        .\FSM_sequential_dl_rx_state_reg[4] (lp_state_sync1_i_n_7),
        .\FSM_sequential_dl_rx_state_reg[4]_0 (lp_state_sync1_i_n_10),
        .Q(dl_rx_state__0),
        .core_clk(core_clk),
        .dl_errcontrol_reg(dl_errcontrol_i_13_n_0),
        .dl_errcontrol_reg_0(dl_errcontrol_i_14_n_0),
        .dl_errcontrol_reg_1(dl_enable_sync_i_n_6),
        .dl_status_reg({dl_status_reg_bit_6,\^dl_status_reg [0]}),
        .dl_status_reg_bit_0_reg(dl_status_reg_bit_0_reg_0),
        .dl_status_reg_bit_0_reg_0(dl_errcontrol_i_8_n_0),
        .dl_status_reg_bit_0_reg_1(dl_enable_sync_i_n_19),
        .dl_status_reg_bit_0_reg_2(dl_status_reg_bit_0_i_2_n_0),
        .dl_status_reg_bit_6_i_5_0(dl_stopstate_i_3_n_0),
        .dl_status_reg_bit_6_i_5_1(\FSM_sequential_dl_rx_state[0]_i_7_n_0 ),
        .dl_status_reg_bit_6_reg(dl_enable_sync_i_n_20),
        .dl_status_reg_bit_6_reg_0(lp_11_r_reg_n_0),
        .dl_status_reg_bit_6_reg_1(dl_enable_sync_i_n_7),
        .dl_status_reg_bit_6_reg_2(dl_status_reg_bit_6_i_11_n_0),
        .dl_status_reg_bit_6_reg_3(\lpdt_data_r[7]_i_3_n_0 ),
        .lp_00_r(lp_00_r),
        .lp_00_r_reg(lp_state_sync1_i_n_1),
        .lp_00_r_reg_0(lp_state_sync1_i_n_4),
        .lp_00_r_reg_1(lp_state_sync1_i_n_6),
        .lp_10_r(lp_10_r),
        .lp_10_r_reg(lp_state_sync1_i_n_5),
        .lp_10_r_reg_0(lp_state_sync1_i_n_9),
        .lp_11_r_dly(lp_11_r_dly),
        .lp_11_r_reg(lp_state_sync1_i_n_3),
        .lp_clk_reg(lp_clk_i_9_n_0),
        .lp_clk_reg_0(dl_enable_sync_i_n_42),
        .\lp_st_cnt_reg[0] (lp_state_sync[0]),
        .\lp_st_cnt_reg[0]_0 (\lp_st_cnt[0]_i_2_n_0 ),
        .\lp_st_cnt_reg[0]_1 (\lp_st_cnt[0]_i_3_n_0 ),
        .\lp_st_cnt_reg[0]_2 (lp_st_dup),
        .\lp_st_dup_reg[1] (lp_st_cnt[0]),
        .out(lp_state_sync[1]),
        .rx_dl0_lp_dp(rx_dl0_lp_dp));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    \lpdt_data_r[7]_i_3 
       (.I0(dl_rx_state__0[3]),
        .I1(dl_rx_state__0[2]),
        .I2(dl_rx_state__0[4]),
        .I3(dl_rx_state__0[1]),
        .O(\lpdt_data_r[7]_i_3_n_0 ));
  FDCE \lpdt_data_r_reg[0] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[0]),
        .Q(\lpdt_data_r_reg_n_0_[0] ));
  FDCE \lpdt_data_r_reg[1] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[1]),
        .Q(\lpdt_data_r_reg_n_0_[1] ));
  FDCE \lpdt_data_r_reg[2] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[2]),
        .Q(\lpdt_data_r_reg_n_0_[2] ));
  FDCE \lpdt_data_r_reg[3] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[3]),
        .Q(\lpdt_data_r_reg_n_0_[3] ));
  FDCE \lpdt_data_r_reg[4] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[4]),
        .Q(\lpdt_data_r_reg_n_0_[4] ));
  FDCE \lpdt_data_r_reg[5] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[5]),
        .Q(\lpdt_data_r_reg_n_0_[5] ));
  FDCE \lpdt_data_r_reg[6] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[6]),
        .Q(\lpdt_data_r_reg_n_0_[6] ));
  FDCE \lpdt_data_r_reg[7] 
       (.C(core_clk),
        .CE(dl_enable_sync_i_n_21),
        .CLR(core_rst),
        .D(p_1_in[7]),
        .Q(\lpdt_data_r_reg_n_0_[7] ));
  LUT4 #(
    .INIT(16'hFFAE)) 
    rxwaitesc_r_i_1
       (.I0(\dl_rxtriggeresc[3]_i_3_n_0 ),
        .I1(rxwaitesc_r_i_2_n_0),
        .I2(rxwaitesc_r_i_3_n_0),
        .I3(rxwaitesc_r_reg_n_0),
        .O(rxwaitesc_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000028)) 
    rxwaitesc_r_i_2
       (.I0(\lpdt_data_r_reg_n_0_[7] ),
        .I1(\lpdt_data_r_reg_n_0_[0] ),
        .I2(\lpdt_data_r_reg_n_0_[6] ),
        .I3(dl_rxulpsesc_reg_0),
        .I4(dl_rxlpdtesc_reg_0),
        .I5(rxwaitesc_r_reg_n_0),
        .O(rxwaitesc_r_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFDFFFFFFFFFFF)) 
    rxwaitesc_r_i_3
       (.I0(\lpdt_data_r_reg_n_0_[1] ),
        .I1(dl_rxlpdtesc_i_5_n_0),
        .I2(\lpdt_data_r_reg_n_0_[2] ),
        .I3(\lpdt_data_r_reg_n_0_[3] ),
        .I4(\lpdt_data_r_reg_n_0_[5] ),
        .I5(\lpdt_data_r_reg_n_0_[4] ),
        .O(rxwaitesc_r_i_3_n_0));
  FDRE rxwaitesc_r_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(rxwaitesc_r_i_1_n_0),
        .Q(rxwaitesc_r_reg_n_0),
        .R(rxwaitesc_r));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[0]_i_1 
       (.I0(settle_cnt_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \settle_cnt[1]_i_1 
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \settle_cnt[2]_i_1 
       (.I0(settle_cnt_reg[1]),
        .I1(settle_cnt_reg[0]),
        .I2(settle_cnt_reg[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \settle_cnt[3]_i_1 
       (.I0(settle_cnt_reg[2]),
        .I1(settle_cnt_reg[0]),
        .I2(settle_cnt_reg[1]),
        .I3(settle_cnt_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \settle_cnt[4]_i_1 
       (.I0(settle_cnt_reg[3]),
        .I1(settle_cnt_reg[1]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[2]),
        .I4(settle_cnt_reg[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \settle_cnt[5]_i_1 
       (.I0(settle_cnt_reg[4]),
        .I1(settle_cnt_reg[2]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[1]),
        .I4(settle_cnt_reg[3]),
        .I5(settle_cnt_reg[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \settle_cnt[6]_i_1 
       (.I0(settle_cnt_reg[5]),
        .I1(settle_cnt_reg[3]),
        .I2(\settle_cnt[6]_i_2_n_0 ),
        .I3(settle_cnt_reg[2]),
        .I4(settle_cnt_reg[4]),
        .I5(settle_cnt_reg[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \settle_cnt[6]_i_2 
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .O(\settle_cnt[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    \settle_cnt[7]_i_1 
       (.I0(dl_rx_state__0[0]),
        .I1(dl_rx_state__0[4]),
        .I2(dl_rx_state__0[1]),
        .I3(dl_rx_state__0[3]),
        .I4(dl_rx_state__0[2]),
        .O(\settle_cnt[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \settle_cnt[7]_i_2 
       (.I0(time_out_settle0_carry__1_n_1),
        .O(sel));
  LUT3 #(
    .INIT(8'hD2)) 
    \settle_cnt[7]_i_3 
       (.I0(settle_cnt_reg[6]),
        .I1(\settle_cnt[7]_i_4_n_0 ),
        .I2(settle_cnt_reg[7]),
        .O(p_0_in[7]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \settle_cnt[7]_i_4 
       (.I0(settle_cnt_reg[4]),
        .I1(settle_cnt_reg[2]),
        .I2(settle_cnt_reg[0]),
        .I3(settle_cnt_reg[1]),
        .I4(settle_cnt_reg[3]),
        .I5(settle_cnt_reg[5]),
        .O(\settle_cnt[7]_i_4_n_0 ));
  FDRE \settle_cnt_reg[0] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[0]),
        .Q(settle_cnt_reg[0]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[1] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[1]),
        .Q(settle_cnt_reg[1]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[2] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[2]),
        .Q(settle_cnt_reg[2]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[3] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[3]),
        .Q(settle_cnt_reg[3]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[4] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[4]),
        .Q(settle_cnt_reg[4]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[5] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[5]),
        .Q(settle_cnt_reg[5]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[6] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[6]),
        .Q(settle_cnt_reg[6]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  FDRE \settle_cnt_reg[7] 
       (.C(core_clk),
        .CE(sel),
        .D(p_0_in[7]),
        .Q(settle_cnt_reg[7]),
        .R(\settle_cnt[7]_i_1_n_0 ));
  CARRY4 time_out_settle0_carry
       (.CI(1'b0),
        .CO({time_out_settle0_carry_n_0,time_out_settle0_carry_n_1,time_out_settle0_carry_n_2,time_out_settle0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry_O_UNCONNECTED[3:0]),
        .S({time_out_settle0_carry_i_1_n_0,time_out_settle0_carry_i_2_n_0,time_out_settle0_carry_i_3_n_0,time_out_settle0_carry_i_4_n_0}));
  CARRY4 time_out_settle0_carry__0
       (.CI(time_out_settle0_carry_n_0),
        .CO({time_out_settle0_carry__0_n_0,time_out_settle0_carry__0_n_1,time_out_settle0_carry__0_n_2,time_out_settle0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__0_O_UNCONNECTED[3:0]),
        .S({time_out_settle0_carry__0_i_1_n_0,time_out_settle0_carry__0_i_2_n_0,time_out_settle0_carry__0_i_3_n_0,time_out_settle0_carry__0_i_4_n_0}));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_1
       (.I0(SETTLE_TIMEOUT[23]),
        .I1(SETTLE_TIMEOUT[22]),
        .I2(SETTLE_TIMEOUT[21]),
        .O(time_out_settle0_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_2
       (.I0(SETTLE_TIMEOUT[20]),
        .I1(SETTLE_TIMEOUT[19]),
        .I2(SETTLE_TIMEOUT[18]),
        .O(time_out_settle0_carry__0_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_3
       (.I0(SETTLE_TIMEOUT[17]),
        .I1(SETTLE_TIMEOUT[16]),
        .I2(SETTLE_TIMEOUT[15]),
        .O(time_out_settle0_carry__0_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__0_i_4
       (.I0(SETTLE_TIMEOUT[14]),
        .I1(SETTLE_TIMEOUT[13]),
        .I2(SETTLE_TIMEOUT[12]),
        .O(time_out_settle0_carry__0_i_4_n_0));
  CARRY4 time_out_settle0_carry__1
       (.CI(time_out_settle0_carry__0_n_0),
        .CO({NLW_time_out_settle0_carry__1_CO_UNCONNECTED[3],time_out_settle0_carry__1_n_1,time_out_settle0_carry__1_n_2,time_out_settle0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_time_out_settle0_carry__1_O_UNCONNECTED[3:0]),
        .S({1'b0,time_out_settle0_carry__1_i_1_n_0,time_out_settle0_carry__1_i_2_n_0,time_out_settle0_carry__1_i_3_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    time_out_settle0_carry__1_i_1
       (.I0(SETTLE_TIMEOUT[30]),
        .I1(SETTLE_TIMEOUT[31]),
        .O(time_out_settle0_carry__1_i_1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__1_i_2
       (.I0(SETTLE_TIMEOUT[29]),
        .I1(SETTLE_TIMEOUT[28]),
        .I2(SETTLE_TIMEOUT[27]),
        .O(time_out_settle0_carry__1_i_2_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry__1_i_3
       (.I0(SETTLE_TIMEOUT[26]),
        .I1(SETTLE_TIMEOUT[25]),
        .I2(SETTLE_TIMEOUT[24]),
        .O(time_out_settle0_carry__1_i_3_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    time_out_settle0_carry_i_1
       (.I0(SETTLE_TIMEOUT[11]),
        .I1(SETTLE_TIMEOUT[10]),
        .I2(SETTLE_TIMEOUT[9]),
        .O(time_out_settle0_carry_i_1_n_0));
  LUT5 #(
    .INIT(32'h41000041)) 
    time_out_settle0_carry_i_2
       (.I0(SETTLE_TIMEOUT[8]),
        .I1(SETTLE_TIMEOUT[7]),
        .I2(settle_cnt_reg[7]),
        .I3(settle_cnt_reg[6]),
        .I4(SETTLE_TIMEOUT[6]),
        .O(time_out_settle0_carry_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    time_out_settle0_carry_i_3
       (.I0(SETTLE_TIMEOUT[5]),
        .I1(settle_cnt_reg[5]),
        .I2(SETTLE_TIMEOUT[4]),
        .I3(settle_cnt_reg[4]),
        .I4(settle_cnt_reg[3]),
        .I5(SETTLE_TIMEOUT[3]),
        .O(time_out_settle0_carry_i_3_n_0));
  LUT6 #(
    .INIT(64'h8200008241000041)) 
    time_out_settle0_carry_i_4
       (.I0(settle_cnt_reg[0]),
        .I1(settle_cnt_reg[1]),
        .I2(SETTLE_TIMEOUT[1]),
        .I3(settle_cnt_reg[2]),
        .I4(SETTLE_TIMEOUT[2]),
        .I5(SETTLE_TIMEOUT[0]),
        .O(time_out_settle0_carry_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h32)) 
    time_out_settle_i_1
       (.I0(time_out_settle0_carry__1_n_1),
        .I1(\settle_cnt[7]_i_1_n_0 ),
        .I2(time_out_settle_reg_n_0),
        .O(time_out_settle_i_1_n_0));
  FDRE time_out_settle_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(time_out_settle_i_1_n_0),
        .Q(time_out_settle_reg_n_0),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_dphy_reg
   (s_axi_arready,
    \s_level_out_bus_d3_reg[1] ,
    out,
    axi_bvalid_reg_0,
    axi_rvalid,
    s_axi_rdata,
    s_axi_awready,
    s_axi_wready,
    \s_level_out_bus_d3_reg[21] ,
    D,
    \s_level_out_bus_d3_reg[8] ,
    core_rst,
    s_level_out_d1_cdc_to_reg,
    s_axi_aclk,
    s_axi_aresetn,
    cl_errcontrol,
    pkt_cnt,
    \s_level_out_bus_d1_cdc_to_reg[15] ,
    dl_status_reg,
    cl_status_reg,
    cl_mode,
    core_clk,
    system_rst,
    s_axi_wdata,
    rx_div4_clk,
    s_axi_bready,
    s_axi_wvalid,
    s_axi_arvalid,
    s_axi_rready,
    s_axi_araddr,
    s_axi_awaddr,
    s_axi_awvalid);
  output s_axi_arready;
  output \s_level_out_bus_d3_reg[1] ;
  output [1:0]out;
  output axi_bvalid_reg_0;
  output axi_rvalid;
  output [31:0]s_axi_rdata;
  output s_axi_awready;
  output s_axi_wready;
  output [13:0]\s_level_out_bus_d3_reg[21] ;
  output [8:0]D;
  output [8:0]\s_level_out_bus_d3_reg[8] ;
  input core_rst;
  input s_level_out_d1_cdc_to_reg;
  input s_axi_aclk;
  input s_axi_aresetn;
  input cl_errcontrol;
  input [15:0]pkt_cnt;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15] ;
  input [9:0]dl_status_reg;
  input [2:0]cl_status_reg;
  input [0:0]cl_mode;
  input core_clk;
  input system_rst;
  input [31:0]s_axi_wdata;
  input rx_div4_clk;
  input s_axi_bready;
  input s_axi_wvalid;
  input s_axi_arvalid;
  input s_axi_rready;
  input [4:0]s_axi_araddr;
  input [4:0]s_axi_awaddr;
  input s_axi_awvalid;

  wire [8:0]D;
  wire axi_bvalid_i_1_n_0;
  wire axi_bvalid_reg_0;
  wire axi_rvalid;
  wire axi_rvalid4_out;
  wire cl_errcontrol;
  wire cl_errcontrol_axi;
  wire cl_errcontrol_r_axi_i_1_n_0;
  wire cl_errcontrol_r_axi_reg_n_0;
  wire cl_init_done_axi;
  wire [0:0]cl_mode;
  wire [2:0]cl_status_reg;
  wire core_clk;
  wire core_rst;
  wire [1:1]data0;
  wire [14:1]dl0_pkt_cnt_axi;
  wire dl0_pkt_cnt_sync_n_10;
  wire dl0_pkt_cnt_sync_n_11;
  wire dl0_pkt_cnt_sync_n_12;
  wire dl0_pkt_cnt_sync_n_13;
  wire dl0_pkt_cnt_sync_n_14;
  wire dl0_pkt_cnt_sync_n_15;
  wire [15:1]dl1_pkt_cnt_axi;
  wire dl1_pkt_cnt_sync_n_11;
  wire dl1_pkt_cnt_sync_n_12;
  wire dl1_pkt_cnt_sync_n_13;
  wire dl1_pkt_cnt_sync_n_14;
  wire dl1_pkt_cnt_sync_n_15;
  wire [15:0]dl2_pkt_cnt_axi;
  wire [8:0]dl3_pkt_cnt_axi;
  wire dl3_pkt_cnt_sync_n_10;
  wire dl3_pkt_cnt_sync_n_11;
  wire dl3_pkt_cnt_sync_n_12;
  wire dl3_pkt_cnt_sync_n_13;
  wire dl3_pkt_cnt_sync_n_14;
  wire dl3_pkt_cnt_sync_n_15;
  wire dl3_pkt_cnt_sync_n_5;
  wire dl3_pkt_cnt_sync_n_6;
  wire dl3_pkt_cnt_sync_n_7;
  wire dl3_pkt_cnt_sync_n_8;
  wire dl3_pkt_cnt_sync_n_9;
  wire [15:0]dl5_pkt_cnt_axi;
  wire [15:0]dl6_pkt_cnt_axi;
  wire [15:0]dl7_pkt_cnt_axi;
  wire [9:0]dl_status_reg;
  wire dphy_en_axi1;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_10_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_8_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_10_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_8_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_9_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_8_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_9_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_1_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ;
  wire hs_settle_reg_axi;
  wire [7:0]hs_settle_reg_axi_r1;
  wire \hs_settle_reg_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_axi_r2;
  wire [2:0]hs_settle_reg_axi_r20;
  wire \hs_settle_reg_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_axi_r2[8]_i_2_n_0 ;
  wire [6:0]hs_settle_reg_ln1_axi_r1;
  wire \hs_settle_reg_ln1_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln1_axi_r2;
  wire [2:0]hs_settle_reg_ln1_axi_r20;
  wire \hs_settle_reg_ln1_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln1_axi_r2[8]_i_2_n_0 ;
  wire [6:0]hs_settle_reg_ln2_axi_r1;
  wire \hs_settle_reg_ln2_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln2_axi_r2;
  wire [2:0]hs_settle_reg_ln2_axi_r20;
  wire \hs_settle_reg_ln2_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln2_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln2_w;
  wire hs_settle_reg_ln3_axi;
  wire [6:0]hs_settle_reg_ln3_axi_r1;
  wire \hs_settle_reg_ln3_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[1]_i_4_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[2]_i_4_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[2]_i_5_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln3_axi_r2;
  wire [2:0]hs_settle_reg_ln3_axi_r20;
  wire \hs_settle_reg_ln3_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln3_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln3_w;
  wire hs_settle_reg_ln4_axi;
  wire [6:0]hs_settle_reg_ln4_axi_r1;
  wire \hs_settle_reg_ln4_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln4_axi_r2;
  wire [2:0]hs_settle_reg_ln4_axi_r20;
  wire \hs_settle_reg_ln4_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln4_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln4_w;
  wire hs_settle_reg_ln5_axi;
  wire [6:0]hs_settle_reg_ln5_axi_r1;
  wire \hs_settle_reg_ln5_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln5_axi_r2;
  wire [2:0]hs_settle_reg_ln5_axi_r20;
  wire \hs_settle_reg_ln5_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln5_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln5_w;
  wire hs_settle_reg_ln6_axi;
  wire [6:0]hs_settle_reg_ln6_axi_r1;
  wire \hs_settle_reg_ln6_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln6_axi_r2;
  wire [2:0]hs_settle_reg_ln6_axi_r20;
  wire \hs_settle_reg_ln6_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln6_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln6_w;
  wire hs_settle_reg_ln7_axi;
  wire [6:0]hs_settle_reg_ln7_axi_r1;
  wire \hs_settle_reg_ln7_axi_r1[0]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[0]_i_2_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[1]_i_2_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[1]_i_3_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[2]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[2]_i_2_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[2]_i_3_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r1[6]_i_1_n_0 ;
  wire [8:0]hs_settle_reg_ln7_axi_r2;
  wire [2:0]hs_settle_reg_ln7_axi_r20;
  wire \hs_settle_reg_ln7_axi_r2[1]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[3]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[4]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[5]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[6]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[7]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[8]_i_1_n_0 ;
  wire \hs_settle_reg_ln7_axi_r2[8]_i_2_n_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln7_w;
  wire init_value_axi;
  wire mode_sync_n_2;
  wire [1:0]out;
  wire [4:0]p_0_in;
  wire [0:0]p_12_in;
  wire [31:0]p_1_in__0;
  wire [15:0]pkt_cnt;
  wire rd_req;
  wire rd_req0;
  wire rd_req_i_1_n_0;
  wire reset_released;
  wire reset_released_r;
  wire rx_div4_clk;
  wire s_axi_aclk;
  wire [4:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [4:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15] ;
  wire \s_level_out_bus_d3_reg[1] ;
  wire [13:0]\s_level_out_bus_d3_reg[21] ;
  wire [8:0]\s_level_out_bus_d3_reg[8] ;
  wire s_level_out_d1_cdc_to_reg;
  wire [4:0]sel0;
  wire stopstate_sync_n_0;
  wire stopstate_sync_n_1;
  wire system_rst;
  wire \wr_addr[2]_i_1_n_0 ;
  wire \wr_addr[3]_i_1_n_0 ;
  wire \wr_addr[4]_i_1_n_0 ;
  wire \wr_addr[5]_i_1_n_0 ;
  wire \wr_addr[6]_i_1_n_0 ;
  wire wr_req;
  wire wr_req07_out;
  wire wr_req_i_1_n_0;
  wire NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED;
  wire NLW_init_done_sync_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_init_done_sync_scndry_vect_out_UNCONNECTED;

  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT4 #(
    .INIT(16'h5C50)) 
    axi_bvalid_i_1
       (.I0(s_axi_bready),
        .I1(wr_req),
        .I2(axi_bvalid_reg_0),
        .I3(s_axi_wvalid),
        .O(axi_bvalid_i_1_n_0));
  FDCE axi_bvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(axi_bvalid_i_1_n_0),
        .Q(axi_bvalid_reg_0));
  LUT4 #(
    .INIT(16'h0302)) 
    cl_errcontrol_r_axi_i_1
       (.I0(cl_errcontrol_axi),
        .I1(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ),
        .I2(p_12_in),
        .I3(cl_errcontrol_r_axi_reg_n_0),
        .O(cl_errcontrol_r_axi_i_1_n_0));
  FDCE cl_errcontrol_r_axi_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(cl_errcontrol_r_axi_i_1_n_0),
        .Q(cl_errcontrol_r_axi_reg_n_0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__4 cl_errcontrol_sync
       (.prmry_ack(NLW_cl_errcontrol_sync_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(cl_errcontrol),
        .prmry_rst_n(1'b0),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(s_axi_aclk),
        .scndry_out(cl_errcontrol_axi),
        .scndry_rst_n(s_axi_aresetn),
        .scndry_vect_out(NLW_cl_errcontrol_sync_scndry_vect_out_UNCONNECTED[1:0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized6 control_sync
       (.core_clk(core_clk),
        .core_rst(core_rst),
        .data0(data0),
        .out(out),
        .p_12_in(p_12_in),
        .\s_level_out_bus_d3_reg[1]_0 (\s_level_out_bus_d3_reg[1] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8 d_termen_reg_sync
       (.core_clk(core_clk),
        .system_rst(system_rst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2 dl0_pkt_cnt_sync
       (.D({dl0_pkt_cnt_axi[14:9],dl0_pkt_cnt_axi[6],dl0_pkt_cnt_axi[3:1]}),
        .Q(sel0),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_0 (dl1_pkt_cnt_axi[15]),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] (\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] }),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_1 (dl1_pkt_cnt_sync_n_15),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] (dl3_pkt_cnt_sync_n_15),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 (dl2_pkt_cnt_axi[15]),
        .\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] (dl0_pkt_cnt_sync_n_13),
        .pkt_cnt(pkt_cnt),
        .\rd_addr_reg[2] (dl0_pkt_cnt_sync_n_12),
        .\rd_addr_reg[5] (dl0_pkt_cnt_sync_n_10),
        .\rd_addr_reg[5]_0 (dl0_pkt_cnt_sync_n_11),
        .\rd_addr_reg[5]_1 (dl0_pkt_cnt_sync_n_14),
        .\rd_addr_reg[6] (dl0_pkt_cnt_sync_n_15),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_22 dl1_pkt_cnt_sync
       (.D({dl1_pkt_cnt_axi[15:9],dl1_pkt_cnt_axi[6],dl1_pkt_cnt_axi[3:1]}),
        .Q(sel0[1:0]),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 ({dl2_pkt_cnt_axi[8:7],dl2_pkt_cnt_axi[5:4],dl2_pkt_cnt_axi[0]}),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 ({dl3_pkt_cnt_axi[8:7],dl3_pkt_cnt_axi[5:4],dl3_pkt_cnt_axi[0]}),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[15]_0 (\s_level_out_bus_d1_cdc_to_reg[15] ),
        .\s_level_out_bus_d3_reg[0]_0 (dl1_pkt_cnt_sync_n_14),
        .\s_level_out_bus_d3_reg[4]_0 (dl1_pkt_cnt_sync_n_13),
        .\s_level_out_bus_d3_reg[5]_0 (dl1_pkt_cnt_sync_n_12),
        .\s_level_out_bus_d3_reg[7]_0 (dl1_pkt_cnt_sync_n_11),
        .\s_level_out_bus_d3_reg[8]_0 (dl1_pkt_cnt_sync_n_15));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_23 dl2_pkt_cnt_sync
       (.D(dl2_pkt_cnt_axi),
        .SR(mode_sync_n_2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_24 dl3_pkt_cnt_sync
       (.D({dl3_pkt_cnt_axi[8:7],dl3_pkt_cnt_axi[5:4],dl3_pkt_cnt_axi[0]}),
        .Q({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] }),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 ({dl2_pkt_cnt_axi[14:9],dl2_pkt_cnt_axi[6],dl2_pkt_cnt_axi[3:1]}),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 ({dl1_pkt_cnt_axi[14:9],dl1_pkt_cnt_axi[6],dl1_pkt_cnt_axi[3:1]}),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 (sel0[3:0]),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ({dl0_pkt_cnt_axi[14:9],dl0_pkt_cnt_axi[6],dl0_pkt_cnt_axi[3:1]}),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] (dl3_pkt_cnt_sync_n_5),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] (dl3_pkt_cnt_sync_n_6),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] (dl3_pkt_cnt_sync_n_7),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] (dl3_pkt_cnt_sync_n_9),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] (dl3_pkt_cnt_sync_n_11),
        .\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] (dl3_pkt_cnt_sync_n_12),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d3_reg[10]_0 (dl3_pkt_cnt_sync_n_10),
        .\s_level_out_bus_d3_reg[13]_0 (dl3_pkt_cnt_sync_n_13),
        .\s_level_out_bus_d3_reg[14]_0 (dl3_pkt_cnt_sync_n_14),
        .\s_level_out_bus_d3_reg[15]_0 (dl3_pkt_cnt_sync_n_15),
        .\s_level_out_bus_d3_reg[6]_0 (dl3_pkt_cnt_sync_n_8));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_25 dl4_pkt_cnt_sync
       (.D(dl5_pkt_cnt_axi),
        .Q(sel0),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] (dl0_pkt_cnt_sync_n_13),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_0 (dl1_pkt_cnt_sync_n_14),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_1 (\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 (dl3_pkt_cnt_sync_n_5),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] (dl3_pkt_cnt_sync_n_6),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] (dl3_pkt_cnt_sync_n_7),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] (dl0_pkt_cnt_sync_n_10),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]_0 (dl1_pkt_cnt_sync_n_13),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] (dl0_pkt_cnt_sync_n_14),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]_0 (dl1_pkt_cnt_sync_n_12),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] (dl3_pkt_cnt_sync_n_8),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] (dl0_pkt_cnt_sync_n_11),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]_0 (dl1_pkt_cnt_sync_n_11),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] (\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 (dl0_pkt_cnt_sync_n_15),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] (dl3_pkt_cnt_sync_n_9),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] (dl3_pkt_cnt_sync_n_10),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] (dl3_pkt_cnt_sync_n_11),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] (dl3_pkt_cnt_sync_n_12),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] (dl3_pkt_cnt_sync_n_13),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] (dl3_pkt_cnt_sync_n_14),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] (dl6_pkt_cnt_axi),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 (dl7_pkt_cnt_axi),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 (dl0_pkt_cnt_sync_n_12),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d3_reg[15]_0 (p_1_in__0[31:16]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_26 dl5_pkt_cnt_sync
       (.D(dl5_pkt_cnt_axi),
        .SR(mode_sync_n_2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_27 dl6_pkt_cnt_sync
       (.D(dl6_pkt_cnt_axi),
        .SR(mode_sync_n_2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_28 dl7_pkt_cnt_sync
       (.D(dl7_pkt_cnt_axi),
        .SR(mode_sync_n_2),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized3 esc_abort_sync
       (.SR(mode_sync_n_2),
        .s_axi_aclk(s_axi_aclk));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_10 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h5353535F5F5F535F)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_8_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[0] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[0] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h08AA08A0080A0800)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_7 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_10_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .I2(sel0[1]),
        .I3(sel0[0]),
        .I4(p_12_in),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_8 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[0] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[0] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[0] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[0] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[10]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[10]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[11]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[11]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[12]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[12]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[13]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[13]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[14]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[14]));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[15]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[15]));
  LUT6 #(
    .INIT(64'h0000101100001000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_10 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(data0),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5 
       (.I0(sel0[1]),
        .I1(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_6 
       (.I0(sel0[2]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_8 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[1] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[1] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[1] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[1] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_9 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[1] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[1] ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ),
        .I3(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0010110000100000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_5 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4 
       (.I0(sel0[3]),
        .I1(sel0[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_8 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000AC00)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_9 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ),
        .I2(sel0[0]),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5 
       (.I0(sel0[0]),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6 
       (.I0(sel0[0]),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1 
       (.I0(rd_req),
        .I1(axi_rvalid),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5 
       (.I0(sel0[2]),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6 
       (.I0(sel0[4]),
        .I1(rd_req),
        .I2(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8 
       (.I0(rd_req),
        .I1(sel0[4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ),
        .I2(sel0[4]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ),
        .I4(sel0[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ),
        .O(p_1_in__0[3]));
  LUT6 #(
    .INIT(64'h00000000CFB3FFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2 
       (.I0(sel0[0]),
        .I1(sel0[3]),
        .I2(sel0[1]),
        .I3(sel0[2]),
        .I4(cl_init_done_axi),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5353535F5F5F535F)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_6_n_0 ),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT5 #(
    .INIT(32'hDDDDDD47)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4 
       (.I0(cl_init_done_axi),
        .I1(sel0[2]),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0300000800000008)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ),
        .I1(sel0[1]),
        .I2(sel0[0]),
        .I3(sel0[2]),
        .I4(sel0[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_6 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h010001000000FFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_3 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_4_n_0 ),
        .I5(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000057F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_4 
       (.I0(sel0[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .I2(sel0[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .I4(sel0[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_5_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_5 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFAE00AE00000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ),
        .I3(sel0[4]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_3_n_0 ),
        .I5(rd_req),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ),
        .I1(sel0[2]),
        .I2(cl_errcontrol_r_axi_reg_n_0),
        .I3(sel0[1]),
        .I4(sel0[3]),
        .I5(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h010001000000FFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_3 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_4_n_0 ),
        .I5(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h000057F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_4 
       (.I0(sel0[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .I2(sel0[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .I4(sel0[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_5_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_5 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000057F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_5 
       (.I0(sel0[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I2(sel0[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I4(sel0[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_7_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_7 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hEEEE222E00000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_2_n_0 ),
        .I1(sel0[4]),
        .I2(sel0[3]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_3_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_4_n_0 ),
        .I5(rd_req),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0003200000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I1(sel0[0]),
        .I2(sel0[3]),
        .I3(sel0[2]),
        .I4(sel0[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000057F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_3 
       (.I0(sel0[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I2(sel0[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I4(sel0[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_5_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I1(sel0[3]),
        .I2(sel0[2]),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_5 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFAE00AE00000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ),
        .I3(sel0[4]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_4_n_0 ),
        .I5(rd_req),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0010110000100000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2 
       (.I0(sel0[2]),
        .I1(sel0[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .I3(sel0[1]),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3 
       (.I0(sel0[1]),
        .I1(sel0[0]),
        .I2(sel0[2]),
        .I3(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF2F222FF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_5_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_3_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_6_n_0 ),
        .I4(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT4 #(
    .INIT(16'hFEFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_5 
       (.I0(sel0[0]),
        .I1(sel0[1]),
        .I2(sel0[2]),
        .I3(sel0[3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00001FDFFFFF1FDF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_6 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I1(sel0[0]),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I4(sel0[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_7_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_7 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I2(sel0[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I4(sel0[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000002000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[9]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ),
        .I1(sel0[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_8_n_0 ),
        .I3(sel0[1]),
        .I4(sel0[2]),
        .I5(sel0[3]),
        .O(p_1_in__0[9]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[0]),
        .Q(s_axi_rdata[0]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[10] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[10]),
        .Q(s_axi_rdata[10]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[11] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[11]),
        .Q(s_axi_rdata[11]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[12] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[12]),
        .Q(s_axi_rdata[12]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[13] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[13]),
        .Q(s_axi_rdata[13]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[14] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[14]),
        .Q(s_axi_rdata[14]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[15] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[15]),
        .Q(s_axi_rdata[15]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[16]),
        .Q(s_axi_rdata[16]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[17]),
        .Q(s_axi_rdata[17]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[18]),
        .Q(s_axi_rdata[18]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[19]),
        .Q(s_axi_rdata[19]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[1]),
        .Q(s_axi_rdata[1]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[20]),
        .Q(s_axi_rdata[20]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[21]),
        .Q(s_axi_rdata[21]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[22]),
        .Q(s_axi_rdata[22]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[23]),
        .Q(s_axi_rdata[23]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[24]),
        .Q(s_axi_rdata[24]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[25]),
        .Q(s_axi_rdata[25]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[26]),
        .Q(s_axi_rdata[26]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[27]),
        .Q(s_axi_rdata[27]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[28]),
        .Q(s_axi_rdata[28]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[29]),
        .Q(s_axi_rdata[29]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[2]),
        .Q(s_axi_rdata[2]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[30]),
        .Q(s_axi_rdata[30]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[31]),
        .Q(s_axi_rdata[31]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[3] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[3]),
        .Q(s_axi_rdata[3]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(stopstate_sync_n_1),
        .Q(s_axi_rdata[4]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[5] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(\gen_regs_wo_debug_wo_timeout.axi_rdata[5]_i_1_n_0 ),
        .Q(s_axi_rdata[5]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(stopstate_sync_n_0),
        .Q(s_axi_rdata[6]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[7] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(\gen_regs_wo_debug_wo_timeout.axi_rdata[7]_i_1_n_0 ),
        .Q(s_axi_rdata[7]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[8] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_1_n_0 ),
        .Q(s_axi_rdata[8]));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[9] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(p_1_in__0[9]),
        .Q(s_axi_rdata[9]));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h2A)) 
    \gen_regs_wo_debug_wo_timeout.axi_rvalid_i_1 
       (.I0(rd_req),
        .I1(s_axi_rready),
        .I2(axi_rvalid),
        .O(axi_rvalid4_out));
  FDCE \gen_regs_wo_debug_wo_timeout.axi_rvalid_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(axi_rvalid4_out),
        .Q(axi_rvalid));
  LUT6 #(
    .INIT(64'h0C00080000000800)) 
    \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1 
       (.I0(s_axi_wdata[5]),
        .I1(wr_req),
        .I2(axi_bvalid_reg_0),
        .I3(s_axi_wvalid),
        .I4(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFDF)) 
    \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(p_0_in[0]),
        .I4(p_0_in[3]),
        .O(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_2_n_0 ));
  FDCE \gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_i_1_n_0 ),
        .Q(\gen_regs_wo_debug_wo_timeout.cl_errcontrol_clr_axi_reg_n_0 ));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1 
       (.I0(s_axi_wdata[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2_n_0 ),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(data0),
        .O(\gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.dphy_en_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.dphy_en_axi_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(data0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1 
       (.I0(s_axi_wdata[0]),
        .I1(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2_n_0 ),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(p_12_in),
        .O(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000400)) 
    \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2 
       (.I0(p_0_in[1]),
        .I1(s_axi_wvalid),
        .I2(axi_bvalid_reg_0),
        .I3(wr_req),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_2_n_0 ));
  FDCE \gen_regs_wo_debug_wo_timeout.dphy_srst_axi_reg 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\gen_regs_wo_debug_wo_timeout.dphy_srst_axi_i_1_n_0 ),
        .Q(p_12_in));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi[8]_i_1 
       (.I0(p_0_in[0]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[1]),
        .I3(p_0_in[3]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(hs_settle_reg_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0000000800000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1 
       (.I0(p_0_in[1]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1 
       (.I0(p_0_in[1]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi[8]_i_1_n_0 ),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi[8]_i_1 
       (.I0(p_0_in[0]),
        .I1(p_0_in[3]),
        .I2(dphy_en_axi1),
        .I3(p_0_in[1]),
        .I4(p_0_in[4]),
        .I5(p_0_in[2]),
        .O(hs_settle_reg_ln3_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln3_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0040000000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi[8]_i_1 
       (.I0(p_0_in[3]),
        .I1(p_0_in[0]),
        .I2(dphy_en_axi1),
        .I3(p_0_in[1]),
        .I4(p_0_in[4]),
        .I5(p_0_in[2]),
        .O(hs_settle_reg_ln4_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln4_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi[8]_i_1 
       (.I0(p_0_in[1]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[3]),
        .I3(p_0_in[0]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(hs_settle_reg_ln5_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln5_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi[8]_i_1 
       (.I0(p_0_in[1]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[0]),
        .I3(p_0_in[3]),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(hs_settle_reg_ln6_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln6_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'h0000040000000000)) 
    \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi[8]_i_1 
       (.I0(p_0_in[0]),
        .I1(dphy_en_axi1),
        .I2(p_0_in[1]),
        .I3(p_0_in[4]),
        .I4(p_0_in[2]),
        .I5(p_0_in[3]),
        .O(hs_settle_reg_ln7_axi));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .D(s_axi_wdata[0]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[0] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .D(s_axi_wdata[4]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[5]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(hs_settle_reg_ln7_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA2AA)) 
    \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .I1(p_0_in[0]),
        .I2(p_0_in[3]),
        .I3(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_2_n_0 ),
        .I4(p_0_in[2]),
        .I5(p_0_in[4]),
        .O(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'h0020)) 
    \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_2 
       (.I0(wr_req),
        .I1(axi_bvalid_reg_0),
        .I2(s_axi_wvalid),
        .I3(p_0_in[1]),
        .O(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_2_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1[24]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ));
  LUT4 #(
    .INIT(16'hAA2A)) 
    \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ),
        .I1(p_0_in[3]),
        .I2(p_0_in[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_2_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF7FFFFFFFFFF)) 
    \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_2 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(s_axi_wvalid),
        .I4(axi_bvalid_reg_0),
        .I5(wr_req),
        .O(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_2_n_0 ));
  FDPE \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2[24]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_1 
       (.I0(p_0_in[2]),
        .I1(p_0_in[4]),
        .I2(p_0_in[1]),
        .I3(dphy_en_axi1),
        .I4(p_0_in[3]),
        .I5(p_0_in[0]),
        .O(init_value_axi));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT3 #(
    .INIT(8'h20)) 
    \gen_regs_wo_debug_wo_timeout.init_value_axi[31]_i_2 
       (.I0(s_axi_wvalid),
        .I1(axi_bvalid_reg_0),
        .I2(wr_req),
        .O(dphy_en_axi1));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[0] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[0]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[10] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[10]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[11] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[11]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[12] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[12]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[13] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[13]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[14] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[14]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[15] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[15]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[16] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[16]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[17]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[18]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[19]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[1] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[1]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[20] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[20]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[21] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[21]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[22] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[22]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[23] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[23]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[24] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[24]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[25]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[26] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[26]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[27]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[28]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[29] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[29]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[2] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[2]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[30] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[30]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[31] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[31]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[3] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[3]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[4] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[4]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[5] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[5]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[6] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[6]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[7] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[7]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ));
  FDCE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[8] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .CLR(mode_sync_n_2),
        .D(s_axi_wdata[8]),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ));
  FDPE \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[9] 
       (.C(s_axi_aclk),
        .CE(init_value_axi),
        .D(s_axi_wdata[9]),
        .PRE(mode_sync_n_2),
        .Q(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized3_29 hs_abort_sync
       (.SR(mode_sync_n_2),
        .dl_status_reg({dl_status_reg[8],dl_status_reg[3]}),
        .s_axi_aclk(s_axi_aclk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8_30 hs_rx_timeout_div4clk_sync
       (.rx_div4_clk(rx_div4_clk));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_axi_r1[1]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBA271BBAA2271BA2)) 
    \hs_settle_reg_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_axi_r1[1]_i_2_n_0 ),
        .I1(\hs_settle_reg_axi_r1[2]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .I3(\hs_settle_reg_axi_r1[1]_i_3_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ),
        .O(\hs_settle_reg_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5AA596A9A95A6A96)) 
    \hs_settle_reg_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_axi_r1[1]_i_3_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r1[0]));
  FDCE \hs_settle_reg_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r1[1]));
  FDCE \hs_settle_reg_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r1[2]));
  FDCE \hs_settle_reg_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r1[3]));
  FDPE \hs_settle_reg_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r1[4]));
  FDCE \hs_settle_reg_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r1[5]));
  FDCE \hs_settle_reg_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r1[6]));
  FDPE \hs_settle_reg_axi_r1_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r1[7]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_axi_r1[0]),
        .O(hs_settle_reg_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_axi_r1[0]),
        .I1(hs_settle_reg_axi_r1[1]),
        .O(\hs_settle_reg_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_axi_r1[1]),
        .I1(hs_settle_reg_axi_r1[0]),
        .I2(hs_settle_reg_axi_r1[2]),
        .O(hs_settle_reg_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_axi_r1[0]),
        .I1(hs_settle_reg_axi_r1[1]),
        .I2(hs_settle_reg_axi_r1[2]),
        .I3(hs_settle_reg_axi_r1[3]),
        .O(\hs_settle_reg_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_axi_r1[3]),
        .I1(hs_settle_reg_axi_r1[2]),
        .I2(hs_settle_reg_axi_r1[1]),
        .I3(hs_settle_reg_axi_r1[0]),
        .I4(hs_settle_reg_axi_r1[4]),
        .O(\hs_settle_reg_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_axi_r1[4]),
        .I1(hs_settle_reg_axi_r1[0]),
        .I2(hs_settle_reg_axi_r1[1]),
        .I3(hs_settle_reg_axi_r1[2]),
        .I4(hs_settle_reg_axi_r1[3]),
        .I5(hs_settle_reg_axi_r1[5]),
        .O(\hs_settle_reg_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_axi_r1[6]),
        .O(\hs_settle_reg_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_axi_r1[6]),
        .I1(\hs_settle_reg_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_axi_r1[6]),
        .I1(\hs_settle_reg_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_axi_r1[4]),
        .I1(hs_settle_reg_axi_r1[0]),
        .I2(hs_settle_reg_axi_r1[1]),
        .I3(hs_settle_reg_axi_r1[2]),
        .I4(hs_settle_reg_axi_r1[3]),
        .I5(hs_settle_reg_axi_r1[5]),
        .O(\hs_settle_reg_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r2[0]));
  FDCE \hs_settle_reg_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r2[1]));
  FDCE \hs_settle_reg_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_axi_r20[2]),
        .Q(hs_settle_reg_axi_r2[2]));
  FDCE \hs_settle_reg_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r2[3]));
  FDPE \hs_settle_reg_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r2[4]));
  FDCE \hs_settle_reg_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r2[5]));
  FDCE \hs_settle_reg_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r2[6]));
  FDPE \hs_settle_reg_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_axi_r2[7]));
  FDCE \hs_settle_reg_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_axi_r2[8]));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_ln1_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln1_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_ln1_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln1_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln1_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln1_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln1_axi_r1[1]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln1_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBA271BBAA2271BA2)) 
    \hs_settle_reg_ln1_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln1_axi_r1[1]_i_2_n_0 ),
        .I1(\hs_settle_reg_ln1_axi_r1[2]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ),
        .I3(\hs_settle_reg_ln1_axi_r1[1]_i_3_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[1] ),
        .O(\hs_settle_reg_ln1_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h5AA596A9A95A6A96)) 
    \hs_settle_reg_ln1_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln1_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln1_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln1_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln1_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln1_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln1_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_ln1_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln1_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln1_axi_r1[1]_i_3_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_ln1_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_ln1_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln1_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln1_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln1_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln1_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln1_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln1_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln1_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln1_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln1_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln1_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln1_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln1_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln1_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln1_axi_r1[0]));
  FDCE \hs_settle_reg_ln1_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r1[1]));
  FDCE \hs_settle_reg_ln1_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r1[2]));
  FDCE \hs_settle_reg_ln1_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r1[3]));
  FDPE \hs_settle_reg_ln1_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln1_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln1_axi_r1[4]));
  FDCE \hs_settle_reg_ln1_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r1[5]));
  FDCE \hs_settle_reg_ln1_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln1_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[0]),
        .O(hs_settle_reg_ln1_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln1_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[0]),
        .I1(hs_settle_reg_ln1_axi_r1[1]),
        .O(\hs_settle_reg_ln1_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln1_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[1]),
        .I1(hs_settle_reg_ln1_axi_r1[0]),
        .I2(hs_settle_reg_ln1_axi_r1[2]),
        .O(hs_settle_reg_ln1_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln1_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[0]),
        .I1(hs_settle_reg_ln1_axi_r1[1]),
        .I2(hs_settle_reg_ln1_axi_r1[2]),
        .I3(hs_settle_reg_ln1_axi_r1[3]),
        .O(\hs_settle_reg_ln1_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln1_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[3]),
        .I1(hs_settle_reg_ln1_axi_r1[2]),
        .I2(hs_settle_reg_ln1_axi_r1[1]),
        .I3(hs_settle_reg_ln1_axi_r1[0]),
        .I4(hs_settle_reg_ln1_axi_r1[4]),
        .O(\hs_settle_reg_ln1_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln1_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[4]),
        .I1(hs_settle_reg_ln1_axi_r1[0]),
        .I2(hs_settle_reg_ln1_axi_r1[1]),
        .I3(hs_settle_reg_ln1_axi_r1[2]),
        .I4(hs_settle_reg_ln1_axi_r1[3]),
        .I5(hs_settle_reg_ln1_axi_r1[5]),
        .O(\hs_settle_reg_ln1_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln1_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln1_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln1_axi_r1[6]),
        .O(\hs_settle_reg_ln1_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln1_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[6]),
        .I1(\hs_settle_reg_ln1_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln1_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln1_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln1_axi_r1[6]),
        .I1(\hs_settle_reg_ln1_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln1_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln1_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln1_axi_r1[4]),
        .I1(hs_settle_reg_ln1_axi_r1[0]),
        .I2(hs_settle_reg_ln1_axi_r1[1]),
        .I3(hs_settle_reg_ln1_axi_r1[2]),
        .I4(hs_settle_reg_ln1_axi_r1[3]),
        .I5(hs_settle_reg_ln1_axi_r1[5]),
        .O(\hs_settle_reg_ln1_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln1_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln1_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln1_axi_r2[0]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r2[1]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln1_axi_r20[2]),
        .Q(hs_settle_reg_ln1_axi_r2[2]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r2[3]));
  FDPE \hs_settle_reg_ln1_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln1_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln1_axi_r2[4]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r2[5]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r2[6]));
  FDPE \hs_settle_reg_ln1_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln1_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln1_axi_r2[7]));
  FDCE \hs_settle_reg_ln1_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln1_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln1_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4 hs_settle_reg_ln1_sync
       (.Q(hs_settle_reg_ln1_axi_r2),
        .core_clk(core_clk),
        .\s_level_out_bus_d3_reg[8]_0 (\s_level_out_bus_d3_reg[8] ),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_ln2_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln2_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_ln2_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln2_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln2_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln2_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln2_axi_r1[1]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln2_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99B2DDFF0044B266)) 
    \hs_settle_reg_ln2_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln2_axi_r1[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[1] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ),
        .I4(\hs_settle_reg_ln2_axi_r1[2]_i_2_n_0 ),
        .I5(\hs_settle_reg_ln2_axi_r1[1]_i_3_n_0 ),
        .O(\hs_settle_reg_ln2_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln2_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln2_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5AA596A9A95A6A96)) 
    \hs_settle_reg_ln2_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln2_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln2_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln2_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln2_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_ln2_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln2_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln2_axi_r1[1]_i_2_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_ln2_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_ln2_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln2_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln2_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln2_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln2_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln2_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln2_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln2_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln2_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln2_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln2_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln2_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln2_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln2_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln2_axi_r1[0]));
  FDCE \hs_settle_reg_ln2_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r1[1]));
  FDCE \hs_settle_reg_ln2_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r1[2]));
  FDCE \hs_settle_reg_ln2_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r1[3]));
  FDPE \hs_settle_reg_ln2_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln2_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln2_axi_r1[4]));
  FDCE \hs_settle_reg_ln2_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r1[5]));
  FDCE \hs_settle_reg_ln2_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln2_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[0]),
        .O(hs_settle_reg_ln2_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln2_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[0]),
        .I1(hs_settle_reg_ln2_axi_r1[1]),
        .O(\hs_settle_reg_ln2_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln2_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[1]),
        .I1(hs_settle_reg_ln2_axi_r1[0]),
        .I2(hs_settle_reg_ln2_axi_r1[2]),
        .O(hs_settle_reg_ln2_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln2_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[0]),
        .I1(hs_settle_reg_ln2_axi_r1[1]),
        .I2(hs_settle_reg_ln2_axi_r1[2]),
        .I3(hs_settle_reg_ln2_axi_r1[3]),
        .O(\hs_settle_reg_ln2_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln2_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[3]),
        .I1(hs_settle_reg_ln2_axi_r1[2]),
        .I2(hs_settle_reg_ln2_axi_r1[1]),
        .I3(hs_settle_reg_ln2_axi_r1[0]),
        .I4(hs_settle_reg_ln2_axi_r1[4]),
        .O(\hs_settle_reg_ln2_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln2_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[4]),
        .I1(hs_settle_reg_ln2_axi_r1[0]),
        .I2(hs_settle_reg_ln2_axi_r1[1]),
        .I3(hs_settle_reg_ln2_axi_r1[2]),
        .I4(hs_settle_reg_ln2_axi_r1[3]),
        .I5(hs_settle_reg_ln2_axi_r1[5]),
        .O(\hs_settle_reg_ln2_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln2_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln2_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln2_axi_r1[6]),
        .O(\hs_settle_reg_ln2_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln2_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[6]),
        .I1(\hs_settle_reg_ln2_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln2_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln2_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln2_axi_r1[6]),
        .I1(\hs_settle_reg_ln2_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln2_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln2_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln2_axi_r1[4]),
        .I1(hs_settle_reg_ln2_axi_r1[0]),
        .I2(hs_settle_reg_ln2_axi_r1[1]),
        .I3(hs_settle_reg_ln2_axi_r1[2]),
        .I4(hs_settle_reg_ln2_axi_r1[3]),
        .I5(hs_settle_reg_ln2_axi_r1[5]),
        .O(\hs_settle_reg_ln2_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln2_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln2_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln2_axi_r2[0]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r2[1]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln2_axi_r20[2]),
        .Q(hs_settle_reg_ln2_axi_r2[2]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r2[3]));
  FDPE \hs_settle_reg_ln2_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln2_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln2_axi_r2[4]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r2[5]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r2[6]));
  FDPE \hs_settle_reg_ln2_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln2_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln2_axi_r2[7]));
  FDCE \hs_settle_reg_ln2_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln2_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln2_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_31 hs_settle_reg_ln2_sync
       (.Q(hs_settle_reg_ln2_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln2_w),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hF7A7F7869E101A10)) 
    \hs_settle_reg_ln3_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln3_axi_r1[2]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .I3(\hs_settle_reg_ln3_axi_r1[1]_i_1_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[0] ),
        .I5(\hs_settle_reg_ln3_axi_r1[1]_i_4_n_0 ),
        .O(\hs_settle_reg_ln3_axi_r1[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h066F666F0666066F)) 
    \hs_settle_reg_ln3_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln3_axi_r1[1]_i_2_n_0 ),
        .I1(\hs_settle_reg_ln3_axi_r1[1]_i_3_n_0 ),
        .I2(\hs_settle_reg_ln3_axi_r1[2]_i_2_n_0 ),
        .I3(\hs_settle_reg_ln3_axi_r1[1]_i_4_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[1] ),
        .O(\hs_settle_reg_ln3_axi_r1[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'h88CF)) 
    \hs_settle_reg_ln3_axi_r1[1]_i_2 
       (.I0(\hs_settle_reg_ln3_axi_r1[2]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln3_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h997967E6E69E9979)) 
    \hs_settle_reg_ln3_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .O(\hs_settle_reg_ln3_axi_r1[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \hs_settle_reg_ln3_axi_r1[1]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln3_axi_r1[1]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln3_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln3_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln3_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hD5D5D5DD44445454)) 
    \hs_settle_reg_ln3_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln3_axi_r1[2]_i_3_n_0 ),
        .I1(\hs_settle_reg_ln3_axi_r1[2]_i_4_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I3(\hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln3_axi_r1[2]_i_5_n_0 ),
        .O(\hs_settle_reg_ln3_axi_r1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hE68E39638E9863E6)) 
    \hs_settle_reg_ln3_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln3_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF7CF10710C10F7CF)) 
    \hs_settle_reg_ln3_axi_r1[2]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln3_axi_r1[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h66D69929B96B4694)) 
    \hs_settle_reg_ln3_axi_r1[2]_i_5 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln3_axi_r1[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h36B3CD6C2432C94C)) 
    \hs_settle_reg_ln3_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h66D64694)) 
    \hs_settle_reg_ln3_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln3_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln3_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln3_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln3_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln3_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln3_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln3_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln3_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln3_axi_r1[0]));
  FDCE \hs_settle_reg_ln3_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r1[1]));
  FDCE \hs_settle_reg_ln3_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r1[2]));
  FDCE \hs_settle_reg_ln3_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r1[3]));
  FDPE \hs_settle_reg_ln3_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln3_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln3_axi_r1[4]));
  FDCE \hs_settle_reg_ln3_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r1[5]));
  FDCE \hs_settle_reg_ln3_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln3_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[0]),
        .O(hs_settle_reg_ln3_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln3_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[0]),
        .I1(hs_settle_reg_ln3_axi_r1[1]),
        .O(\hs_settle_reg_ln3_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln3_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[1]),
        .I1(hs_settle_reg_ln3_axi_r1[0]),
        .I2(hs_settle_reg_ln3_axi_r1[2]),
        .O(hs_settle_reg_ln3_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln3_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[0]),
        .I1(hs_settle_reg_ln3_axi_r1[1]),
        .I2(hs_settle_reg_ln3_axi_r1[2]),
        .I3(hs_settle_reg_ln3_axi_r1[3]),
        .O(\hs_settle_reg_ln3_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln3_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[3]),
        .I1(hs_settle_reg_ln3_axi_r1[2]),
        .I2(hs_settle_reg_ln3_axi_r1[1]),
        .I3(hs_settle_reg_ln3_axi_r1[0]),
        .I4(hs_settle_reg_ln3_axi_r1[4]),
        .O(\hs_settle_reg_ln3_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln3_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[4]),
        .I1(hs_settle_reg_ln3_axi_r1[0]),
        .I2(hs_settle_reg_ln3_axi_r1[1]),
        .I3(hs_settle_reg_ln3_axi_r1[2]),
        .I4(hs_settle_reg_ln3_axi_r1[3]),
        .I5(hs_settle_reg_ln3_axi_r1[5]),
        .O(\hs_settle_reg_ln3_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln3_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln3_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln3_axi_r1[6]),
        .O(\hs_settle_reg_ln3_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln3_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[6]),
        .I1(\hs_settle_reg_ln3_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln3_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln3_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln3_axi_r1[6]),
        .I1(\hs_settle_reg_ln3_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln3_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln3_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln3_axi_r1[4]),
        .I1(hs_settle_reg_ln3_axi_r1[0]),
        .I2(hs_settle_reg_ln3_axi_r1[1]),
        .I3(hs_settle_reg_ln3_axi_r1[2]),
        .I4(hs_settle_reg_ln3_axi_r1[3]),
        .I5(hs_settle_reg_ln3_axi_r1[5]),
        .O(\hs_settle_reg_ln3_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln3_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln3_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln3_axi_r2[0]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r2[1]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln3_axi_r20[2]),
        .Q(hs_settle_reg_ln3_axi_r2[2]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r2[3]));
  FDPE \hs_settle_reg_ln3_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln3_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln3_axi_r2[4]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r2[5]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r2[6]));
  FDPE \hs_settle_reg_ln3_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln3_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln3_axi_r2[7]));
  FDCE \hs_settle_reg_ln3_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln3_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln3_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_32 hs_settle_reg_ln3_sync
       (.Q(hs_settle_reg_ln3_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln3_w),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hBDEBA9EB286A2842)) 
    \hs_settle_reg_ln4_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln4_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ),
        .I2(\hs_settle_reg_ln4_axi_r1[2]_i_1_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[1] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[0] ),
        .I5(\hs_settle_reg_ln4_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln4_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln4_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln4_axi_r1[2]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln4_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hEB7EA12AAB7A8128)) 
    \hs_settle_reg_ln4_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln4_axi_r1[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ),
        .I2(\hs_settle_reg_ln4_axi_r1[2]_i_3_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I4(\hs_settle_reg_ln4_axi_r1[2]_i_1_n_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[1] ),
        .O(\hs_settle_reg_ln4_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h793C86C39EC76138)) 
    \hs_settle_reg_ln4_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln4_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h52B0F6BD4290F2B5)) 
    \hs_settle_reg_ln4_axi_r1[2]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln4_axi_r1[2]_i_2_n_0 ),
        .I3(\hs_settle_reg_ln4_axi_r1[4]_i_1_n_0 ),
        .I4(\hs_settle_reg_ln4_axi_r1[2]_i_3_n_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln4_axi_r1[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln4_axi_r1[2]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln4_axi_r1[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln4_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln4_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln4_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln4_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln4_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln4_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln4_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln4_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln4_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln4_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln4_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln4_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln4_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln4_axi_r1[0]));
  FDCE \hs_settle_reg_ln4_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r1[1]));
  FDCE \hs_settle_reg_ln4_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r1[2]));
  FDCE \hs_settle_reg_ln4_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r1[3]));
  FDPE \hs_settle_reg_ln4_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln4_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln4_axi_r1[4]));
  FDCE \hs_settle_reg_ln4_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r1[5]));
  FDCE \hs_settle_reg_ln4_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln4_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[0]),
        .O(hs_settle_reg_ln4_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln4_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[0]),
        .I1(hs_settle_reg_ln4_axi_r1[1]),
        .O(\hs_settle_reg_ln4_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln4_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[1]),
        .I1(hs_settle_reg_ln4_axi_r1[0]),
        .I2(hs_settle_reg_ln4_axi_r1[2]),
        .O(hs_settle_reg_ln4_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln4_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[0]),
        .I1(hs_settle_reg_ln4_axi_r1[1]),
        .I2(hs_settle_reg_ln4_axi_r1[2]),
        .I3(hs_settle_reg_ln4_axi_r1[3]),
        .O(\hs_settle_reg_ln4_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln4_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[3]),
        .I1(hs_settle_reg_ln4_axi_r1[2]),
        .I2(hs_settle_reg_ln4_axi_r1[1]),
        .I3(hs_settle_reg_ln4_axi_r1[0]),
        .I4(hs_settle_reg_ln4_axi_r1[4]),
        .O(\hs_settle_reg_ln4_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln4_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[4]),
        .I1(hs_settle_reg_ln4_axi_r1[0]),
        .I2(hs_settle_reg_ln4_axi_r1[1]),
        .I3(hs_settle_reg_ln4_axi_r1[2]),
        .I4(hs_settle_reg_ln4_axi_r1[3]),
        .I5(hs_settle_reg_ln4_axi_r1[5]),
        .O(\hs_settle_reg_ln4_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln4_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln4_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln4_axi_r1[6]),
        .O(\hs_settle_reg_ln4_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln4_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[6]),
        .I1(\hs_settle_reg_ln4_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln4_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln4_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln4_axi_r1[6]),
        .I1(\hs_settle_reg_ln4_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln4_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln4_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln4_axi_r1[4]),
        .I1(hs_settle_reg_ln4_axi_r1[0]),
        .I2(hs_settle_reg_ln4_axi_r1[1]),
        .I3(hs_settle_reg_ln4_axi_r1[2]),
        .I4(hs_settle_reg_ln4_axi_r1[3]),
        .I5(hs_settle_reg_ln4_axi_r1[5]),
        .O(\hs_settle_reg_ln4_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln4_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln4_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln4_axi_r2[0]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r2[1]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln4_axi_r20[2]),
        .Q(hs_settle_reg_ln4_axi_r2[2]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r2[3]));
  FDPE \hs_settle_reg_ln4_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln4_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln4_axi_r2[4]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r2[5]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r2[6]));
  FDPE \hs_settle_reg_ln4_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln4_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln4_axi_r2[7]));
  FDCE \hs_settle_reg_ln4_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln4_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln4_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_33 hs_settle_reg_ln4_sync
       (.Q(hs_settle_reg_ln4_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln4_w),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_ln5_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln5_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_ln5_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln5_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln5_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln5_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln5_axi_r1[1]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln5_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99B2DDFF0044B266)) 
    \hs_settle_reg_ln5_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln5_axi_r1[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[1] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ),
        .I4(\hs_settle_reg_ln5_axi_r1[2]_i_2_n_0 ),
        .I5(\hs_settle_reg_ln5_axi_r1[1]_i_3_n_0 ),
        .O(\hs_settle_reg_ln5_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln5_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln5_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h793C86C39EC76138)) 
    \hs_settle_reg_ln5_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln5_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln5_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln5_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln5_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_ln5_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln5_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln5_axi_r1[1]_i_2_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_ln5_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_ln5_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln5_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln5_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln5_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln5_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln5_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln5_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln5_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln5_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln5_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln5_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln5_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln5_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln5_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln5_axi_r1[0]));
  FDCE \hs_settle_reg_ln5_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r1[1]));
  FDCE \hs_settle_reg_ln5_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r1[2]));
  FDCE \hs_settle_reg_ln5_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r1[3]));
  FDPE \hs_settle_reg_ln5_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln5_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln5_axi_r1[4]));
  FDCE \hs_settle_reg_ln5_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r1[5]));
  FDCE \hs_settle_reg_ln5_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln5_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[0]),
        .O(hs_settle_reg_ln5_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln5_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[0]),
        .I1(hs_settle_reg_ln5_axi_r1[1]),
        .O(\hs_settle_reg_ln5_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln5_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[1]),
        .I1(hs_settle_reg_ln5_axi_r1[0]),
        .I2(hs_settle_reg_ln5_axi_r1[2]),
        .O(hs_settle_reg_ln5_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln5_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[0]),
        .I1(hs_settle_reg_ln5_axi_r1[1]),
        .I2(hs_settle_reg_ln5_axi_r1[2]),
        .I3(hs_settle_reg_ln5_axi_r1[3]),
        .O(\hs_settle_reg_ln5_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln5_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[3]),
        .I1(hs_settle_reg_ln5_axi_r1[2]),
        .I2(hs_settle_reg_ln5_axi_r1[1]),
        .I3(hs_settle_reg_ln5_axi_r1[0]),
        .I4(hs_settle_reg_ln5_axi_r1[4]),
        .O(\hs_settle_reg_ln5_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln5_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[4]),
        .I1(hs_settle_reg_ln5_axi_r1[0]),
        .I2(hs_settle_reg_ln5_axi_r1[1]),
        .I3(hs_settle_reg_ln5_axi_r1[2]),
        .I4(hs_settle_reg_ln5_axi_r1[3]),
        .I5(hs_settle_reg_ln5_axi_r1[5]),
        .O(\hs_settle_reg_ln5_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln5_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln5_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln5_axi_r1[6]),
        .O(\hs_settle_reg_ln5_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln5_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[6]),
        .I1(\hs_settle_reg_ln5_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln5_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln5_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln5_axi_r1[6]),
        .I1(\hs_settle_reg_ln5_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln5_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln5_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln5_axi_r1[4]),
        .I1(hs_settle_reg_ln5_axi_r1[0]),
        .I2(hs_settle_reg_ln5_axi_r1[1]),
        .I3(hs_settle_reg_ln5_axi_r1[2]),
        .I4(hs_settle_reg_ln5_axi_r1[3]),
        .I5(hs_settle_reg_ln5_axi_r1[5]),
        .O(\hs_settle_reg_ln5_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln5_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln5_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln5_axi_r2[0]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r2[1]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln5_axi_r20[2]),
        .Q(hs_settle_reg_ln5_axi_r2[2]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r2[3]));
  FDPE \hs_settle_reg_ln5_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln5_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln5_axi_r2[4]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r2[5]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r2[6]));
  FDPE \hs_settle_reg_ln5_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln5_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln5_axi_r2[7]));
  FDCE \hs_settle_reg_ln5_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln5_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln5_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_34 hs_settle_reg_ln5_sync
       (.Q(hs_settle_reg_ln5_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln5_w),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_ln6_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln6_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_ln6_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln6_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln6_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln6_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln6_axi_r1[1]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln6_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99B2DDFF0044B266)) 
    \hs_settle_reg_ln6_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln6_axi_r1[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[1] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ),
        .I4(\hs_settle_reg_ln6_axi_r1[2]_i_2_n_0 ),
        .I5(\hs_settle_reg_ln6_axi_r1[1]_i_3_n_0 ),
        .O(\hs_settle_reg_ln6_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln6_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln6_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h793C86C39EC76138)) 
    \hs_settle_reg_ln6_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln6_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln6_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln6_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln6_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_ln6_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln6_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln6_axi_r1[1]_i_2_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_ln6_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_ln6_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln6_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln6_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln6_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln6_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln6_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln6_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln6_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln6_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln6_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln6_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln6_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln6_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln6_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln6_axi_r1[0]));
  FDCE \hs_settle_reg_ln6_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r1[1]));
  FDCE \hs_settle_reg_ln6_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r1[2]));
  FDCE \hs_settle_reg_ln6_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r1[3]));
  FDPE \hs_settle_reg_ln6_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln6_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln6_axi_r1[4]));
  FDCE \hs_settle_reg_ln6_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r1[5]));
  FDCE \hs_settle_reg_ln6_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln6_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[0]),
        .O(hs_settle_reg_ln6_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln6_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[0]),
        .I1(hs_settle_reg_ln6_axi_r1[1]),
        .O(\hs_settle_reg_ln6_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln6_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[1]),
        .I1(hs_settle_reg_ln6_axi_r1[0]),
        .I2(hs_settle_reg_ln6_axi_r1[2]),
        .O(hs_settle_reg_ln6_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln6_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[0]),
        .I1(hs_settle_reg_ln6_axi_r1[1]),
        .I2(hs_settle_reg_ln6_axi_r1[2]),
        .I3(hs_settle_reg_ln6_axi_r1[3]),
        .O(\hs_settle_reg_ln6_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln6_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[3]),
        .I1(hs_settle_reg_ln6_axi_r1[2]),
        .I2(hs_settle_reg_ln6_axi_r1[1]),
        .I3(hs_settle_reg_ln6_axi_r1[0]),
        .I4(hs_settle_reg_ln6_axi_r1[4]),
        .O(\hs_settle_reg_ln6_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln6_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[4]),
        .I1(hs_settle_reg_ln6_axi_r1[0]),
        .I2(hs_settle_reg_ln6_axi_r1[1]),
        .I3(hs_settle_reg_ln6_axi_r1[2]),
        .I4(hs_settle_reg_ln6_axi_r1[3]),
        .I5(hs_settle_reg_ln6_axi_r1[5]),
        .O(\hs_settle_reg_ln6_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln6_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln6_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln6_axi_r1[6]),
        .O(\hs_settle_reg_ln6_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln6_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[6]),
        .I1(\hs_settle_reg_ln6_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln6_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln6_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln6_axi_r1[6]),
        .I1(\hs_settle_reg_ln6_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln6_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln6_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln6_axi_r1[4]),
        .I1(hs_settle_reg_ln6_axi_r1[0]),
        .I2(hs_settle_reg_ln6_axi_r1[1]),
        .I3(hs_settle_reg_ln6_axi_r1[2]),
        .I4(hs_settle_reg_ln6_axi_r1[3]),
        .I5(hs_settle_reg_ln6_axi_r1[5]),
        .O(\hs_settle_reg_ln6_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln6_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln6_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln6_axi_r2[0]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r2[1]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln6_axi_r20[2]),
        .Q(hs_settle_reg_ln6_axi_r2[2]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r2[3]));
  FDPE \hs_settle_reg_ln6_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln6_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln6_axi_r2[4]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r2[5]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r2[6]));
  FDPE \hs_settle_reg_ln6_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln6_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln6_axi_r2[7]));
  FDCE \hs_settle_reg_ln6_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln6_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln6_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_35 hs_settle_reg_ln6_sync
       (.Q(hs_settle_reg_ln6_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln6_w),
        .system_rst(system_rst));
  LUT6 #(
    .INIT(64'hEABB77EAA81122A8)) 
    \hs_settle_reg_ln7_axi_r1[0]_i_1 
       (.I0(\hs_settle_reg_ln7_axi_r1[0]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[1] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[0] ),
        .I3(\hs_settle_reg_ln7_axi_r1[2]_i_2_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ),
        .I5(\hs_settle_reg_ln7_axi_r1[1]_i_1_n_0 ),
        .O(\hs_settle_reg_ln7_axi_r1[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h69)) 
    \hs_settle_reg_ln7_axi_r1[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I1(\hs_settle_reg_ln7_axi_r1[1]_i_2_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ),
        .O(\hs_settle_reg_ln7_axi_r1[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h99B2DDFF0044B266)) 
    \hs_settle_reg_ln7_axi_r1[1]_i_1 
       (.I0(\hs_settle_reg_ln7_axi_r1[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[1] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ),
        .I4(\hs_settle_reg_ln7_axi_r1[2]_i_2_n_0 ),
        .I5(\hs_settle_reg_ln7_axi_r1[1]_i_3_n_0 ),
        .O(\hs_settle_reg_ln7_axi_r1[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF1C770F10F1CC70F)) 
    \hs_settle_reg_ln7_axi_r1[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln7_axi_r1[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h793C86C39EC76138)) 
    \hs_settle_reg_ln7_axi_r1[1]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln7_axi_r1[1]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln7_axi_r1[2]_i_1 
       (.I0(\hs_settle_reg_ln7_axi_r1[2]_i_2_n_0 ),
        .O(\hs_settle_reg_ln7_axi_r1[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE4E451755175D8D8)) 
    \hs_settle_reg_ln7_axi_r1[2]_i_2 
       (.I0(\hs_settle_reg_ln7_axi_r1[2]_i_3_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .I2(\hs_settle_reg_ln7_axi_r1[1]_i_2_n_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .I5(\hs_settle_reg_ln7_axi_r1[4]_i_1_n_0 ),
        .O(\hs_settle_reg_ln7_axi_r1[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'hDB65249A)) 
    \hs_settle_reg_ln7_axi_r1[2]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln7_axi_r1[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h65BA5DA645A25924)) 
    \hs_settle_reg_ln7_axi_r1[3]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .I5(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[3] ),
        .O(\hs_settle_reg_ln7_axi_r1[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h3C9E1C86)) 
    \hs_settle_reg_ln7_axi_r1[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .I4(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[4] ),
        .O(\hs_settle_reg_ln7_axi_r1[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'hA624)) 
    \hs_settle_reg_ln7_axi_r1[5]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I3(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[5] ),
        .O(\hs_settle_reg_ln7_axi_r1[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'hA8)) 
    \hs_settle_reg_ln7_axi_r1[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[8] ),
        .I1(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .I2(\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[7] ),
        .O(\hs_settle_reg_ln7_axi_r1[6]_i_1_n_0 ));
  FDPE \hs_settle_reg_ln7_axi_r1_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln7_axi_r1[0]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln7_axi_r1[0]));
  FDCE \hs_settle_reg_ln7_axi_r1_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r1[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r1[1]));
  FDCE \hs_settle_reg_ln7_axi_r1_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r1[2]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r1[2]));
  FDCE \hs_settle_reg_ln7_axi_r1_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r1[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r1[3]));
  FDPE \hs_settle_reg_ln7_axi_r1_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln7_axi_r1[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln7_axi_r1[4]));
  FDCE \hs_settle_reg_ln7_axi_r1_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r1[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r1[5]));
  FDCE \hs_settle_reg_ln7_axi_r1_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r1[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r1[6]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \hs_settle_reg_ln7_axi_r2[0]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[0]),
        .O(hs_settle_reg_ln7_axi_r20[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln7_axi_r2[1]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[0]),
        .I1(hs_settle_reg_ln7_axi_r1[1]),
        .O(\hs_settle_reg_ln7_axi_r2[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h1E)) 
    \hs_settle_reg_ln7_axi_r2[2]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[1]),
        .I1(hs_settle_reg_ln7_axi_r1[0]),
        .I2(hs_settle_reg_ln7_axi_r1[2]),
        .O(hs_settle_reg_ln7_axi_r20[2]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hE01F)) 
    \hs_settle_reg_ln7_axi_r2[3]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[0]),
        .I1(hs_settle_reg_ln7_axi_r1[1]),
        .I2(hs_settle_reg_ln7_axi_r1[2]),
        .I3(hs_settle_reg_ln7_axi_r1[3]),
        .O(\hs_settle_reg_ln7_axi_r2[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'hEEEA1115)) 
    \hs_settle_reg_ln7_axi_r2[4]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[3]),
        .I1(hs_settle_reg_ln7_axi_r1[2]),
        .I2(hs_settle_reg_ln7_axi_r1[1]),
        .I3(hs_settle_reg_ln7_axi_r1[0]),
        .I4(hs_settle_reg_ln7_axi_r1[4]),
        .O(\hs_settle_reg_ln7_axi_r2[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFEAA00000155)) 
    \hs_settle_reg_ln7_axi_r2[5]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[4]),
        .I1(hs_settle_reg_ln7_axi_r1[0]),
        .I2(hs_settle_reg_ln7_axi_r1[1]),
        .I3(hs_settle_reg_ln7_axi_r1[2]),
        .I4(hs_settle_reg_ln7_axi_r1[3]),
        .I5(hs_settle_reg_ln7_axi_r1[5]),
        .O(\hs_settle_reg_ln7_axi_r2[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \hs_settle_reg_ln7_axi_r2[6]_i_1 
       (.I0(\hs_settle_reg_ln7_axi_r2[8]_i_2_n_0 ),
        .I1(hs_settle_reg_ln7_axi_r1[6]),
        .O(\hs_settle_reg_ln7_axi_r2[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hE1)) 
    \hs_settle_reg_ln7_axi_r2[7]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[6]),
        .I1(\hs_settle_reg_ln7_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln7_axi_r2[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \hs_settle_reg_ln7_axi_r2[8]_i_1 
       (.I0(hs_settle_reg_ln7_axi_r1[6]),
        .I1(\hs_settle_reg_ln7_axi_r2[8]_i_2_n_0 ),
        .I2(hs_settle_reg_axi_r1[7]),
        .O(\hs_settle_reg_ln7_axi_r2[8]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEAA)) 
    \hs_settle_reg_ln7_axi_r2[8]_i_2 
       (.I0(hs_settle_reg_ln7_axi_r1[4]),
        .I1(hs_settle_reg_ln7_axi_r1[0]),
        .I2(hs_settle_reg_ln7_axi_r1[1]),
        .I3(hs_settle_reg_ln7_axi_r1[2]),
        .I4(hs_settle_reg_ln7_axi_r1[3]),
        .I5(hs_settle_reg_ln7_axi_r1[5]),
        .O(\hs_settle_reg_ln7_axi_r2[8]_i_2_n_0 ));
  FDPE \hs_settle_reg_ln7_axi_r2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(hs_settle_reg_ln7_axi_r20[0]),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln7_axi_r2[0]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r2[1]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r2[1]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(hs_settle_reg_ln7_axi_r20[2]),
        .Q(hs_settle_reg_ln7_axi_r2[2]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r2[3]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r2[3]));
  FDPE \hs_settle_reg_ln7_axi_r2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln7_axi_r2[4]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln7_axi_r2[4]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r2[5]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r2[5]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r2[6]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r2[6]));
  FDPE \hs_settle_reg_ln7_axi_r2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\hs_settle_reg_ln7_axi_r2[7]_i_1_n_0 ),
        .PRE(mode_sync_n_2),
        .Q(hs_settle_reg_ln7_axi_r2[7]));
  FDCE \hs_settle_reg_ln7_axi_r2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(\hs_settle_reg_ln7_axi_r2[8]_i_1_n_0 ),
        .Q(hs_settle_reg_ln7_axi_r2[8]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_36 hs_settle_reg_ln7_sync
       (.Q(hs_settle_reg_ln7_axi_r2),
        .core_clk(core_clk),
        .in0(hs_settle_reg_ln7_w),
        .system_rst(system_rst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_37 hs_settle_reg_sync
       (.D(D),
        .Q(hs_settle_reg_axi_r2),
        .core_clk(core_clk),
        .system_rst(system_rst));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized7 idelay_value_sync
       (.core_clk(core_clk),
        .\s_level_out_bus_d1_cdc_to_reg[16]_0 (\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg_n_0_[24] ),
        .\s_level_out_bus_d1_cdc_to_reg[48]_0 (\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ),
        .system_rst(system_rst));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__3 init_done_sync
       (.prmry_ack(NLW_init_done_sync_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(s_level_out_d1_cdc_to_reg),
        .prmry_rst_n(1'b0),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(s_axi_aclk),
        .scndry_out(cl_init_done_axi),
        .scndry_rst_n(s_axi_aresetn),
        .scndry_vect_out(NLW_init_done_sync_scndry_vect_out_UNCONNECTED[1:0]));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8_38 init_reg_sync
       (.Q({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[31] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[30] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[29] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[28] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[27] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[26] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[25] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[24] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[23] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[22] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[21] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[20] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[19] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[18] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[17] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[16] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[15] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[14] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[13] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[12] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[11] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[10] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[9] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[8] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[7] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[5] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[3] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[0] }),
        .core_clk(core_clk),
        .\s_level_out_bus_d3_reg[21]_0 (\s_level_out_bus_d3_reg[21] ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized5 mode_sync
       (.D(p_1_in__0[1:0]),
        .Q(sel0),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 ({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[0] }),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_2 (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_10_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_3 (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] (\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_7_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_2 (\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap2_reg_n_0_[24] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_6_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_2 (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_8_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_3 (\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_9_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 ({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[1] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[0] }),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .\s_level_out_bus_d1_cdc_to_reg[17]_0 ({dl_status_reg[1:0],dl_status_reg[6:5],cl_status_reg[0],cl_mode}));
  LUT4 #(
    .INIT(16'h0020)) 
    \rd_addr[6]_i_1 
       (.I0(s_axi_arvalid),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .O(rd_req0));
  FDCE \rd_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_2),
        .D(s_axi_araddr[0]),
        .Q(sel0[0]));
  FDCE \rd_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_2),
        .D(s_axi_araddr[1]),
        .Q(sel0[1]));
  FDCE \rd_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_2),
        .D(s_axi_araddr[2]),
        .Q(sel0[2]));
  FDCE \rd_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_2),
        .D(s_axi_araddr[3]),
        .Q(sel0[3]));
  FDCE \rd_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(rd_req0),
        .CLR(mode_sync_n_2),
        .D(s_axi_araddr[4]),
        .Q(sel0[4]));
  LUT6 #(
    .INIT(64'h0400AEAAAEAAAEAA)) 
    rd_req_i_1
       (.I0(rd_req),
        .I1(reset_released_r),
        .I2(wr_req),
        .I3(s_axi_arvalid),
        .I4(s_axi_rready),
        .I5(axi_rvalid),
        .O(rd_req_i_1_n_0));
  FDCE rd_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(rd_req_i_1_n_0),
        .Q(rd_req));
  FDCE reset_released_r_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(reset_released),
        .Q(reset_released_r));
  FDCE reset_released_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .CLR(mode_sync_n_2),
        .D(1'b1),
        .Q(reset_released));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT3 #(
    .INIT(8'h04)) 
    s_axi_arready_INST_0
       (.I0(rd_req),
        .I1(reset_released_r),
        .I2(wr_req),
        .O(s_axi_arready));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT4 #(
    .INIT(16'h0004)) 
    s_axi_awready_INST_0
       (.I0(wr_req),
        .I1(reset_released_r),
        .I2(rd_req),
        .I3(s_axi_arvalid),
        .O(s_axi_awready));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(wr_req),
        .I1(axi_bvalid_reg_0),
        .O(s_axi_wready));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_39 stopstate_sync
       (.D({stopstate_sync_n_0,stopstate_sync_n_1}),
        .Q(sel0),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_0 (\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[6] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] ({\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[4] }),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_1 (\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_2 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 ({\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[6] ,\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[4] }),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_4 (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_5 (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_5_n_0 ),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[8]_0 ({dl_status_reg[4],dl_status_reg[9],cl_status_reg[2]}));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_40 ulps_sync
       (.D(p_1_in__0[2]),
        .Q(sel0),
        .SR(mode_sync_n_2),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_4_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_0 (\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_6_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_1 (\gen_regs_wo_debug_wo_timeout.init_value_axi_reg_n_0_[2] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_2 (\gen_regs_wo_debug_wo_timeout.axi_rdata[8]_i_3_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_3 (\gen_regs_wo_debug_wo_timeout.hs_settle_reg_axi_reg_n_0_[2] ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_4 (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_8_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_5 (\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_9_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_6 (\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_5_n_0 ),
        .\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_7 (\gen_regs_wo_debug_wo_timeout.hs_settle_reg_ln7_axi_reg_n_0_[2] ),
        .rd_req(rd_req),
        .s_axi_aclk(s_axi_aclk),
        .\s_level_out_bus_d1_cdc_to_reg[8]_0 ({dl_status_reg[2],dl_status_reg[7],cl_status_reg[1]}));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[2]_i_1 
       (.I0(s_axi_awaddr[0]),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awvalid),
        .O(\wr_addr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[3]_i_1 
       (.I0(s_axi_awaddr[1]),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awvalid),
        .O(\wr_addr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[4]_i_1 
       (.I0(s_axi_awaddr[2]),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awvalid),
        .O(\wr_addr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[5]_i_1 
       (.I0(s_axi_awaddr[3]),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awvalid),
        .O(\wr_addr[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \wr_addr[6]_i_1 
       (.I0(s_axi_awaddr[4]),
        .I1(wr_req),
        .I2(reset_released_r),
        .I3(rd_req),
        .I4(s_axi_arvalid),
        .I5(s_axi_awvalid),
        .O(\wr_addr[6]_i_1_n_0 ));
  FDCE \wr_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(\wr_addr[2]_i_1_n_0 ),
        .Q(p_0_in[0]));
  FDCE \wr_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(\wr_addr[3]_i_1_n_0 ),
        .Q(p_0_in[1]));
  FDCE \wr_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(\wr_addr[4]_i_1_n_0 ),
        .Q(p_0_in[2]));
  FDCE \wr_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(\wr_addr[5]_i_1_n_0 ),
        .Q(p_0_in[3]));
  FDCE \wr_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(\wr_addr[6]_i_1_n_0 ),
        .Q(p_0_in[4]));
  LUT3 #(
    .INIT(8'hEA)) 
    wr_req_i_1
       (.I0(wr_req07_out),
        .I1(s_axi_bready),
        .I2(axi_bvalid_reg_0),
        .O(wr_req_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    wr_req_i_2
       (.I0(s_axi_awvalid),
        .I1(s_axi_arvalid),
        .I2(rd_req),
        .I3(reset_released_r),
        .I4(wr_req),
        .O(wr_req07_out));
  FDCE wr_req_reg
       (.C(s_axi_aclk),
        .CE(wr_req_i_1_n_0),
        .CLR(mode_sync_n_2),
        .D(wr_req07_out),
        .Q(wr_req));
endmodule

(* BYTE_UI = "8" *) (* CL_ACTIVE_BYTE_UI = "1" *) (* C_CAL_MODE = "VAR_LOAD" *) 
(* C_CLK_PREPARE_VAL = "40" *) (* C_CLK_SETTLE_VAL = "95" *) (* C_CLK_TERMEN_VAL = "38" *) 
(* C_CLK_ZERO_VAL = "205" *) (* C_COMP_CYCLES = "5" *) (* C_DPHY_LANES = "2" *) 
(* C_DPHY_MODE = "SLAVE" *) (* C_D_TERMEN_VAL = "35" *) (* C_EN_DEBUG_REGS = "0" *) 
(* C_EN_REGISTER = "1" *) (* C_EN_TIMEOUT_REGS = "0" *) (* C_EN_ULPS_WAKEUP_CNT = "FALSE" *) 
(* C_ESC_TIMEOUT = "25600" *) (* C_HS_LINE_RATE = "928" *) (* C_HS_RX_TIMEOUT = "65541" *) 
(* C_HS_SETTLE_VAL = "145" *) (* C_HS_SKIP_VAL = "40" *) (* C_IDLY_TAP = "1" *) 
(* C_INIT = "100000" *) (* C_IO_ADDR = "8'b00010100" *) (* C_IS_7SERIES = "TRUE" *) 
(* C_LPX_PERIOD = "50" *) (* C_NO_INCR_TAPS = "2" *) (* C_RCVE_DESKEW_SEQ = "false" *) 
(* C_STABLE_CLK_PERIOD = "5.000000" *) (* C_UI_IN_TAPS = "64" *) (* C_WAKEUP = "1000000" *) 
(* DPHY_PRESET = "None" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* INIT_TIMEOUT_L = "19998" *) 
(* LPX_PERIOD_MIN = "25" *) (* LP_STATE_CNT = "2" *) (* MTBF_SYNC_STAGES = "3" *) 
(* RESET_PULSE_EXTN = "4'b0001" *) (* SETTLE_TIMEOUT_L = "24" *) (* SUPPORT_LEVEL = "1" *) 
(* UI10_VAL = "10" *) (* UI_VAL = "1077" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_fab_top
   (rx_div4_clk,
    clk_200m,
    core_clk,
    core_rst,
    core_ref_clk,
    system_rst_in,
    dphy_srst_out,
    dphy_en_out,
    system_rst_phybyteclk_in,
    system_rst_byteclk_in,
    phy_rst,
    phy_ready,
    sys_rst_byteclk_out,
    init_done,
    idelay_tap_value,
    idelay_load,
    idelay_ready,
    tap_val_dyn_out,
    tap_comp_res,
    tap_comp_rst,
    cal_pass,
    cal_done,
    dly_ctrl_rdy,
    idly_tap_val,
    reg_cal_start,
    rx_dl0_en_hs_lpn,
    rx_dl0_disable_ibuf,
    rx_dl0_lp_dp,
    rx_dl0_lp_dn,
    rx_dl0_hs_dp,
    rx_dl0_fifo_empty,
    rx_dl0_fifo_rd_en,
    rx_dl0_fifo_rd_clk,
    dl0_rxdatahs,
    dl0_rxvalidhs,
    dl0_rxactivehs,
    dl0_rxskewcalhs,
    dl0_rxsynchs,
    dl0_forcerxmode,
    dl0_stopstate,
    dl0_enable,
    dl0_ulpsactivenot,
    dl0_rxclkesc,
    dl0_rxlpdtesc,
    dl0_rxulpsesc,
    dl0_rxtriggeresc,
    dl0_rxdataesc,
    dl0_rxvalidesc,
    dl0_errsoths,
    dl0_errsotsynchs,
    dl0_erresc,
    dl0_errsyncesc,
    dl0_errcontrol,
    rx_dl1_en_hs_lpn,
    rx_dl1_disable_ibuf,
    rx_dl1_lp_dp,
    rx_dl1_lp_dn,
    rx_dl1_hs_dp,
    rx_dl1_fifo_empty,
    rx_dl1_fifo_rd_en,
    rx_dl1_fifo_rd_clk,
    dl1_rxdatahs,
    dl1_rxvalidhs,
    dl1_rxactivehs,
    dl1_rxskewcalhs,
    dl1_rxsynchs,
    dl1_forcerxmode,
    dl1_stopstate,
    dl1_enable,
    dl1_ulpsactivenot,
    dl1_rxclkesc,
    dl1_rxlpdtesc,
    dl1_rxulpsesc,
    dl1_rxtriggeresc,
    dl1_rxdataesc,
    dl1_rxvalidesc,
    dl1_errsoths,
    dl1_errsotsynchs,
    dl1_erresc,
    dl1_errsyncesc,
    dl1_errcontrol,
    rx_dl2_en_hs_lpn,
    rx_dl2_disable_ibuf,
    rx_dl2_lp_dp,
    rx_dl2_lp_dn,
    rx_dl2_hs_dp,
    rx_dl2_fifo_empty,
    rx_dl2_fifo_rd_en,
    rx_dl2_fifo_rd_clk,
    dl2_rxdatahs,
    dl2_rxvalidhs,
    dl2_rxactivehs,
    dl2_rxskewcalhs,
    dl2_rxsynchs,
    dl2_forcerxmode,
    dl2_stopstate,
    dl2_enable,
    dl2_ulpsactivenot,
    dl2_rxclkesc,
    dl2_rxlpdtesc,
    dl2_rxulpsesc,
    dl2_rxtriggeresc,
    dl2_rxdataesc,
    dl2_rxvalidesc,
    dl2_errsoths,
    dl2_errsotsynchs,
    dl2_erresc,
    dl2_errsyncesc,
    dl2_errcontrol,
    rx_dl3_en_hs_lpn,
    rx_dl3_disable_ibuf,
    rx_dl3_lp_dp,
    rx_dl3_lp_dn,
    rx_dl3_hs_dp,
    rx_dl3_fifo_empty,
    rx_dl3_fifo_rd_en,
    rx_dl3_fifo_rd_clk,
    dl3_rxdatahs,
    dl3_rxvalidhs,
    dl3_rxactivehs,
    dl3_rxskewcalhs,
    dl3_rxsynchs,
    dl3_forcerxmode,
    dl3_stopstate,
    dl3_enable,
    dl3_ulpsactivenot,
    dl3_rxclkesc,
    dl3_rxlpdtesc,
    dl3_rxulpsesc,
    dl3_rxtriggeresc,
    dl3_rxdataesc,
    dl3_rxvalidesc,
    dl3_errsoths,
    dl3_errsotsynchs,
    dl3_erresc,
    dl3_errsyncesc,
    dl3_errcontrol,
    rx_dl4_en_hs_lpn,
    rx_dl4_disable_ibuf,
    rx_dl4_lp_dp,
    rx_dl4_lp_dn,
    rx_dl4_hs_dp,
    rx_dl4_fifo_empty,
    rx_dl4_fifo_rd_en,
    rx_dl4_fifo_rd_clk,
    dl4_rxdatahs,
    dl4_rxvalidhs,
    dl4_rxactivehs,
    dl4_rxskewcalhs,
    dl4_rxsynchs,
    dl4_forcerxmode,
    dl4_stopstate,
    dl4_enable,
    dl4_ulpsactivenot,
    dl4_rxclkesc,
    dl4_rxlpdtesc,
    dl4_rxulpsesc,
    dl4_rxtriggeresc,
    dl4_rxdataesc,
    dl4_rxvalidesc,
    dl4_errsoths,
    dl4_errsotsynchs,
    dl4_erresc,
    dl4_errsyncesc,
    dl4_errcontrol,
    rx_dl5_en_hs_lpn,
    rx_dl5_disable_ibuf,
    rx_dl5_lp_dp,
    rx_dl5_lp_dn,
    rx_dl5_hs_dp,
    rx_dl5_fifo_empty,
    rx_dl5_fifo_rd_en,
    rx_dl5_fifo_rd_clk,
    dl5_rxdatahs,
    dl5_rxvalidhs,
    dl5_rxactivehs,
    dl5_rxskewcalhs,
    dl5_rxsynchs,
    dl5_forcerxmode,
    dl5_stopstate,
    dl5_enable,
    dl5_ulpsactivenot,
    dl5_rxclkesc,
    dl5_rxlpdtesc,
    dl5_rxulpsesc,
    dl5_rxtriggeresc,
    dl5_rxdataesc,
    dl5_rxvalidesc,
    dl5_errsoths,
    dl5_errsotsynchs,
    dl5_erresc,
    dl5_errsyncesc,
    dl5_errcontrol,
    rx_dl6_en_hs_lpn,
    rx_dl6_disable_ibuf,
    rx_dl6_lp_dp,
    rx_dl6_lp_dn,
    rx_dl6_hs_dp,
    rx_dl6_fifo_empty,
    rx_dl6_fifo_rd_en,
    rx_dl6_fifo_rd_clk,
    dl6_rxdatahs,
    dl6_rxvalidhs,
    dl6_rxactivehs,
    dl6_rxskewcalhs,
    dl6_rxsynchs,
    dl6_forcerxmode,
    dl6_stopstate,
    dl6_enable,
    dl6_ulpsactivenot,
    dl6_rxclkesc,
    dl6_rxlpdtesc,
    dl6_rxulpsesc,
    dl6_rxtriggeresc,
    dl6_rxdataesc,
    dl6_rxvalidesc,
    dl6_errsoths,
    dl6_errsotsynchs,
    dl6_erresc,
    dl6_errsyncesc,
    dl6_errcontrol,
    rx_dl7_en_hs_lpn,
    rx_dl7_disable_ibuf,
    rx_dl7_lp_dp,
    rx_dl7_lp_dn,
    rx_dl7_hs_dp,
    rx_dl7_fifo_empty,
    rx_dl7_fifo_rd_en,
    rx_dl7_fifo_rd_clk,
    dl7_rxdatahs,
    dl7_rxvalidhs,
    dl7_rxactivehs,
    dl7_rxskewcalhs,
    dl7_rxsynchs,
    dl7_forcerxmode,
    dl7_stopstate,
    dl7_enable,
    dl7_ulpsactivenot,
    dl7_rxclkesc,
    dl7_rxlpdtesc,
    dl7_rxulpsesc,
    dl7_rxtriggeresc,
    dl7_rxdataesc,
    dl7_rxvalidesc,
    dl7_errsoths,
    dl7_errsotsynchs,
    dl7_erresc,
    dl7_errsyncesc,
    dl7_errcontrol,
    cl_rxclkactivehs,
    cl_stopstate,
    cl_enable,
    cl_rxulpsclknot,
    cl_ulpsactivenot,
    rx_cl_en_hs_lpn,
    rx_cl_disable_ibuf,
    rx_cl_lp_dp,
    rx_cl_lp_dn,
    rx_cl_hs_dp,
    rx_cl_fifo_empty,
    rx_cl_fifo_rd_en,
    rx_cl_fifo_rd_clk,
    bit_slc_rst,
    riu_valid_l0,
    riu_rd_data_l0,
    riu_addr_l0,
    riu_wr_data_l0,
    riu_wr_en_l0,
    riu_nibble_sel_l0,
    calib_status_l0,
    riu_valid_l1,
    riu_rd_data_l1,
    riu_addr_l1,
    riu_wr_data_l1,
    riu_wr_en_l1,
    riu_nibble_sel_l1,
    calib_status_l1,
    riu_valid_l2,
    riu_rd_data_l2,
    riu_addr_l2,
    riu_wr_data_l2,
    riu_wr_en_l2,
    riu_nibble_sel_l2,
    calib_status_l2,
    riu_valid_l3,
    riu_rd_data_l3,
    riu_addr_l3,
    riu_wr_data_l3,
    riu_wr_en_l3,
    riu_nibble_sel_l3,
    calib_status_l3,
    s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awready,
    s_axi_awvalid,
    s_axi_araddr,
    s_axi_arready,
    s_axi_arvalid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wready,
    s_axi_wvalid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rready,
    s_axi_rvalid,
    s_axi_bresp,
    s_axi_bready,
    s_axi_bvalid);
  input rx_div4_clk;
  input clk_200m;
  input core_clk;
  input core_rst;
  output core_ref_clk;
  input system_rst_in;
  output dphy_srst_out;
  output dphy_en_out;
  input system_rst_phybyteclk_in;
  input system_rst_byteclk_in;
  output phy_rst;
  input phy_ready;
  output sys_rst_byteclk_out;
  output init_done;
  output [8:0]idelay_tap_value;
  output idelay_load;
  input idelay_ready;
  output [63:0]tap_val_dyn_out;
  output [7:0]tap_comp_res;
  input tap_comp_rst;
  input cal_pass;
  input cal_done;
  input dly_ctrl_rdy;
  input [4:0]idly_tap_val;
  output reg_cal_start;
  output rx_dl0_en_hs_lpn;
  output rx_dl0_disable_ibuf;
  input rx_dl0_lp_dp;
  input rx_dl0_lp_dn;
  input [7:0]rx_dl0_hs_dp;
  input rx_dl0_fifo_empty;
  output rx_dl0_fifo_rd_en;
  output rx_dl0_fifo_rd_clk;
  output [7:0]dl0_rxdatahs;
  output dl0_rxvalidhs;
  output dl0_rxactivehs;
  output dl0_rxskewcalhs;
  output dl0_rxsynchs;
  input dl0_forcerxmode;
  output dl0_stopstate;
  input dl0_enable;
  output dl0_ulpsactivenot;
  output dl0_rxclkesc;
  output dl0_rxlpdtesc;
  output dl0_rxulpsesc;
  output [3:0]dl0_rxtriggeresc;
  output [7:0]dl0_rxdataesc;
  output dl0_rxvalidesc;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output dl0_erresc;
  output dl0_errsyncesc;
  output dl0_errcontrol;
  output rx_dl1_en_hs_lpn;
  output rx_dl1_disable_ibuf;
  input rx_dl1_lp_dp;
  input rx_dl1_lp_dn;
  input [7:0]rx_dl1_hs_dp;
  input rx_dl1_fifo_empty;
  output rx_dl1_fifo_rd_en;
  output rx_dl1_fifo_rd_clk;
  output [7:0]dl1_rxdatahs;
  output dl1_rxvalidhs;
  output dl1_rxactivehs;
  output dl1_rxskewcalhs;
  output dl1_rxsynchs;
  input dl1_forcerxmode;
  output dl1_stopstate;
  input dl1_enable;
  output dl1_ulpsactivenot;
  output dl1_rxclkesc;
  output dl1_rxlpdtesc;
  output dl1_rxulpsesc;
  output [3:0]dl1_rxtriggeresc;
  output [7:0]dl1_rxdataesc;
  output dl1_rxvalidesc;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output dl1_erresc;
  output dl1_errsyncesc;
  output dl1_errcontrol;
  output rx_dl2_en_hs_lpn;
  output rx_dl2_disable_ibuf;
  input rx_dl2_lp_dp;
  input rx_dl2_lp_dn;
  input [7:0]rx_dl2_hs_dp;
  input rx_dl2_fifo_empty;
  output rx_dl2_fifo_rd_en;
  output rx_dl2_fifo_rd_clk;
  output [7:0]dl2_rxdatahs;
  output dl2_rxvalidhs;
  output dl2_rxactivehs;
  output dl2_rxskewcalhs;
  output dl2_rxsynchs;
  input dl2_forcerxmode;
  output dl2_stopstate;
  input dl2_enable;
  output dl2_ulpsactivenot;
  output dl2_rxclkesc;
  output dl2_rxlpdtesc;
  output dl2_rxulpsesc;
  output [3:0]dl2_rxtriggeresc;
  output [7:0]dl2_rxdataesc;
  output dl2_rxvalidesc;
  output dl2_errsoths;
  output dl2_errsotsynchs;
  output dl2_erresc;
  output dl2_errsyncesc;
  output dl2_errcontrol;
  output rx_dl3_en_hs_lpn;
  output rx_dl3_disable_ibuf;
  input rx_dl3_lp_dp;
  input rx_dl3_lp_dn;
  input [7:0]rx_dl3_hs_dp;
  input rx_dl3_fifo_empty;
  output rx_dl3_fifo_rd_en;
  output rx_dl3_fifo_rd_clk;
  output [7:0]dl3_rxdatahs;
  output dl3_rxvalidhs;
  output dl3_rxactivehs;
  output dl3_rxskewcalhs;
  output dl3_rxsynchs;
  input dl3_forcerxmode;
  output dl3_stopstate;
  input dl3_enable;
  output dl3_ulpsactivenot;
  output dl3_rxclkesc;
  output dl3_rxlpdtesc;
  output dl3_rxulpsesc;
  output [3:0]dl3_rxtriggeresc;
  output [7:0]dl3_rxdataesc;
  output dl3_rxvalidesc;
  output dl3_errsoths;
  output dl3_errsotsynchs;
  output dl3_erresc;
  output dl3_errsyncesc;
  output dl3_errcontrol;
  output rx_dl4_en_hs_lpn;
  output rx_dl4_disable_ibuf;
  input rx_dl4_lp_dp;
  input rx_dl4_lp_dn;
  input [7:0]rx_dl4_hs_dp;
  input rx_dl4_fifo_empty;
  output rx_dl4_fifo_rd_en;
  output rx_dl4_fifo_rd_clk;
  output [7:0]dl4_rxdatahs;
  output dl4_rxvalidhs;
  output dl4_rxactivehs;
  output dl4_rxskewcalhs;
  output dl4_rxsynchs;
  input dl4_forcerxmode;
  output dl4_stopstate;
  input dl4_enable;
  output dl4_ulpsactivenot;
  output dl4_rxclkesc;
  output dl4_rxlpdtesc;
  output dl4_rxulpsesc;
  output [3:0]dl4_rxtriggeresc;
  output [7:0]dl4_rxdataesc;
  output dl4_rxvalidesc;
  output dl4_errsoths;
  output dl4_errsotsynchs;
  output dl4_erresc;
  output dl4_errsyncesc;
  output dl4_errcontrol;
  output rx_dl5_en_hs_lpn;
  output rx_dl5_disable_ibuf;
  input rx_dl5_lp_dp;
  input rx_dl5_lp_dn;
  input [7:0]rx_dl5_hs_dp;
  input rx_dl5_fifo_empty;
  output rx_dl5_fifo_rd_en;
  output rx_dl5_fifo_rd_clk;
  output [7:0]dl5_rxdatahs;
  output dl5_rxvalidhs;
  output dl5_rxactivehs;
  output dl5_rxskewcalhs;
  output dl5_rxsynchs;
  input dl5_forcerxmode;
  output dl5_stopstate;
  input dl5_enable;
  output dl5_ulpsactivenot;
  output dl5_rxclkesc;
  output dl5_rxlpdtesc;
  output dl5_rxulpsesc;
  output [3:0]dl5_rxtriggeresc;
  output [7:0]dl5_rxdataesc;
  output dl5_rxvalidesc;
  output dl5_errsoths;
  output dl5_errsotsynchs;
  output dl5_erresc;
  output dl5_errsyncesc;
  output dl5_errcontrol;
  output rx_dl6_en_hs_lpn;
  output rx_dl6_disable_ibuf;
  input rx_dl6_lp_dp;
  input rx_dl6_lp_dn;
  input [7:0]rx_dl6_hs_dp;
  input rx_dl6_fifo_empty;
  output rx_dl6_fifo_rd_en;
  output rx_dl6_fifo_rd_clk;
  output [7:0]dl6_rxdatahs;
  output dl6_rxvalidhs;
  output dl6_rxactivehs;
  output dl6_rxskewcalhs;
  output dl6_rxsynchs;
  input dl6_forcerxmode;
  output dl6_stopstate;
  input dl6_enable;
  output dl6_ulpsactivenot;
  output dl6_rxclkesc;
  output dl6_rxlpdtesc;
  output dl6_rxulpsesc;
  output [3:0]dl6_rxtriggeresc;
  output [7:0]dl6_rxdataesc;
  output dl6_rxvalidesc;
  output dl6_errsoths;
  output dl6_errsotsynchs;
  output dl6_erresc;
  output dl6_errsyncesc;
  output dl6_errcontrol;
  output rx_dl7_en_hs_lpn;
  output rx_dl7_disable_ibuf;
  input rx_dl7_lp_dp;
  input rx_dl7_lp_dn;
  input [7:0]rx_dl7_hs_dp;
  input rx_dl7_fifo_empty;
  output rx_dl7_fifo_rd_en;
  output rx_dl7_fifo_rd_clk;
  output [7:0]dl7_rxdatahs;
  output dl7_rxvalidhs;
  output dl7_rxactivehs;
  output dl7_rxskewcalhs;
  output dl7_rxsynchs;
  input dl7_forcerxmode;
  output dl7_stopstate;
  input dl7_enable;
  output dl7_ulpsactivenot;
  output dl7_rxclkesc;
  output dl7_rxlpdtesc;
  output dl7_rxulpsesc;
  output [3:0]dl7_rxtriggeresc;
  output [7:0]dl7_rxdataesc;
  output dl7_rxvalidesc;
  output dl7_errsoths;
  output dl7_errsotsynchs;
  output dl7_erresc;
  output dl7_errsyncesc;
  output dl7_errcontrol;
  output cl_rxclkactivehs;
  output cl_stopstate;
  input cl_enable;
  output cl_rxulpsclknot;
  output cl_ulpsactivenot;
  output rx_cl_en_hs_lpn;
  output rx_cl_disable_ibuf;
  input rx_cl_lp_dp;
  input rx_cl_lp_dn;
  input [7:0]rx_cl_hs_dp;
  input rx_cl_fifo_empty;
  output rx_cl_fifo_rd_en;
  output rx_cl_fifo_rd_clk;
  output bit_slc_rst;
  input riu_valid_l0;
  input [15:0]riu_rd_data_l0;
  output [5:0]riu_addr_l0;
  output [15:0]riu_wr_data_l0;
  output riu_wr_en_l0;
  output riu_nibble_sel_l0;
  output calib_status_l0;
  input riu_valid_l1;
  input [15:0]riu_rd_data_l1;
  output [5:0]riu_addr_l1;
  output [15:0]riu_wr_data_l1;
  output riu_wr_en_l1;
  output riu_nibble_sel_l1;
  output calib_status_l1;
  input riu_valid_l2;
  input [15:0]riu_rd_data_l2;
  output [5:0]riu_addr_l2;
  output [15:0]riu_wr_data_l2;
  output riu_wr_en_l2;
  output riu_nibble_sel_l2;
  output calib_status_l2;
  input riu_valid_l3;
  input [15:0]riu_rd_data_l3;
  output [5:0]riu_addr_l3;
  output [15:0]riu_wr_data_l3;
  output riu_wr_en_l3;
  output riu_nibble_sel_l3;
  output calib_status_l3;
  input s_axi_aclk;
  input s_axi_aresetn;
  input [6:0]s_axi_awaddr;
  output s_axi_awready;
  input s_axi_awvalid;
  input [6:0]s_axi_araddr;
  output s_axi_arready;
  input s_axi_arvalid;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  output s_axi_wready;
  input s_axi_wvalid;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  input s_axi_rready;
  output s_axi_rvalid;
  output [1:0]s_axi_bresp;
  input s_axi_bready;
  output s_axi_bvalid;

  wire \<const0> ;
  wire cl_enable;
  wire cl_errcontrol;
  wire cl_init_done_div4clk_i;
  wire cl_rxclkactivehs;
  wire cl_rxulpsclknot;
  wire cl_stop_state;
  wire cl_stopstate;
  wire cl_ulps;
  wire cl_ulpsactivenot;
  wire clk_active_r;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire dl0_errsyncesc;
  wire dl0_forcerxmode;
  wire dl0_rxactivehs;
  wire dl0_rxclkesc;
  wire [7:0]dl0_rxdataesc;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxlpdtesc;
  wire dl0_rxsynchs;
  wire [3:0]dl0_rxtriggeresc;
  wire dl0_rxulpsesc;
  wire dl0_rxvalidesc;
  wire dl0_rxvalidhs;
  wire dl0_stopstate;
  wire dl0_ulpsactivenot;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire dl1_errsyncesc;
  wire dl1_forcerxmode;
  wire dl1_rxactivehs;
  wire dl1_rxclkesc;
  wire [7:0]dl1_rxdataesc;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxlpdtesc;
  wire dl1_rxsynchs;
  wire [3:0]dl1_rxtriggeresc;
  wire dl1_rxulpsesc;
  wire dl1_rxvalidesc;
  wire dl1_rxvalidhs;
  wire dl1_stopstate;
  wire dl1_ulpsactivenot;
  wire [1:1]dl_forcerxmode_out_i;
  wire dl_forcerxmode_t0;
  wire [15:0]dl_pkt_cnt_0;
  wire [15:0]dl_pkt_cnt_16;
  wire [13:0]dl_status_reg;
  wire dphy_en_out;
  wire dphy_srst_out;
  wire \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ;
  wire \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_1 ;
  wire \gen_rx_clk_lane.dphy_rx_clk_lane_n_11 ;
  wire \gen_rx_clk_lane.dphy_rx_clk_lane_n_12 ;
  wire \gen_rx_clk_lane.dphy_rx_clk_lane_n_3 ;
  wire \gen_rx_clk_lane.dphy_rx_clk_lane_n_5 ;
  wire \gen_rx_data_lane[0].rx_data_lane_inst_n_21 ;
  wire \gen_rx_data_lane[0].rx_data_lane_inst_n_43 ;
  wire \gen_rx_data_lane[0].rx_data_lane_inst_n_44 ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync ;
  wire \gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync_0 ;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_ln1_w;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [8:0]hs_settle_reg_w;
  wire init_done;
  wire init_done_div4clk_sync;
  (* MAX_FANOUT = "4" *) (* RTL_MAX_FANOUT = "found" *) wire [21:8]init_value_w;
  wire [3:2]lp_st_out;
  wire maxfrm_wait_done;
  wire maxfrm_wait_done_sync_i_i_1_n_0;
  wire [15:0]p_2_in;
  wire rx_cl_lp_dn;
  wire rx_cl_lp_dp;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire rx_dl0_lp_dn;
  wire rx_dl0_lp_dp;
  wire [7:0]rx_dl1_hs_dp;
  wire rx_dl1_lp_dn;
  wire rx_dl1_lp_dp;
  wire s_axi_aclk;
  wire [6:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [6:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire stopstate0;
  wire system_rst_byteclk_w;
  wire system_rst_in;
  wire system_rst_w;
  wire [0:0]\two_lane_hs_rx_timeout.hs_wait_count ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3 ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ;
  wire \two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ;
  wire u_rx_support_rst_logic_n_0;
  wire u_rx_support_rst_logic_n_2;
  wire NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED;
  wire NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED;
  wire [1:0]NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED;
  wire [3:3]\NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED ;

  assign bit_slc_rst = \<const0> ;
  assign calib_status_l0 = \<const0> ;
  assign calib_status_l1 = \<const0> ;
  assign calib_status_l2 = \<const0> ;
  assign calib_status_l3 = \<const0> ;
  assign core_ref_clk = \<const0> ;
  assign dl0_rxskewcalhs = \<const0> ;
  assign dl1_rxskewcalhs = \<const0> ;
  assign dl2_errcontrol = \<const0> ;
  assign dl2_erresc = \<const0> ;
  assign dl2_errsoths = \<const0> ;
  assign dl2_errsotsynchs = \<const0> ;
  assign dl2_errsyncesc = \<const0> ;
  assign dl2_rxactivehs = \<const0> ;
  assign dl2_rxclkesc = \<const0> ;
  assign dl2_rxdataesc[7] = \<const0> ;
  assign dl2_rxdataesc[6] = \<const0> ;
  assign dl2_rxdataesc[5] = \<const0> ;
  assign dl2_rxdataesc[4] = \<const0> ;
  assign dl2_rxdataesc[3] = \<const0> ;
  assign dl2_rxdataesc[2] = \<const0> ;
  assign dl2_rxdataesc[1] = \<const0> ;
  assign dl2_rxdataesc[0] = \<const0> ;
  assign dl2_rxdatahs[7] = \<const0> ;
  assign dl2_rxdatahs[6] = \<const0> ;
  assign dl2_rxdatahs[5] = \<const0> ;
  assign dl2_rxdatahs[4] = \<const0> ;
  assign dl2_rxdatahs[3] = \<const0> ;
  assign dl2_rxdatahs[2] = \<const0> ;
  assign dl2_rxdatahs[1] = \<const0> ;
  assign dl2_rxdatahs[0] = \<const0> ;
  assign dl2_rxlpdtesc = \<const0> ;
  assign dl2_rxskewcalhs = \<const0> ;
  assign dl2_rxsynchs = \<const0> ;
  assign dl2_rxtriggeresc[3] = \<const0> ;
  assign dl2_rxtriggeresc[2] = \<const0> ;
  assign dl2_rxtriggeresc[1] = \<const0> ;
  assign dl2_rxtriggeresc[0] = \<const0> ;
  assign dl2_rxulpsesc = \<const0> ;
  assign dl2_rxvalidesc = \<const0> ;
  assign dl2_rxvalidhs = \<const0> ;
  assign dl2_stopstate = \<const0> ;
  assign dl2_ulpsactivenot = \<const0> ;
  assign dl3_errcontrol = \<const0> ;
  assign dl3_erresc = \<const0> ;
  assign dl3_errsoths = \<const0> ;
  assign dl3_errsotsynchs = \<const0> ;
  assign dl3_errsyncesc = \<const0> ;
  assign dl3_rxactivehs = \<const0> ;
  assign dl3_rxclkesc = \<const0> ;
  assign dl3_rxdataesc[7] = \<const0> ;
  assign dl3_rxdataesc[6] = \<const0> ;
  assign dl3_rxdataesc[5] = \<const0> ;
  assign dl3_rxdataesc[4] = \<const0> ;
  assign dl3_rxdataesc[3] = \<const0> ;
  assign dl3_rxdataesc[2] = \<const0> ;
  assign dl3_rxdataesc[1] = \<const0> ;
  assign dl3_rxdataesc[0] = \<const0> ;
  assign dl3_rxdatahs[7] = \<const0> ;
  assign dl3_rxdatahs[6] = \<const0> ;
  assign dl3_rxdatahs[5] = \<const0> ;
  assign dl3_rxdatahs[4] = \<const0> ;
  assign dl3_rxdatahs[3] = \<const0> ;
  assign dl3_rxdatahs[2] = \<const0> ;
  assign dl3_rxdatahs[1] = \<const0> ;
  assign dl3_rxdatahs[0] = \<const0> ;
  assign dl3_rxlpdtesc = \<const0> ;
  assign dl3_rxskewcalhs = \<const0> ;
  assign dl3_rxsynchs = \<const0> ;
  assign dl3_rxtriggeresc[3] = \<const0> ;
  assign dl3_rxtriggeresc[2] = \<const0> ;
  assign dl3_rxtriggeresc[1] = \<const0> ;
  assign dl3_rxtriggeresc[0] = \<const0> ;
  assign dl3_rxulpsesc = \<const0> ;
  assign dl3_rxvalidesc = \<const0> ;
  assign dl3_rxvalidhs = \<const0> ;
  assign dl3_stopstate = \<const0> ;
  assign dl3_ulpsactivenot = \<const0> ;
  assign dl4_errcontrol = \<const0> ;
  assign dl4_erresc = \<const0> ;
  assign dl4_errsoths = \<const0> ;
  assign dl4_errsotsynchs = \<const0> ;
  assign dl4_errsyncesc = \<const0> ;
  assign dl4_rxactivehs = \<const0> ;
  assign dl4_rxclkesc = \<const0> ;
  assign dl4_rxdataesc[7] = \<const0> ;
  assign dl4_rxdataesc[6] = \<const0> ;
  assign dl4_rxdataesc[5] = \<const0> ;
  assign dl4_rxdataesc[4] = \<const0> ;
  assign dl4_rxdataesc[3] = \<const0> ;
  assign dl4_rxdataesc[2] = \<const0> ;
  assign dl4_rxdataesc[1] = \<const0> ;
  assign dl4_rxdataesc[0] = \<const0> ;
  assign dl4_rxdatahs[7] = \<const0> ;
  assign dl4_rxdatahs[6] = \<const0> ;
  assign dl4_rxdatahs[5] = \<const0> ;
  assign dl4_rxdatahs[4] = \<const0> ;
  assign dl4_rxdatahs[3] = \<const0> ;
  assign dl4_rxdatahs[2] = \<const0> ;
  assign dl4_rxdatahs[1] = \<const0> ;
  assign dl4_rxdatahs[0] = \<const0> ;
  assign dl4_rxlpdtesc = \<const0> ;
  assign dl4_rxskewcalhs = \<const0> ;
  assign dl4_rxsynchs = \<const0> ;
  assign dl4_rxtriggeresc[3] = \<const0> ;
  assign dl4_rxtriggeresc[2] = \<const0> ;
  assign dl4_rxtriggeresc[1] = \<const0> ;
  assign dl4_rxtriggeresc[0] = \<const0> ;
  assign dl4_rxulpsesc = \<const0> ;
  assign dl4_rxvalidesc = \<const0> ;
  assign dl4_rxvalidhs = \<const0> ;
  assign dl4_stopstate = \<const0> ;
  assign dl4_ulpsactivenot = \<const0> ;
  assign dl5_errcontrol = \<const0> ;
  assign dl5_erresc = \<const0> ;
  assign dl5_errsoths = \<const0> ;
  assign dl5_errsotsynchs = \<const0> ;
  assign dl5_errsyncesc = \<const0> ;
  assign dl5_rxactivehs = \<const0> ;
  assign dl5_rxclkesc = \<const0> ;
  assign dl5_rxdataesc[7] = \<const0> ;
  assign dl5_rxdataesc[6] = \<const0> ;
  assign dl5_rxdataesc[5] = \<const0> ;
  assign dl5_rxdataesc[4] = \<const0> ;
  assign dl5_rxdataesc[3] = \<const0> ;
  assign dl5_rxdataesc[2] = \<const0> ;
  assign dl5_rxdataesc[1] = \<const0> ;
  assign dl5_rxdataesc[0] = \<const0> ;
  assign dl5_rxdatahs[7] = \<const0> ;
  assign dl5_rxdatahs[6] = \<const0> ;
  assign dl5_rxdatahs[5] = \<const0> ;
  assign dl5_rxdatahs[4] = \<const0> ;
  assign dl5_rxdatahs[3] = \<const0> ;
  assign dl5_rxdatahs[2] = \<const0> ;
  assign dl5_rxdatahs[1] = \<const0> ;
  assign dl5_rxdatahs[0] = \<const0> ;
  assign dl5_rxlpdtesc = \<const0> ;
  assign dl5_rxskewcalhs = \<const0> ;
  assign dl5_rxsynchs = \<const0> ;
  assign dl5_rxtriggeresc[3] = \<const0> ;
  assign dl5_rxtriggeresc[2] = \<const0> ;
  assign dl5_rxtriggeresc[1] = \<const0> ;
  assign dl5_rxtriggeresc[0] = \<const0> ;
  assign dl5_rxulpsesc = \<const0> ;
  assign dl5_rxvalidesc = \<const0> ;
  assign dl5_rxvalidhs = \<const0> ;
  assign dl5_stopstate = \<const0> ;
  assign dl5_ulpsactivenot = \<const0> ;
  assign dl6_errcontrol = \<const0> ;
  assign dl6_erresc = \<const0> ;
  assign dl6_errsoths = \<const0> ;
  assign dl6_errsotsynchs = \<const0> ;
  assign dl6_errsyncesc = \<const0> ;
  assign dl6_rxactivehs = \<const0> ;
  assign dl6_rxclkesc = \<const0> ;
  assign dl6_rxdataesc[7] = \<const0> ;
  assign dl6_rxdataesc[6] = \<const0> ;
  assign dl6_rxdataesc[5] = \<const0> ;
  assign dl6_rxdataesc[4] = \<const0> ;
  assign dl6_rxdataesc[3] = \<const0> ;
  assign dl6_rxdataesc[2] = \<const0> ;
  assign dl6_rxdataesc[1] = \<const0> ;
  assign dl6_rxdataesc[0] = \<const0> ;
  assign dl6_rxdatahs[7] = \<const0> ;
  assign dl6_rxdatahs[6] = \<const0> ;
  assign dl6_rxdatahs[5] = \<const0> ;
  assign dl6_rxdatahs[4] = \<const0> ;
  assign dl6_rxdatahs[3] = \<const0> ;
  assign dl6_rxdatahs[2] = \<const0> ;
  assign dl6_rxdatahs[1] = \<const0> ;
  assign dl6_rxdatahs[0] = \<const0> ;
  assign dl6_rxlpdtesc = \<const0> ;
  assign dl6_rxskewcalhs = \<const0> ;
  assign dl6_rxsynchs = \<const0> ;
  assign dl6_rxtriggeresc[3] = \<const0> ;
  assign dl6_rxtriggeresc[2] = \<const0> ;
  assign dl6_rxtriggeresc[1] = \<const0> ;
  assign dl6_rxtriggeresc[0] = \<const0> ;
  assign dl6_rxulpsesc = \<const0> ;
  assign dl6_rxvalidesc = \<const0> ;
  assign dl6_rxvalidhs = \<const0> ;
  assign dl6_stopstate = \<const0> ;
  assign dl6_ulpsactivenot = \<const0> ;
  assign dl7_errcontrol = \<const0> ;
  assign dl7_erresc = \<const0> ;
  assign dl7_errsoths = \<const0> ;
  assign dl7_errsotsynchs = \<const0> ;
  assign dl7_errsyncesc = \<const0> ;
  assign dl7_rxactivehs = \<const0> ;
  assign dl7_rxclkesc = \<const0> ;
  assign dl7_rxdataesc[7] = \<const0> ;
  assign dl7_rxdataesc[6] = \<const0> ;
  assign dl7_rxdataesc[5] = \<const0> ;
  assign dl7_rxdataesc[4] = \<const0> ;
  assign dl7_rxdataesc[3] = \<const0> ;
  assign dl7_rxdataesc[2] = \<const0> ;
  assign dl7_rxdataesc[1] = \<const0> ;
  assign dl7_rxdataesc[0] = \<const0> ;
  assign dl7_rxdatahs[7] = \<const0> ;
  assign dl7_rxdatahs[6] = \<const0> ;
  assign dl7_rxdatahs[5] = \<const0> ;
  assign dl7_rxdatahs[4] = \<const0> ;
  assign dl7_rxdatahs[3] = \<const0> ;
  assign dl7_rxdatahs[2] = \<const0> ;
  assign dl7_rxdatahs[1] = \<const0> ;
  assign dl7_rxdatahs[0] = \<const0> ;
  assign dl7_rxlpdtesc = \<const0> ;
  assign dl7_rxskewcalhs = \<const0> ;
  assign dl7_rxsynchs = \<const0> ;
  assign dl7_rxtriggeresc[3] = \<const0> ;
  assign dl7_rxtriggeresc[2] = \<const0> ;
  assign dl7_rxtriggeresc[1] = \<const0> ;
  assign dl7_rxtriggeresc[0] = \<const0> ;
  assign dl7_rxulpsesc = \<const0> ;
  assign dl7_rxvalidesc = \<const0> ;
  assign dl7_rxvalidhs = \<const0> ;
  assign dl7_stopstate = \<const0> ;
  assign dl7_ulpsactivenot = \<const0> ;
  assign idelay_load = \<const0> ;
  assign idelay_tap_value[8] = \<const0> ;
  assign idelay_tap_value[7] = \<const0> ;
  assign idelay_tap_value[6] = \<const0> ;
  assign idelay_tap_value[5] = \<const0> ;
  assign idelay_tap_value[4] = \<const0> ;
  assign idelay_tap_value[3] = \<const0> ;
  assign idelay_tap_value[2] = \<const0> ;
  assign idelay_tap_value[1] = \<const0> ;
  assign idelay_tap_value[0] = \<const0> ;
  assign phy_rst = \<const0> ;
  assign reg_cal_start = \<const0> ;
  assign riu_addr_l0[5] = \<const0> ;
  assign riu_addr_l0[4] = \<const0> ;
  assign riu_addr_l0[3] = \<const0> ;
  assign riu_addr_l0[2] = \<const0> ;
  assign riu_addr_l0[1] = \<const0> ;
  assign riu_addr_l0[0] = \<const0> ;
  assign riu_addr_l1[5] = \<const0> ;
  assign riu_addr_l1[4] = \<const0> ;
  assign riu_addr_l1[3] = \<const0> ;
  assign riu_addr_l1[2] = \<const0> ;
  assign riu_addr_l1[1] = \<const0> ;
  assign riu_addr_l1[0] = \<const0> ;
  assign riu_addr_l2[5] = \<const0> ;
  assign riu_addr_l2[4] = \<const0> ;
  assign riu_addr_l2[3] = \<const0> ;
  assign riu_addr_l2[2] = \<const0> ;
  assign riu_addr_l2[1] = \<const0> ;
  assign riu_addr_l2[0] = \<const0> ;
  assign riu_addr_l3[5] = \<const0> ;
  assign riu_addr_l3[4] = \<const0> ;
  assign riu_addr_l3[3] = \<const0> ;
  assign riu_addr_l3[2] = \<const0> ;
  assign riu_addr_l3[1] = \<const0> ;
  assign riu_addr_l3[0] = \<const0> ;
  assign riu_nibble_sel_l0 = \<const0> ;
  assign riu_nibble_sel_l1 = \<const0> ;
  assign riu_nibble_sel_l2 = \<const0> ;
  assign riu_nibble_sel_l3 = \<const0> ;
  assign riu_wr_data_l0[15] = \<const0> ;
  assign riu_wr_data_l0[14] = \<const0> ;
  assign riu_wr_data_l0[13] = \<const0> ;
  assign riu_wr_data_l0[12] = \<const0> ;
  assign riu_wr_data_l0[11] = \<const0> ;
  assign riu_wr_data_l0[10] = \<const0> ;
  assign riu_wr_data_l0[9] = \<const0> ;
  assign riu_wr_data_l0[8] = \<const0> ;
  assign riu_wr_data_l0[7] = \<const0> ;
  assign riu_wr_data_l0[6] = \<const0> ;
  assign riu_wr_data_l0[5] = \<const0> ;
  assign riu_wr_data_l0[4] = \<const0> ;
  assign riu_wr_data_l0[3] = \<const0> ;
  assign riu_wr_data_l0[2] = \<const0> ;
  assign riu_wr_data_l0[1] = \<const0> ;
  assign riu_wr_data_l0[0] = \<const0> ;
  assign riu_wr_data_l1[15] = \<const0> ;
  assign riu_wr_data_l1[14] = \<const0> ;
  assign riu_wr_data_l1[13] = \<const0> ;
  assign riu_wr_data_l1[12] = \<const0> ;
  assign riu_wr_data_l1[11] = \<const0> ;
  assign riu_wr_data_l1[10] = \<const0> ;
  assign riu_wr_data_l1[9] = \<const0> ;
  assign riu_wr_data_l1[8] = \<const0> ;
  assign riu_wr_data_l1[7] = \<const0> ;
  assign riu_wr_data_l1[6] = \<const0> ;
  assign riu_wr_data_l1[5] = \<const0> ;
  assign riu_wr_data_l1[4] = \<const0> ;
  assign riu_wr_data_l1[3] = \<const0> ;
  assign riu_wr_data_l1[2] = \<const0> ;
  assign riu_wr_data_l1[1] = \<const0> ;
  assign riu_wr_data_l1[0] = \<const0> ;
  assign riu_wr_data_l2[15] = \<const0> ;
  assign riu_wr_data_l2[14] = \<const0> ;
  assign riu_wr_data_l2[13] = \<const0> ;
  assign riu_wr_data_l2[12] = \<const0> ;
  assign riu_wr_data_l2[11] = \<const0> ;
  assign riu_wr_data_l2[10] = \<const0> ;
  assign riu_wr_data_l2[9] = \<const0> ;
  assign riu_wr_data_l2[8] = \<const0> ;
  assign riu_wr_data_l2[7] = \<const0> ;
  assign riu_wr_data_l2[6] = \<const0> ;
  assign riu_wr_data_l2[5] = \<const0> ;
  assign riu_wr_data_l2[4] = \<const0> ;
  assign riu_wr_data_l2[3] = \<const0> ;
  assign riu_wr_data_l2[2] = \<const0> ;
  assign riu_wr_data_l2[1] = \<const0> ;
  assign riu_wr_data_l2[0] = \<const0> ;
  assign riu_wr_data_l3[15] = \<const0> ;
  assign riu_wr_data_l3[14] = \<const0> ;
  assign riu_wr_data_l3[13] = \<const0> ;
  assign riu_wr_data_l3[12] = \<const0> ;
  assign riu_wr_data_l3[11] = \<const0> ;
  assign riu_wr_data_l3[10] = \<const0> ;
  assign riu_wr_data_l3[9] = \<const0> ;
  assign riu_wr_data_l3[8] = \<const0> ;
  assign riu_wr_data_l3[7] = \<const0> ;
  assign riu_wr_data_l3[6] = \<const0> ;
  assign riu_wr_data_l3[5] = \<const0> ;
  assign riu_wr_data_l3[4] = \<const0> ;
  assign riu_wr_data_l3[3] = \<const0> ;
  assign riu_wr_data_l3[2] = \<const0> ;
  assign riu_wr_data_l3[1] = \<const0> ;
  assign riu_wr_data_l3[0] = \<const0> ;
  assign riu_wr_en_l0 = \<const0> ;
  assign riu_wr_en_l1 = \<const0> ;
  assign riu_wr_en_l2 = \<const0> ;
  assign riu_wr_en_l3 = \<const0> ;
  assign rx_cl_disable_ibuf = \<const0> ;
  assign rx_cl_en_hs_lpn = \<const0> ;
  assign rx_cl_fifo_rd_clk = \<const0> ;
  assign rx_cl_fifo_rd_en = \<const0> ;
  assign rx_dl0_disable_ibuf = \<const0> ;
  assign rx_dl0_en_hs_lpn = \<const0> ;
  assign rx_dl0_fifo_rd_clk = \<const0> ;
  assign rx_dl0_fifo_rd_en = \<const0> ;
  assign rx_dl1_disable_ibuf = \<const0> ;
  assign rx_dl1_en_hs_lpn = \<const0> ;
  assign rx_dl1_fifo_rd_clk = \<const0> ;
  assign rx_dl1_fifo_rd_en = \<const0> ;
  assign rx_dl2_disable_ibuf = \<const0> ;
  assign rx_dl2_en_hs_lpn = \<const0> ;
  assign rx_dl2_fifo_rd_clk = \<const0> ;
  assign rx_dl2_fifo_rd_en = \<const0> ;
  assign rx_dl3_disable_ibuf = \<const0> ;
  assign rx_dl3_en_hs_lpn = \<const0> ;
  assign rx_dl3_fifo_rd_clk = \<const0> ;
  assign rx_dl3_fifo_rd_en = \<const0> ;
  assign rx_dl4_disable_ibuf = \<const0> ;
  assign rx_dl4_en_hs_lpn = \<const0> ;
  assign rx_dl4_fifo_rd_clk = \<const0> ;
  assign rx_dl4_fifo_rd_en = \<const0> ;
  assign rx_dl5_disable_ibuf = \<const0> ;
  assign rx_dl5_en_hs_lpn = \<const0> ;
  assign rx_dl5_fifo_rd_clk = \<const0> ;
  assign rx_dl5_fifo_rd_en = \<const0> ;
  assign rx_dl6_disable_ibuf = \<const0> ;
  assign rx_dl6_en_hs_lpn = \<const0> ;
  assign rx_dl6_fifo_rd_clk = \<const0> ;
  assign rx_dl6_fifo_rd_en = \<const0> ;
  assign rx_dl7_disable_ibuf = \<const0> ;
  assign rx_dl7_en_hs_lpn = \<const0> ;
  assign rx_dl7_fifo_rd_clk = \<const0> ;
  assign rx_dl7_fifo_rd_en = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign sys_rst_byteclk_out = \<const0> ;
  assign tap_comp_res[7] = \<const0> ;
  assign tap_comp_res[6] = \<const0> ;
  assign tap_comp_res[5] = \<const0> ;
  assign tap_comp_res[4] = \<const0> ;
  assign tap_comp_res[3] = \<const0> ;
  assign tap_comp_res[2] = \<const0> ;
  assign tap_comp_res[1] = \<const0> ;
  assign tap_comp_res[0] = \<const0> ;
  assign tap_val_dyn_out[63] = \<const0> ;
  assign tap_val_dyn_out[62] = \<const0> ;
  assign tap_val_dyn_out[61] = \<const0> ;
  assign tap_val_dyn_out[60] = \<const0> ;
  assign tap_val_dyn_out[59] = \<const0> ;
  assign tap_val_dyn_out[58] = \<const0> ;
  assign tap_val_dyn_out[57] = \<const0> ;
  assign tap_val_dyn_out[56] = \<const0> ;
  assign tap_val_dyn_out[55] = \<const0> ;
  assign tap_val_dyn_out[54] = \<const0> ;
  assign tap_val_dyn_out[53] = \<const0> ;
  assign tap_val_dyn_out[52] = \<const0> ;
  assign tap_val_dyn_out[51] = \<const0> ;
  assign tap_val_dyn_out[50] = \<const0> ;
  assign tap_val_dyn_out[49] = \<const0> ;
  assign tap_val_dyn_out[48] = \<const0> ;
  assign tap_val_dyn_out[47] = \<const0> ;
  assign tap_val_dyn_out[46] = \<const0> ;
  assign tap_val_dyn_out[45] = \<const0> ;
  assign tap_val_dyn_out[44] = \<const0> ;
  assign tap_val_dyn_out[43] = \<const0> ;
  assign tap_val_dyn_out[42] = \<const0> ;
  assign tap_val_dyn_out[41] = \<const0> ;
  assign tap_val_dyn_out[40] = \<const0> ;
  assign tap_val_dyn_out[39] = \<const0> ;
  assign tap_val_dyn_out[38] = \<const0> ;
  assign tap_val_dyn_out[37] = \<const0> ;
  assign tap_val_dyn_out[36] = \<const0> ;
  assign tap_val_dyn_out[35] = \<const0> ;
  assign tap_val_dyn_out[34] = \<const0> ;
  assign tap_val_dyn_out[33] = \<const0> ;
  assign tap_val_dyn_out[32] = \<const0> ;
  assign tap_val_dyn_out[31] = \<const0> ;
  assign tap_val_dyn_out[30] = \<const0> ;
  assign tap_val_dyn_out[29] = \<const0> ;
  assign tap_val_dyn_out[28] = \<const0> ;
  assign tap_val_dyn_out[27] = \<const0> ;
  assign tap_val_dyn_out[26] = \<const0> ;
  assign tap_val_dyn_out[25] = \<const0> ;
  assign tap_val_dyn_out[24] = \<const0> ;
  assign tap_val_dyn_out[23] = \<const0> ;
  assign tap_val_dyn_out[22] = \<const0> ;
  assign tap_val_dyn_out[21] = \<const0> ;
  assign tap_val_dyn_out[20] = \<const0> ;
  assign tap_val_dyn_out[19] = \<const0> ;
  assign tap_val_dyn_out[18] = \<const0> ;
  assign tap_val_dyn_out[17] = \<const0> ;
  assign tap_val_dyn_out[16] = \<const0> ;
  assign tap_val_dyn_out[15] = \<const0> ;
  assign tap_val_dyn_out[14] = \<const0> ;
  assign tap_val_dyn_out[13] = \<const0> ;
  assign tap_val_dyn_out[12] = \<const0> ;
  assign tap_val_dyn_out[11] = \<const0> ;
  assign tap_val_dyn_out[10] = \<const0> ;
  assign tap_val_dyn_out[9] = \<const0> ;
  assign tap_val_dyn_out[8] = \<const0> ;
  assign tap_val_dyn_out[7] = \<const0> ;
  assign tap_val_dyn_out[6] = \<const0> ;
  assign tap_val_dyn_out[5] = \<const0> ;
  assign tap_val_dyn_out[4] = \<const0> ;
  assign tap_val_dyn_out[3] = \<const0> ;
  assign tap_val_dyn_out[2] = \<const0> ;
  assign tap_val_dyn_out[1] = \<const0> ;
  assign tap_val_dyn_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0 cl_enable_sync_fab_top_i
       (.cl_enable(cl_enable),
        .core_clk(core_clk));
  FDCE clk_active_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .CLR(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .D(1'b1),
        .Q(clk_active_r));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_1 clk_active_r_sync
       (.clk_active_r(clk_active_r),
        .core_clk(core_clk));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__parameterized0_2 \en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i 
       (.fifo_rd_reset(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .rx_div4_clk(rx_div4_clk),
        .system_rst_byteclk(system_rst_byteclk_w));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_dphy_reg \gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst 
       (.D(hs_settle_reg_w),
        .axi_bvalid_reg_0(s_axi_bvalid),
        .axi_rvalid(s_axi_rvalid),
        .cl_errcontrol(cl_errcontrol),
        .cl_mode(\gen_rx_clk_lane.dphy_rx_clk_lane_n_5 ),
        .cl_status_reg({cl_stop_state,cl_ulps,\gen_rx_clk_lane.dphy_rx_clk_lane_n_3 }),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_status_reg({dl_status_reg[13],dl_status_reg[11],dl_status_reg[9:6],dl_status_reg[4],dl_status_reg[2:0]}),
        .out({dphy_en_out,dphy_srst_out}),
        .pkt_cnt(dl_pkt_cnt_0),
        .rx_div4_clk(rx_div4_clk),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr[6:2]),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr[6:2]),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .\s_level_out_bus_d1_cdc_to_reg[15] (dl_pkt_cnt_16),
        .\s_level_out_bus_d3_reg[1] (\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_1 ),
        .\s_level_out_bus_d3_reg[21] (init_value_w),
        .\s_level_out_bus_d3_reg[8] (hs_settle_reg_ln1_w),
        .s_level_out_d1_cdc_to_reg(init_done),
        .system_rst(system_rst_w));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_clk_lane \gen_rx_clk_lane.dphy_rx_clk_lane 
       (.D({\gen_rx_data_lane[0].rx_data_lane_inst_n_43 ,\gen_rx_data_lane[0].rx_data_lane_inst_n_44 }),
        .cl_enable(cl_enable),
        .cl_errcontrol(cl_errcontrol),
        .cl_mode(\gen_rx_clk_lane.dphy_rx_clk_lane_n_5 ),
        .\cl_rx_state_reg[0]_0 (dphy_en_out),
        .\cl_rx_state_reg[3]_0 (\gen_regs.gen_regs_wo_debug_wo_timeout.rx_reg_inst_n_1 ),
        .cl_rxclkactivehs_reg_0(cl_rxclkactivehs),
        .cl_rxulpsclknot(cl_rxulpsclknot),
        .cl_status_reg({cl_stop_state,cl_ulps,\gen_rx_clk_lane.dphy_rx_clk_lane_n_3 }),
        .cl_stopstate(cl_stopstate),
        .cl_ulpsactivenot(cl_ulpsactivenot),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl_forcerxmode_t0(dl_forcerxmode_t0),
        .dl_status_reg_bit_0_reg(\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync ),
        .dl_status_reg_bit_0_reg_0(\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync_0 ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 (init_done),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_1 (\gen_rx_clk_lane.dphy_rx_clk_lane_n_11 ),
        .\en_cl_init_to_blk.cl_init_done_coreclk_reg_2 (\gen_rx_clk_lane.dphy_rx_clk_lane_n_12 ),
        .\en_init_to_reg.init_to_r_2_reg[13]_0 (init_value_w),
        .out(cl_init_done_div4clk_i),
        .rx_cl_lp_dn(rx_cl_lp_dn),
        .rx_cl_lp_dp(rx_cl_lp_dp),
        .system_rst(system_rst_w));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane \gen_rx_data_lane[0].rx_data_lane_inst 
       (.D(hs_settle_reg_w),
        .\FSM_sequential_dl_rx_state_reg[1] (u_rx_support_rst_logic_n_0),
        .Q(lp_st_out),
        .SR(\two_lane_hs_rx_timeout.hs_wait_count ),
        .align_done_reg(dl0_rxactivehs),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl0_enable(dl0_enable),
        .dl0_errcontrol(dl0_errcontrol),
        .dl0_erresc(dl0_erresc),
        .dl0_errsoths(dl0_errsoths),
        .dl0_errsotsynchs(dl0_errsotsynchs),
        .dl0_errsyncesc(dl0_errsyncesc),
        .dl0_forcerxmode(dl0_forcerxmode),
        .dl0_rxclkesc(dl0_rxclkesc),
        .dl0_rxdataesc(dl0_rxdataesc),
        .dl0_rxdatahs(dl0_rxdatahs),
        .dl0_rxsynchs(dl0_rxsynchs),
        .dl0_rxtriggeresc(dl0_rxtriggeresc),
        .dl0_rxvalidesc(dl0_rxvalidesc),
        .dl0_stopstate(dl0_stopstate),
        .dl0_ulpsactivenot(dl0_ulpsactivenot),
        .dl_forcerxmode_out(dl_forcerxmode_out_i),
        .dl_forcerxmode_t0(dl_forcerxmode_t0),
        .dl_rxlpdtesc_reg(dl0_rxlpdtesc),
        .dl_rxulpsesc_reg(dl0_rxulpsesc),
        .dl_status_reg({dl_status_reg[6],dl_status_reg[4],dl_status_reg[2:0]}),
        .dl_status_reg_bit_0_reg(\gen_rx_clk_lane.dphy_rx_clk_lane_n_11 ),
        .dl_status_reg_bit_4_reg(cl_rxclkactivehs),
        .fifo_rd_reset(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .hs_dvalid_reg(dl0_rxvalidhs),
        .\lp_st_out_reg[1] ({\gen_rx_data_lane[0].rx_data_lane_inst_n_43 ,\gen_rx_data_lane[0].rx_data_lane_inst_n_44 }),
        .\lpdt_data_r_reg[0] (init_done),
        .out(\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync ),
        .pkt_cnt(dl_pkt_cnt_0),
        .prmry_in(maxfrm_wait_done),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl0_hs_dp(rx_dl0_hs_dp),
        .rx_dl0_lp_dn(rx_dl0_lp_dn),
        .rx_dl0_lp_dp(rx_dl0_lp_dp),
        .s_level_out_d3_reg(\gen_rx_data_lane[0].rx_data_lane_inst_n_21 ),
        .stopstate0(stopstate0),
        .system_rst(system_rst_w),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg (init_done_div4clk_sync),
        .\two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 (\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_data_lane_3 \gen_rx_data_lane[1].rx_data_lane_inst 
       (.D(hs_settle_reg_ln1_w),
        .\FSM_sequential_dl_rx_state_reg[1] (u_rx_support_rst_logic_n_2),
        .Q(lp_st_out),
        .align_done_reg(dl1_rxactivehs),
        .core_clk(core_clk),
        .core_rst(core_rst),
        .dl1_enable(dl1_enable),
        .dl1_errcontrol(dl1_errcontrol),
        .dl1_erresc(dl1_erresc),
        .dl1_errsoths(dl1_errsoths),
        .dl1_errsotsynchs(dl1_errsotsynchs),
        .dl1_errsyncesc(dl1_errsyncesc),
        .dl1_forcerxmode(dl1_forcerxmode),
        .dl1_rxclkesc(dl1_rxclkesc),
        .dl1_rxdataesc(dl1_rxdataesc),
        .dl1_rxdatahs(dl1_rxdatahs),
        .dl1_rxsynchs(dl1_rxsynchs),
        .dl1_rxtriggeresc(dl1_rxtriggeresc),
        .dl1_rxvalidesc(dl1_rxvalidesc),
        .dl1_rxvalidhs(dl1_rxvalidhs),
        .dl1_stopstate(dl1_stopstate),
        .dl1_ulpsactivenot(dl1_ulpsactivenot),
        .dl_rxlpdtesc_reg(dl1_rxlpdtesc),
        .dl_rxulpsesc_reg(dl1_rxulpsesc),
        .dl_status_reg({dl_status_reg[13],dl_status_reg[11],dl_status_reg[9:7]}),
        .dl_status_reg_bit_0_reg(\gen_rx_clk_lane.dphy_rx_clk_lane_n_12 ),
        .dl_status_reg_bit_4_reg(cl_rxclkactivehs),
        .fifo_rd_reset(\en_rx_rst_sync_initval.u_sys_rst_byteclk_sync_i_n_0 ),
        .\lpdt_data_r_reg[0] (init_done),
        .out(\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync_0 ),
        .pkt_cnt(dl_pkt_cnt_16),
        .rx_div4_clk(rx_div4_clk),
        .rx_dl1_hs_dp(rx_dl1_hs_dp),
        .rx_dl1_lp_dn(rx_dl1_lp_dn),
        .rx_dl1_lp_dp(rx_dl1_lp_dp),
        .s_level_out_d2_reg(dl_forcerxmode_out_i),
        .stopstate0(stopstate0),
        .system_rst(system_rst_w));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized9 init_done_div4clk_sync_i
       (.out(cl_init_done_div4clk_i),
        .rx_div4_clk(rx_div4_clk),
        .s_level_out_d3_reg_0(init_done_div4clk_sync));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell maxfrm_wait_done_sync_i
       (.prmry_ack(NLW_maxfrm_wait_done_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(maxfrm_wait_done),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(NLW_maxfrm_wait_done_sync_i_scndry_out_UNCONNECTED),
        .scndry_rst_n(maxfrm_wait_done_sync_i_i_1_n_0),
        .scndry_vect_out(NLW_maxfrm_wait_done_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT1 #(
    .INIT(2'h1)) 
    maxfrm_wait_done_sync_i_i_1
       (.I0(core_rst),
        .O(maxfrm_wait_done_sync_i_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_2 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_4 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ),
        .I4(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ),
        .I5(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_5 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFF7FFFF)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_6 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ),
        .I4(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_7 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ),
        .I1(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ),
        .I2(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ),
        .I3(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \two_lane_hs_rx_timeout.hs_wait_count[3]_i_2 
       (.I0(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .O(\two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[0] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[0]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[10] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[10]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[11] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[11]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[11:8]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[11] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[10] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[12] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[12]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[13] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[13]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[14] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[14]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[15] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[15]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[11]_i_1_n_0 ),
        .CO({\NLW_two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_CO_UNCONNECTED [3],\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[15]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[15:12]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[15] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[14] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[13] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[12] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[1] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[1]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[2] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[2]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[3] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[3]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[0] }),
        .O(p_2_in[3:0]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[3] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[2] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[1] ,\two_lane_hs_rx_timeout.hs_wait_count[3]_i_2_n_0 }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[4] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[4]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[5] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[5]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[6] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[6]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[7] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[7]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  CARRY4 \two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1 
       (.CI(\two_lane_hs_rx_timeout.hs_wait_count_reg[3]_i_1_n_0 ),
        .CO({\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_0 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_1 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_2 ,\two_lane_hs_rx_timeout.hs_wait_count_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_2_in[7:4]),
        .S({\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[7] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[6] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[5] ,\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[4] }));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[8] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[8]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[8] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.hs_wait_count_reg[9] 
       (.C(rx_div4_clk),
        .CE(\two_lane_hs_rx_timeout.hs_wait_count[15]_i_2_n_0 ),
        .D(p_2_in[9]),
        .Q(\two_lane_hs_rx_timeout.hs_wait_count_reg_n_0_[9] ),
        .R(\two_lane_hs_rx_timeout.hs_wait_count ));
  FDRE \two_lane_hs_rx_timeout.maxfrm_wait_done_reg 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\gen_rx_data_lane[0].rx_data_lane_inst_n_21 ),
        .Q(maxfrm_wait_done),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_support_rst_logic u_rx_support_rst_logic
       (.\FSM_sequential_dl_rx_state[0]_i_9__0 (\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync_0 ),
        .\FSM_sequential_rst_blk_state_reg[2]_0 ({dphy_en_out,dphy_srst_out}),
        .core_clk(core_clk),
        .\gen_hs_high_rates_spec_v1_1.stopstate_reg (init_done),
        .out(\gen_rx_data_lane_sm.rx_data_lane_sm/dl_enable_sync ),
        .stopstate0(stopstate0),
        .system_rst(system_rst_w),
        .system_rst_byteclk(system_rst_byteclk_w),
        .system_rst_in(system_rst_in),
        .system_rst_reg_0(u_rx_support_rst_logic_n_0),
        .system_rst_reg_1(u_rx_support_rst_logic_n_2));
endmodule

(* C_DDR_CLK_PERIOD = "2.155000" *) (* C_DPHY_LANES = "2" *) (* C_EN_CLK300M = "FALSE" *) 
(* C_IDLY_GRP_NAME = "mipi_dphy_idly_group" *) (* C_LINE_RATE = "16'b0000100100101000" *) (* C_SHARE_IDLYCTRL = "true" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) (* REF_FREQ = "200.000000" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_phy_7series
   (idelay_ctrl_clk_in,
    div4_clk_out,
    system_reset,
    system_rst_byteclk,
    clk_reset,
    io_reset,
    data_in_to_device,
    data_hs_rxp,
    data_hs_rxn,
    clk_hs_rxp,
    clk_hs_rxn,
    dlyctrl_rdy,
    dlyctrl_rdy_in,
    pass_in_rst,
    rx_clk_active,
    tap_val_pass_in);
  input idelay_ctrl_clk_in;
  output div4_clk_out;
  input system_reset;
  input system_rst_byteclk;
  input clk_reset;
  input io_reset;
  output [15:0]data_in_to_device;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input clk_hs_rxp;
  input clk_hs_rxn;
  output dlyctrl_rdy;
  input dlyctrl_rdy_in;
  output pass_in_rst;
  input rx_clk_active;
  input [7:0]tap_val_pass_in;

  wire \<const0> ;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [15:0]data_in_to_device;
  wire div4_clk_out;
  wire dlyctrl_rdy;
  wire idelay_ctrl_clk_in;
  wire mipi_dphy_v4_1_3_rx0_inst_n_1;
  wire system_reset;
  wire u_sys_rst_byteclk_sync_phy_top_i_n_0;

  assign pass_in_rst = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  IDELAYCTRL #(
    .SIM_DEVICE("7SERIES")) 
    \gen_idlyctrl_core.delayctrl 
       (.RDY(dlyctrl_rdy),
        .REFCLK(idelay_ctrl_clk_in),
        .RST(system_reset));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_serdes_idelay_ddr mipi_dphy_v4_1_3_rx0_inst
       (.AR(u_sys_rst_byteclk_sync_phy_top_i_n_0),
        .CLK(div4_clk_out),
        .CLKB0(mipi_dphy_v4_1_3_rx0_inst_n_1),
        .clk_hs_rxn(clk_hs_rxn),
        .clk_hs_rxp(clk_hs_rxp),
        .data_hs_rxn(data_hs_rxn),
        .data_hs_rxp(data_hs_rxp),
        .data_in_to_device(data_in_to_device),
        .rst_iserdes_reg_0(mipi_dphy_v4_1_3_rx0_inst_n_1));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__parameterized0 u_sys_rst_byteclk_sync_phy_top_i
       (.AR(u_sys_rst_byteclk_sync_phy_top_i_n_0),
        .div4_clk_out(div4_clk_out),
        .dlyctrl_rdy(dlyctrl_rdy),
        .system_reset(system_reset));
endmodule

(* DPHY_PRESET = "None" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* MTBF_SYNC_STAGES = "3" *) 
(* RESET_FSM_DONE = "2'b10" *) (* RST_BEGIN = "2'b00" *) (* STABLE_CLK_PERIOD = "5.000000" *) 
(* WAIT_FOR_ENABLE = "2'b01" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_logic_7series
   (core_clk,
    core_rst,
    cl_enable,
    srst,
    dphyen,
    system_rst_byteclk,
    system_rst);
  input core_clk;
  input core_rst;
  input cl_enable;
  input srst;
  input dphyen;
  (* keep = "true" *) output system_rst_byteclk;
  (* keep = "true" *) output system_rst;

  wire \<const0> ;
  wire \FSM_sequential_rst_blk_state[0]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[1]_i_1_n_0 ;
  wire core_clk;
  wire core_rst;
  wire core_rst_sync;
  wire dphyen;
  wire [1:0]rst_blk_state;
  wire srst;
  (* RTL_KEEP = "true" *) wire system_rst;
  wire system_rst_byteclk_i_1_n_0;
  (* RTL_KEEP = "true" *) wire system_rst_byteclk_orig;
  wire system_rst_i_1_n_0;
  wire NLW_core_rst_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED;

  assign system_rst_byteclk = \<const0> ;
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hBA30)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(rst_blk_state[1]),
        .I1(srst),
        .I2(dphyen),
        .I3(rst_blk_state[0]),
        .O(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hEFCF)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(rst_blk_state[1]),
        .I1(srst),
        .I2(dphyen),
        .I3(rst_blk_state[0]),
        .O(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "RST_BEGIN:00,RESET_FSM_DONE:01,WAIT_FOR_ENABLE:10" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ),
        .Q(rst_blk_state[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:00,RESET_FSM_DONE:01,WAIT_FOR_ENABLE:10" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ),
        .Q(rst_blk_state[1]));
  GND GND
       (.G(\<const0> ));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__2 core_rst_sync_i
       (.prmry_ack(NLW_core_rst_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(core_rst),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_sync),
        .scndry_rst_n(1'b1),
        .scndry_vect_out(NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT6 #(
    .INIT(64'hFFD0DDDD00D0DDDD)) 
    system_rst_byteclk_i_1
       (.I0(dphyen),
        .I1(srst),
        .I2(system_rst_byteclk_orig),
        .I3(rst_blk_state[0]),
        .I4(rst_blk_state[1]),
        .I5(system_rst_byteclk_orig),
        .O(system_rst_byteclk_i_1_n_0));
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_byteclk_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst_byteclk_orig));
  LUT6 #(
    .INIT(64'hFFD0DDDD00D0DDDD)) 
    system_rst_i_1
       (.I0(dphyen),
        .I1(srst),
        .I2(system_rst),
        .I3(rst_blk_state[0]),
        .I4(rst_blk_state[1]),
        .I5(system_rst),
        .O(system_rst_i_1_n_0));
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst));
endmodule

(* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire \<const0> ;
  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_rst_sync" *) (* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__1
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_rst_sync" *) (* c_init_val = "1'b1" *) (* c_mtbf_stages = "5'b00010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__2
   (prmry_in,
    scndry_aclk,
    scndry_out);
  input prmry_in;
  input scndry_aclk;
  output scndry_out;

  wire \<const0> ;
  wire prmry_in;
  wire scndry_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign scndry_out = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_rst_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__parameterized0
   (AR,
    dlyctrl_rdy,
    system_reset,
    div4_clk_out);
  output [0:0]AR;
  input dlyctrl_rdy;
  input system_reset;
  input div4_clk_out;

  wire [0:0]AR;
  wire div4_clk_out;
  wire dlyctrl_rdy;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire system_reset;

  LUT2 #(
    .INIT(4'hB)) 
    \m_count[5]_i_2 
       (.I0(stg3),
        .I1(dlyctrl_rdy),
        .O(AR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(div4_clk_out),
        .CE(1'b1),
        .D(system_reset),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg2_reg
       (.C(div4_clk_out),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg3_reg
       (.C(div4_clk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_rst_sync" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_rst_sync__parameterized0_2
   (fifo_rd_reset,
    system_rst_byteclk,
    rx_div4_clk);
  output fifo_rd_reset;
  input system_rst_byteclk;
  input rx_div4_clk;

  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_mipi_dphy_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire system_rst_byteclk;

  assign fifo_rd_reset = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg1_mipi_dphy_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(system_rst_byteclk),
        .Q(stg1_mipi_dphy_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg1_mipi_dphy_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    stg3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sot_det_align
   (E,
    dl1_rxvalidhs,
    dl1_rxsynchs,
    dl1_errsoths,
    dl1_errsotsynchs,
    pkt_cnt_r0,
    dl1_rxdatahs,
    dl_en_hs_lpn_i,
    rx_div4_clk,
    rx_dl1_hs_dp);
  output [0:0]E;
  output dl1_rxvalidhs;
  output dl1_rxsynchs;
  output dl1_errsoths;
  output dl1_errsotsynchs;
  output pkt_cnt_r0;
  output [7:0]dl1_rxdatahs;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;
  input [7:0]rx_dl1_hs_dp;

  wire [0:0]E;
  wire align_done_i_10__0_n_0;
  wire align_done_i_11__0_n_0;
  wire align_done_i_12__0_n_0;
  wire align_done_i_13__0_n_0;
  wire align_done_i_14__0_n_0;
  wire align_done_i_15__0_n_0;
  wire align_done_i_16__0_n_0;
  wire align_done_i_17__0_n_0;
  wire align_done_i_18__0_n_0;
  wire align_done_i_19__0_n_0;
  wire align_done_i_1__0_n_0;
  wire align_done_i_20__0_n_0;
  wire align_done_i_21__0_n_0;
  wire align_done_i_2__0_n_0;
  wire align_done_i_3__0_n_0;
  wire align_done_i_4__0_n_0;
  wire align_done_i_5__0_n_0;
  wire align_done_i_6__0_n_0;
  wire align_done_i_7__0_n_0;
  wire align_done_i_8__0_n_0;
  wire align_done_i_9__0_n_0;
  wire dl1_errsoths;
  wire dl1_errsotsynchs;
  wire [7:0]dl1_rxdatahs;
  wire dl1_rxsynchs;
  wire dl1_rxvalidhs;
  wire dl_en_hs_lpn_i;
  wire en_hs_lpn_sync;
  wire en_hs_lpn_sync_r;
  wire errsoths_i_10__0_n_0;
  wire errsoths_i_11__0_n_0;
  wire errsoths_i_12__0_n_0;
  wire errsoths_i_13__0_n_0;
  wire errsoths_i_14__0_n_0;
  wire errsoths_i_15__0_n_0;
  wire errsoths_i_16__0_n_0;
  wire errsoths_i_17__0_n_0;
  wire errsoths_i_18__0_n_0;
  wire errsoths_i_1__0_n_0;
  wire errsoths_i_2__0_n_0;
  wire errsoths_i_3__0_n_0;
  wire errsoths_i_4__0_n_0;
  wire errsoths_i_5__0_n_0;
  wire errsoths_i_6__0_n_0;
  wire errsoths_i_7__0_n_0;
  wire errsoths_i_8__0_n_0;
  wire errsoths_i_9__0_n_0;
  wire errsotsynchs_i_10__0_n_0;
  wire errsotsynchs_i_11__0_n_0;
  wire errsotsynchs_i_12__0_n_0;
  wire errsotsynchs_i_13__0_n_0;
  wire errsotsynchs_i_14__0_n_0;
  wire errsotsynchs_i_15__0_n_0;
  wire errsotsynchs_i_16__0_n_0;
  wire errsotsynchs_i_17__0_n_0;
  wire errsotsynchs_i_18__0_n_0;
  wire errsotsynchs_i_1__0_n_0;
  wire errsotsynchs_i_2__0_n_0;
  wire errsotsynchs_i_3__0_n_0;
  wire errsotsynchs_i_4__0_n_0;
  wire errsotsynchs_i_5__0_n_0;
  wire errsotsynchs_i_6__0_n_0;
  wire errsotsynchs_i_7__0_n_0;
  wire errsotsynchs_i_8__0_n_0;
  wire errsotsynchs_i_9__0_n_0;
  (* DONT_TOUCH *) wire [15:0]h_reg;
  wire [7:0]hs_data;
  wire \hs_data[0]_i_2__0_n_0 ;
  wire \hs_data[1]_i_2__0_n_0 ;
  wire \hs_data[2]_i_2__0_n_0 ;
  wire \hs_data[3]_i_2__0_n_0 ;
  wire \hs_data[4]_i_2__0_n_0 ;
  wire \hs_data[4]_i_3__0_n_0 ;
  wire \hs_data[5]_i_2__0_n_0 ;
  wire \hs_data[5]_i_3__0_n_0 ;
  wire \hs_data[6]_i_2__0_n_0 ;
  wire \hs_data[6]_i_3__0_n_0 ;
  wire \hs_data[7]_i_1__0_n_0 ;
  wire \hs_data[7]_i_3__0_n_0 ;
  wire \hs_data[7]_i_4__0_n_0 ;
  wire hs_dvalid_i_1__0_n_0;
  wire pkt_cnt_r0;
  wire rx_div4_clk;
  wire [7:0]rx_dl1_hs_dp;
  wire [7:0]rx_hs_dp_r;
  wire rxsynchs_i_1__0_n_0;
  wire rxsynchs_i_2__0_n_0;
  wire rxsynchs_i_3__0_n_0;
  wire rxsynchs_i_4__0_n_0;
  wire rxsynchs_i_5__0_n_0;
  wire rxsynchs_i_6__0_n_0;
  wire rxsynchs_i_7__0_n_0;
  wire \start_bit[0]_i_10__0_n_0 ;
  wire \start_bit[0]_i_11__0_n_0 ;
  wire \start_bit[0]_i_12__0_n_0 ;
  wire \start_bit[0]_i_1__0_n_0 ;
  wire \start_bit[0]_i_2__0_n_0 ;
  wire \start_bit[0]_i_3__0_n_0 ;
  wire \start_bit[0]_i_4__0_n_0 ;
  wire \start_bit[0]_i_5__0_n_0 ;
  wire \start_bit[0]_i_6__0_n_0 ;
  wire \start_bit[0]_i_7__0_n_0 ;
  wire \start_bit[0]_i_8__0_n_0 ;
  wire \start_bit[0]_i_9__0_n_0 ;
  wire \start_bit[1]_i_1__0_n_0 ;
  wire \start_bit[1]_i_2__0_n_0 ;
  wire \start_bit[1]_i_3__0_n_0 ;
  wire \start_bit[2]_i_10__0_n_0 ;
  wire \start_bit[2]_i_11__0_n_0 ;
  wire \start_bit[2]_i_12__0_n_0 ;
  wire \start_bit[2]_i_1__0_n_0 ;
  wire \start_bit[2]_i_2__0_n_0 ;
  wire \start_bit[2]_i_3__0_n_0 ;
  wire \start_bit[2]_i_4__0_n_0 ;
  wire \start_bit[2]_i_5__0_n_0 ;
  wire \start_bit[2]_i_6__0_n_0 ;
  wire \start_bit[2]_i_7__0_n_0 ;
  wire \start_bit[2]_i_8__0_n_0 ;
  wire \start_bit[2]_i_9__0_n_0 ;
  wire \start_bit_reg_n_0_[0] ;
  wire \start_bit_reg_n_0_[1] ;
  wire \start_bit_reg_n_0_[2] ;

  LUT6 #(
    .INIT(64'h080000008E080800)) 
    align_done_i_10__0
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[12]),
        .I4(h_reg[14]),
        .I5(h_reg[9]),
        .O(align_done_i_10__0_n_0));
  LUT6 #(
    .INIT(64'hABABABAAABABABAB)) 
    align_done_i_11__0
       (.I0(rxsynchs_i_6__0_n_0),
        .I1(errsotsynchs_i_6__0_n_0),
        .I2(align_done_i_18__0_n_0),
        .I3(align_done_i_19__0_n_0),
        .I4(align_done_i_20__0_n_0),
        .I5(align_done_i_21__0_n_0),
        .O(align_done_i_11__0_n_0));
  LUT5 #(
    .INIT(32'h51555555)) 
    align_done_i_12__0
       (.I0(h_reg[8]),
        .I1(h_reg[13]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .I4(h_reg[12]),
        .O(align_done_i_12__0_n_0));
  LUT5 #(
    .INIT(32'h1F1F1F10)) 
    align_done_i_13__0
       (.I0(h_reg[11]),
        .I1(h_reg[12]),
        .I2(h_reg[10]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .O(align_done_i_13__0_n_0));
  LUT4 #(
    .INIT(16'h03BF)) 
    align_done_i_14__0
       (.I0(h_reg[12]),
        .I1(h_reg[13]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .O(align_done_i_14__0_n_0));
  LUT3 #(
    .INIT(8'hDF)) 
    align_done_i_15__0
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[11]),
        .O(align_done_i_15__0_n_0));
  LUT5 #(
    .INIT(32'h44044C4C)) 
    align_done_i_16__0
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .O(align_done_i_16__0_n_0));
  LUT6 #(
    .INIT(64'h000000000E0E0EFE)) 
    align_done_i_17__0
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[11]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[10]),
        .O(align_done_i_17__0_n_0));
  LUT5 #(
    .INIT(32'h08000000)) 
    align_done_i_18__0
       (.I0(h_reg[9]),
        .I1(h_reg[7]),
        .I2(h_reg[8]),
        .I3(h_reg[5]),
        .I4(h_reg[6]),
        .O(align_done_i_18__0_n_0));
  LUT5 #(
    .INIT(32'hAAAAAAFE)) 
    align_done_i_19__0
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(h_reg[2]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_19__0_n_0));
  LUT6 #(
    .INIT(64'hFFFF0000FDFF0000)) 
    align_done_i_1__0
       (.I0(align_done_i_2__0_n_0),
        .I1(align_done_i_3__0_n_0),
        .I2(align_done_i_4__0_n_0),
        .I3(align_done_i_5__0_n_0),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(align_done_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h08000B00)) 
    align_done_i_20__0
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_20__0_n_0));
  LUT5 #(
    .INIT(32'hF7F3F333)) 
    align_done_i_21__0
       (.I0(h_reg[8]),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[9]),
        .I4(h_reg[7]),
        .O(align_done_i_21__0_n_0));
  LUT6 #(
    .INIT(64'hBF2BFFBFFFBFFFFF)) 
    align_done_i_2__0
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[14]),
        .I4(h_reg[15]),
        .I5(h_reg[12]),
        .O(align_done_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000101F)) 
    align_done_i_3__0
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(align_done_i_6__0_n_0),
        .I4(h_reg[11]),
        .I5(align_done_i_7__0_n_0),
        .O(align_done_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFF5D)) 
    align_done_i_4__0
       (.I0(align_done_i_8__0_n_0),
        .I1(align_done_i_2__0_n_0),
        .I2(align_done_i_9__0_n_0),
        .I3(align_done_i_10__0_n_0),
        .O(align_done_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h2)) 
    align_done_i_5__0
       (.I0(\start_bit[0]_i_4__0_n_0 ),
        .I1(align_done_i_11__0_n_0),
        .O(align_done_i_5__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    align_done_i_6__0
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .O(align_done_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hAFAAAEAEEEAEEEEE)) 
    align_done_i_7__0
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[14]),
        .I4(h_reg[15]),
        .I5(h_reg[12]),
        .O(align_done_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h4444445454544454)) 
    align_done_i_8__0
       (.I0(\start_bit[2]_i_12__0_n_0 ),
        .I1(align_done_i_10__0_n_0),
        .I2(align_done_i_12__0_n_0),
        .I3(align_done_i_13__0_n_0),
        .I4(h_reg[9]),
        .I5(align_done_i_14__0_n_0),
        .O(align_done_i_8__0_n_0));
  LUT5 #(
    .INIT(32'h0000000D)) 
    align_done_i_9__0
       (.I0(h_reg[14]),
        .I1(align_done_i_15__0_n_0),
        .I2(h_reg[9]),
        .I3(align_done_i_16__0_n_0),
        .I4(align_done_i_17__0_n_0),
        .O(align_done_i_9__0_n_0));
  FDRE align_done_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(align_done_i_1__0_n_0),
        .Q(E),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_9 en_hs_lpn_sync_i
       (.dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .out(en_hs_lpn_sync),
        .rx_div4_clk(rx_div4_clk));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_hs_lpn_sync_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(en_hs_lpn_sync),
        .Q(en_hs_lpn_sync_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000E0E0EFE)) 
    errsoths_i_10__0
       (.I0(h_reg[3]),
        .I1(h_reg[4]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[9]),
        .I5(h_reg[6]),
        .O(errsoths_i_10__0_n_0));
  LUT5 #(
    .INIT(32'hF7F3F333)) 
    errsoths_i_11__0
       (.I0(h_reg[9]),
        .I1(h_reg[6]),
        .I2(h_reg[7]),
        .I3(h_reg[10]),
        .I4(h_reg[8]),
        .O(errsoths_i_11__0_n_0));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    errsoths_i_12__0
       (.I0(h_reg[5]),
        .I1(h_reg[10]),
        .I2(h_reg[7]),
        .I3(h_reg[9]),
        .I4(h_reg[8]),
        .O(errsoths_i_12__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    errsoths_i_13__0
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .O(errsoths_i_13__0_n_0));
  LUT5 #(
    .INIT(32'h77F7F7FF)) 
    errsoths_i_14__0
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[10]),
        .O(errsoths_i_14__0_n_0));
  LUT6 #(
    .INIT(64'h0000800080006880)) 
    errsoths_i_15__0
       (.I0(h_reg[7]),
        .I1(h_reg[11]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .I5(h_reg[6]),
        .O(errsoths_i_15__0_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_16__0
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[9]),
        .O(errsoths_i_16__0_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_17__0
       (.I0(h_reg[13]),
        .I1(h_reg[14]),
        .I2(h_reg[15]),
        .I3(h_reg[12]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_17__0_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_18__0
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[10]),
        .I3(h_reg[11]),
        .I4(h_reg[9]),
        .I5(h_reg[8]),
        .O(errsoths_i_18__0_n_0));
  LUT6 #(
    .INIT(64'hA8AAFFFFA8AA0000)) 
    errsoths_i_1__0
       (.I0(errsoths_i_2__0_n_0),
        .I1(errsoths_i_3__0_n_0),
        .I2(errsoths_i_4__0_n_0),
        .I3(errsoths_i_5__0_n_0),
        .I4(rxsynchs_i_3__0_n_0),
        .I5(dl1_errsoths),
        .O(errsoths_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h2)) 
    errsoths_i_2__0
       (.I0(en_hs_lpn_sync_r),
        .I1(E),
        .O(errsoths_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h4000000094404000)) 
    errsoths_i_3__0
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(h_reg[6]),
        .I3(h_reg[9]),
        .I4(h_reg[5]),
        .I5(h_reg[4]),
        .O(errsoths_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0080000080680080)) 
    errsoths_i_4__0
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(errsoths_i_4__0_n_0));
  LUT6 #(
    .INIT(64'h0E0E0E00FFFFFFFF)) 
    errsoths_i_5__0
       (.I0(errsoths_i_6__0_n_0),
        .I1(errsoths_i_7__0_n_0),
        .I2(errsoths_i_8__0_n_0),
        .I3(rxsynchs_i_4__0_n_0),
        .I4(errsoths_i_9__0_n_0),
        .I5(align_done_i_5__0_n_0),
        .O(errsoths_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hBF6BFFBFFFBFFFFF)) 
    errsoths_i_6__0
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[12]),
        .O(errsoths_i_6__0_n_0));
  LUT5 #(
    .INIT(32'hAAAAFFEF)) 
    errsoths_i_7__0
       (.I0(errsotsynchs_i_6__0_n_0),
        .I1(errsoths_i_10__0_n_0),
        .I2(errsoths_i_11__0_n_0),
        .I3(errsoths_i_12__0_n_0),
        .I4(errsotsynchs_i_9__0_n_0),
        .O(errsoths_i_7__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF94009455)) 
    errsoths_i_8__0
       (.I0(h_reg[5]),
        .I1(h_reg[7]),
        .I2(h_reg[6]),
        .I3(errsoths_i_13__0_n_0),
        .I4(errsoths_i_14__0_n_0),
        .I5(errsoths_i_15__0_n_0),
        .O(errsoths_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h0015)) 
    errsoths_i_9__0
       (.I0(errsoths_i_16__0_n_0),
        .I1(align_done_i_8__0_n_0),
        .I2(errsoths_i_17__0_n_0),
        .I3(errsoths_i_18__0_n_0),
        .O(errsoths_i_9__0_n_0));
  FDRE errsoths_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsoths_i_1__0_n_0),
        .Q(dl1_errsoths),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00800000)) 
    errsotsynchs_i_10__0
       (.I0(h_reg[9]),
        .I1(h_reg[11]),
        .I2(h_reg[10]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .O(errsotsynchs_i_10__0_n_0));
  LUT6 #(
    .INIT(64'h0000000707070007)) 
    errsotsynchs_i_11__0
       (.I0(errsotsynchs_i_14__0_n_0),
        .I1(h_reg[13]),
        .I2(h_reg[8]),
        .I3(align_done_i_13__0_n_0),
        .I4(h_reg[9]),
        .I5(align_done_i_14__0_n_0),
        .O(errsotsynchs_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hF0FFFFFFEEEEFFFF)) 
    errsotsynchs_i_12__0
       (.I0(errsotsynchs_i_15__0_n_0),
        .I1(align_done_i_9__0_n_0),
        .I2(errsotsynchs_i_16__0_n_0),
        .I3(align_done_i_3__0_n_0),
        .I4(align_done_i_8__0_n_0),
        .I5(errsotsynchs_i_17__0_n_0),
        .O(errsotsynchs_i_12__0_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    errsotsynchs_i_13__0
       (.I0(h_reg[10]),
        .I1(h_reg[7]),
        .O(errsotsynchs_i_13__0_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    errsotsynchs_i_14__0
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[12]),
        .O(errsotsynchs_i_14__0_n_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    errsotsynchs_i_15__0
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .O(errsotsynchs_i_15__0_n_0));
  LUT5 #(
    .INIT(32'h20000000)) 
    errsotsynchs_i_16__0
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(h_reg[13]),
        .I3(h_reg[11]),
        .I4(h_reg[12]),
        .O(errsotsynchs_i_16__0_n_0));
  LUT5 #(
    .INIT(32'h00045555)) 
    errsotsynchs_i_17__0
       (.I0(align_done_i_10__0_n_0),
        .I1(errsotsynchs_i_18__0_n_0),
        .I2(align_done_i_16__0_n_0),
        .I3(align_done_i_17__0_n_0),
        .I4(align_done_i_2__0_n_0),
        .O(errsotsynchs_i_17__0_n_0));
  LUT5 #(
    .INIT(32'h51555555)) 
    errsotsynchs_i_18__0
       (.I0(h_reg[9]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(h_reg[11]),
        .I4(h_reg[14]),
        .O(errsotsynchs_i_18__0_n_0));
  LUT6 #(
    .INIT(64'h888AFFFF888A0000)) 
    errsotsynchs_i_1__0
       (.I0(errsoths_i_2__0_n_0),
        .I1(errsotsynchs_i_2__0_n_0),
        .I2(errsotsynchs_i_3__0_n_0),
        .I3(errsotsynchs_i_4__0_n_0),
        .I4(rxsynchs_i_3__0_n_0),
        .I5(dl1_errsotsynchs),
        .O(errsotsynchs_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT4 #(
    .INIT(16'h005D)) 
    errsotsynchs_i_2__0
       (.I0(\start_bit[0]_i_4__0_n_0 ),
        .I1(errsotsynchs_i_5__0_n_0),
        .I2(errsotsynchs_i_6__0_n_0),
        .I3(rxsynchs_i_7__0_n_0),
        .O(errsotsynchs_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFF4)) 
    errsotsynchs_i_3__0
       (.I0(errsotsynchs_i_7__0_n_0),
        .I1(errsotsynchs_i_8__0_n_0),
        .I2(errsotsynchs_i_9__0_n_0),
        .I3(errsotsynchs_i_6__0_n_0),
        .O(errsotsynchs_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h55540000FFFFFFFF)) 
    errsotsynchs_i_4__0
       (.I0(rxsynchs_i_4__0_n_0),
        .I1(errsotsynchs_i_10__0_n_0),
        .I2(errsotsynchs_i_11__0_n_0),
        .I3(align_done_i_10__0_n_0),
        .I4(errsotsynchs_i_12__0_n_0),
        .I5(align_done_i_5__0_n_0),
        .O(errsotsynchs_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hAEFE2ABEAEEEAEFE)) 
    errsotsynchs_i_5__0
       (.I0(align_done_i_19__0_n_0),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(errsotsynchs_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    errsotsynchs_i_6__0
       (.I0(h_reg[6]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[10]),
        .I4(h_reg[7]),
        .I5(h_reg[5]),
        .O(errsotsynchs_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hF771FFF7FFF7FFFF)) 
    errsotsynchs_i_7__0
       (.I0(h_reg[12]),
        .I1(h_reg[10]),
        .I2(h_reg[11]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(errsotsynchs_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h0000000040444444)) 
    errsotsynchs_i_8__0
       (.I0(errsoths_i_10__0_n_0),
        .I1(errsoths_i_11__0_n_0),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(errsotsynchs_i_13__0_n_0),
        .I5(h_reg[5]),
        .O(errsotsynchs_i_8__0_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    errsotsynchs_i_9__0
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[6]),
        .O(errsotsynchs_i_9__0_n_0));
  FDRE errsotsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsotsynchs_i_1__0_n_0),
        .Q(dl1_errsotsynchs),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[8]),
        .Q(h_reg[0]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[2]),
        .Q(h_reg[10]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[3]),
        .Q(h_reg[11]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[4]),
        .Q(h_reg[12]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[5]),
        .Q(h_reg[13]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[6]),
        .Q(h_reg[14]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[7]),
        .Q(h_reg[15]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[9]),
        .Q(h_reg[1]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[10]),
        .Q(h_reg[2]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[11]),
        .Q(h_reg[3]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[12]),
        .Q(h_reg[4]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[13]),
        .Q(h_reg[5]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[14]),
        .Q(h_reg[6]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[15]),
        .Q(h_reg[7]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[0]),
        .Q(h_reg[8]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[1]),
        .Q(h_reg[9]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[0]_i_1__0 
       (.I0(\hs_data[4]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[0]_i_2__0_n_0 ),
        .O(hs_data[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[0]_i_2__0 
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[2]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[1]),
        .O(\hs_data[0]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[1]_i_1__0 
       (.I0(\hs_data[5]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[1]_i_2__0_n_0 ),
        .O(hs_data[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[1]_i_2__0 
       (.I0(h_reg[5]),
        .I1(h_reg[4]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[3]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[2]),
        .O(\hs_data[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[2]_i_1__0 
       (.I0(\hs_data[6]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[2]_i_2__0_n_0 ),
        .O(hs_data[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[2]_i_2__0 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[4]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[3]),
        .O(\hs_data[2]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[3]_i_1__0 
       (.I0(\hs_data[7]_i_4__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[3]_i_2__0_n_0 ),
        .O(hs_data[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[3]_i_2__0 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[5]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[4]),
        .O(\hs_data[3]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[4]_i_1__0 
       (.I0(\hs_data[4]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[4]_i_3__0_n_0 ),
        .O(hs_data[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_2__0 
       (.I0(h_reg[12]),
        .I1(h_reg[11]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[10]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[9]),
        .O(\hs_data[4]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_3__0 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[6]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[5]),
        .O(\hs_data[4]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[5]_i_1__0 
       (.I0(\hs_data[5]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[5]_i_3__0_n_0 ),
        .O(hs_data[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_2__0 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[11]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[10]),
        .O(\hs_data[5]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_3__0 
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[7]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[6]),
        .O(\hs_data[5]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[6]_i_1__0 
       (.I0(\hs_data[6]_i_2__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[6]_i_3__0_n_0 ),
        .O(hs_data[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_2__0 
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[12]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[11]),
        .O(\hs_data[6]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_3__0 
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[8]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[7]),
        .O(\hs_data[6]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_data[7]_i_1__0 
       (.I0(en_hs_lpn_sync_r),
        .O(\hs_data[7]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[7]_i_2__0 
       (.I0(\hs_data[7]_i_3__0_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[7]_i_4__0_n_0 ),
        .O(hs_data[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_3__0 
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[13]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[12]),
        .O(\hs_data[7]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_4__0 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[9]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[8]),
        .O(\hs_data[7]_i_4__0_n_0 ));
  FDRE \hs_data_reg[0] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[0]),
        .Q(dl1_rxdatahs[0]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[1] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[1]),
        .Q(dl1_rxdatahs[1]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[2] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[2]),
        .Q(dl1_rxdatahs[2]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[3] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[3]),
        .Q(dl1_rxdatahs[3]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[4] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[4]),
        .Q(dl1_rxdatahs[4]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[5] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[5]),
        .Q(dl1_rxdatahs[5]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[6] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[6]),
        .Q(dl1_rxdatahs[6]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  FDRE \hs_data_reg[7] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[7]),
        .Q(dl1_rxdatahs[7]),
        .R(\hs_data[7]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hC8)) 
    hs_dvalid_i_1__0
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(dl1_rxvalidhs),
        .O(hs_dvalid_i_1__0_n_0));
  FDRE hs_dvalid_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(hs_dvalid_i_1__0_n_0),
        .Q(dl1_rxvalidhs),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hAAA8)) 
    \pkt_cnt_r[0]_i_1__0 
       (.I0(E),
        .I1(dl1_rxsynchs),
        .I2(dl1_errsoths),
        .I3(dl1_errsotsynchs),
        .O(pkt_cnt_r0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[0]),
        .Q(rx_hs_dp_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[1]),
        .Q(rx_hs_dp_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[2]),
        .Q(rx_hs_dp_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[3]),
        .Q(rx_hs_dp_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[4]),
        .Q(rx_hs_dp_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[5]),
        .Q(rx_hs_dp_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[6]),
        .Q(rx_hs_dp_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl1_hs_dp[7]),
        .Q(rx_hs_dp_r[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    rxsynchs_i_1__0
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(rxsynchs_i_2__0_n_0),
        .I3(rxsynchs_i_3__0_n_0),
        .I4(dl1_rxsynchs),
        .O(rxsynchs_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0000000000004FEF)) 
    rxsynchs_i_2__0
       (.I0(rxsynchs_i_4__0_n_0),
        .I1(rxsynchs_i_5__0_n_0),
        .I2(align_done_i_5__0_n_0),
        .I3(errsotsynchs_i_3__0_n_0),
        .I4(rxsynchs_i_6__0_n_0),
        .I5(rxsynchs_i_7__0_n_0),
        .O(rxsynchs_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFDFFFFFFFFF)) 
    rxsynchs_i_3__0
       (.I0(align_done_i_2__0_n_0),
        .I1(align_done_i_3__0_n_0),
        .I2(align_done_i_5__0_n_0),
        .I3(align_done_i_4__0_n_0),
        .I4(E),
        .I5(en_hs_lpn_sync_r),
        .O(rxsynchs_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rxsynchs_i_4__0
       (.I0(\start_bit[2]_i_3__0_n_0 ),
        .I1(\start_bit[0]_i_5__0_n_0 ),
        .I2(errsoths_i_7__0_n_0),
        .O(rxsynchs_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h000B)) 
    rxsynchs_i_5__0
       (.I0(align_done_i_2__0_n_0),
        .I1(errsotsynchs_i_11__0_n_0),
        .I2(align_done_i_10__0_n_0),
        .I3(\start_bit[2]_i_12__0_n_0 ),
        .O(rxsynchs_i_5__0_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    rxsynchs_i_6__0
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[5]),
        .I3(h_reg[6]),
        .I4(h_reg[9]),
        .I5(h_reg[4]),
        .O(rxsynchs_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    rxsynchs_i_7__0
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(rxsynchs_i_7__0_n_0));
  FDRE rxsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rxsynchs_i_1__0_n_0),
        .Q(dl1_rxsynchs),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00008000)) 
    \start_bit[0]_i_10__0 
       (.I0(h_reg[7]),
        .I1(h_reg[11]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .O(\start_bit[0]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'hABABABAA)) 
    \start_bit[0]_i_11__0 
       (.I0(h_reg[6]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[5]),
        .I4(h_reg[4]),
        .O(\start_bit[0]_i_11__0_n_0 ));
  LUT5 #(
    .INIT(32'hCFEFFFEF)) 
    \start_bit[0]_i_12__0 
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .O(\start_bit[0]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0F00000DD000000)) 
    \start_bit[0]_i_1__0 
       (.I0(\start_bit[0]_i_2__0_n_0 ),
        .I1(\start_bit[0]_i_3__0_n_0 ),
        .I2(\start_bit_reg_n_0_[0] ),
        .I3(\start_bit[0]_i_4__0_n_0 ),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'hFFF2F0F0)) 
    \start_bit[0]_i_2__0 
       (.I0(align_done_i_2__0_n_0),
        .I1(align_done_i_3__0_n_0),
        .I2(rxsynchs_i_4__0_n_0),
        .I3(align_done_i_4__0_n_0),
        .I4(align_done_i_8__0_n_0),
        .O(\start_bit[0]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \start_bit[0]_i_3__0 
       (.I0(errsoths_i_7__0_n_0),
        .I1(\start_bit[0]_i_5__0_n_0 ),
        .I2(align_done_i_11__0_n_0),
        .O(\start_bit[0]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF005D)) 
    \start_bit[0]_i_4__0 
       (.I0(\start_bit[0]_i_6__0_n_0 ),
        .I1(\start_bit[0]_i_7__0_n_0 ),
        .I2(\start_bit[0]_i_8__0_n_0 ),
        .I3(h_reg[3]),
        .I4(rxsynchs_i_6__0_n_0),
        .I5(rxsynchs_i_7__0_n_0),
        .O(\start_bit[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFBBBFBFAAAAAAAA)) 
    \start_bit[0]_i_5__0 
       (.I0(errsotsynchs_i_9__0_n_0),
        .I1(\start_bit[0]_i_9__0_n_0 ),
        .I2(\start_bit[0]_i_10__0_n_0 ),
        .I3(\start_bit[0]_i_11__0_n_0 ),
        .I4(\start_bit[0]_i_12__0_n_0 ),
        .I5(errsotsynchs_i_7__0_n_0),
        .O(\start_bit[0]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \start_bit[0]_i_6__0 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .O(\start_bit[0]_i_6__0_n_0 ));
  LUT5 #(
    .INIT(32'h5D5D5D55)) 
    \start_bit[0]_i_7__0 
       (.I0(h_reg[4]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(\start_bit[0]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E0F0E000E0F0E)) 
    \start_bit[0]_i_8__0 
       (.I0(h_reg[2]),
        .I1(h_reg[1]),
        .I2(h_reg[4]),
        .I3(h_reg[5]),
        .I4(h_reg[7]),
        .I5(h_reg[8]),
        .O(\start_bit[0]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    \start_bit[0]_i_9__0 
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[11]),
        .I3(h_reg[7]),
        .I4(h_reg[9]),
        .O(\start_bit[0]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0444444004444)) 
    \start_bit[1]_i_1__0 
       (.I0(\start_bit[1]_i_2__0_n_0 ),
        .I1(\start_bit[1]_i_3__0_n_0 ),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(align_done_i_5__0_n_0),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT5 #(
    .INIT(32'hEFFFEFEF)) 
    \start_bit[1]_i_2__0 
       (.I0(align_done_i_11__0_n_0),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .I3(\start_bit[2]_i_7__0_n_0 ),
        .I4(\start_bit[2]_i_3__0_n_0 ),
        .O(\start_bit[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCCC8CCC)) 
    \start_bit[1]_i_3__0 
       (.I0(align_done_i_3__0_n_0),
        .I1(align_done_i_8__0_n_0),
        .I2(align_done_i_2__0_n_0),
        .I3(align_done_i_9__0_n_0),
        .I4(align_done_i_10__0_n_0),
        .I5(\start_bit[2]_i_7__0_n_0 ),
        .O(\start_bit[1]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAFE)) 
    \start_bit[2]_i_10__0 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[5]),
        .I3(h_reg[9]),
        .I4(h_reg[8]),
        .O(\start_bit[2]_i_10__0_n_0 ));
  LUT5 #(
    .INIT(32'hF7F7FFF3)) 
    \start_bit[2]_i_11__0 
       (.I0(h_reg[12]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[8]),
        .I4(h_reg[11]),
        .O(\start_bit[2]_i_11__0_n_0 ));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    \start_bit[2]_i_12__0 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[9]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .I5(h_reg[8]),
        .O(\start_bit[2]_i_12__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF540054)) 
    \start_bit[2]_i_1__0 
       (.I0(\start_bit[2]_i_2__0_n_0 ),
        .I1(\start_bit[2]_i_3__0_n_0 ),
        .I2(\start_bit[2]_i_4__0_n_0 ),
        .I3(\start_bit[2]_i_5__0_n_0 ),
        .I4(\start_bit_reg_n_0_[2] ),
        .I5(\start_bit[2]_i_6__0_n_0 ),
        .O(\start_bit[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \start_bit[2]_i_2__0 
       (.I0(align_done_i_11__0_n_0),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .I3(\start_bit[2]_i_7__0_n_0 ),
        .O(\start_bit[2]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h555555557F777F7F)) 
    \start_bit[2]_i_3__0 
       (.I0(errsotsynchs_i_7__0_n_0),
        .I1(\start_bit[2]_i_8__0_n_0 ),
        .I2(\start_bit[2]_i_9__0_n_0 ),
        .I3(\start_bit[2]_i_10__0_n_0 ),
        .I4(\start_bit[2]_i_11__0_n_0 ),
        .I5(\start_bit[2]_i_12__0_n_0 ),
        .O(\start_bit[2]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \start_bit[2]_i_4__0 
       (.I0(align_done_i_2__0_n_0),
        .I1(align_done_i_3__0_n_0),
        .I2(align_done_i_4__0_n_0),
        .O(\start_bit[2]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \start_bit[2]_i_5__0 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .O(\start_bit[2]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'h4044)) 
    \start_bit[2]_i_6__0 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(\start_bit[2]_i_7__0_n_0 ),
        .I3(align_done_i_5__0_n_0),
        .O(\start_bit[2]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[2]_i_7__0 
       (.I0(errsoths_i_7__0_n_0),
        .I1(\start_bit[0]_i_5__0_n_0 ),
        .O(\start_bit[2]_i_7__0_n_0 ));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    \start_bit[2]_i_8__0 
       (.I0(h_reg[11]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[8]),
        .I4(h_reg[12]),
        .O(\start_bit[2]_i_8__0_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \start_bit[2]_i_9__0 
       (.I0(h_reg[8]),
        .I1(h_reg[12]),
        .I2(h_reg[9]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .O(\start_bit[2]_i_9__0_n_0 ));
  FDRE \start_bit_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[0]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \start_bit_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[1]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \start_bit_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[2]_i_1__0_n_0 ),
        .Q(\start_bit_reg_n_0_[2] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sot_det_align" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sot_det_align_11
   (E,
    hs_dvalid_reg_0,
    dl0_rxsynchs,
    dl0_errsoths,
    dl0_errsotsynchs,
    SR,
    s_level_out_d3_reg,
    pkt_cnt_r0,
    dl0_rxdatahs,
    dl_en_hs_lpn_i,
    rx_div4_clk,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ,
    \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ,
    prmry_in,
    rx_dl0_hs_dp);
  output [0:0]E;
  output hs_dvalid_reg_0;
  output dl0_rxsynchs;
  output dl0_errsoths;
  output dl0_errsotsynchs;
  output [0:0]SR;
  output s_level_out_d3_reg;
  output pkt_cnt_r0;
  output [7:0]dl0_rxdatahs;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;
  input \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  input \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ;
  input prmry_in;
  input [7:0]rx_dl0_hs_dp;

  wire [0:0]E;
  wire [0:0]SR;
  wire align_done_i_10_n_0;
  wire align_done_i_11_n_0;
  wire align_done_i_12_n_0;
  wire align_done_i_13_n_0;
  wire align_done_i_14_n_0;
  wire align_done_i_15_n_0;
  wire align_done_i_16_n_0;
  wire align_done_i_17_n_0;
  wire align_done_i_18_n_0;
  wire align_done_i_19_n_0;
  wire align_done_i_1_n_0;
  wire align_done_i_20_n_0;
  wire align_done_i_21_n_0;
  wire align_done_i_2_n_0;
  wire align_done_i_3_n_0;
  wire align_done_i_4_n_0;
  wire align_done_i_5_n_0;
  wire align_done_i_6_n_0;
  wire align_done_i_7_n_0;
  wire align_done_i_8_n_0;
  wire align_done_i_9_n_0;
  wire dl0_errsoths;
  wire dl0_errsotsynchs;
  wire [7:0]dl0_rxdatahs;
  wire dl0_rxsynchs;
  wire dl_en_hs_lpn_i;
  wire en_hs_lpn_sync;
  wire en_hs_lpn_sync_r;
  wire errsoths_i_10_n_0;
  wire errsoths_i_11_n_0;
  wire errsoths_i_12_n_0;
  wire errsoths_i_13_n_0;
  wire errsoths_i_14_n_0;
  wire errsoths_i_15_n_0;
  wire errsoths_i_16_n_0;
  wire errsoths_i_17_n_0;
  wire errsoths_i_18_n_0;
  wire errsoths_i_1_n_0;
  wire errsoths_i_2_n_0;
  wire errsoths_i_3_n_0;
  wire errsoths_i_4_n_0;
  wire errsoths_i_5_n_0;
  wire errsoths_i_6_n_0;
  wire errsoths_i_7_n_0;
  wire errsoths_i_8_n_0;
  wire errsoths_i_9_n_0;
  wire errsotsynchs_i_10_n_0;
  wire errsotsynchs_i_11_n_0;
  wire errsotsynchs_i_12_n_0;
  wire errsotsynchs_i_13_n_0;
  wire errsotsynchs_i_14_n_0;
  wire errsotsynchs_i_15_n_0;
  wire errsotsynchs_i_16_n_0;
  wire errsotsynchs_i_17_n_0;
  wire errsotsynchs_i_18_n_0;
  wire errsotsynchs_i_1_n_0;
  wire errsotsynchs_i_2_n_0;
  wire errsotsynchs_i_3_n_0;
  wire errsotsynchs_i_4_n_0;
  wire errsotsynchs_i_5_n_0;
  wire errsotsynchs_i_6_n_0;
  wire errsotsynchs_i_7_n_0;
  wire errsotsynchs_i_8_n_0;
  wire errsotsynchs_i_9_n_0;
  (* DONT_TOUCH *) wire [15:0]h_reg;
  wire [7:0]hs_data;
  wire \hs_data[0]_i_2_n_0 ;
  wire \hs_data[1]_i_2_n_0 ;
  wire \hs_data[2]_i_2_n_0 ;
  wire \hs_data[3]_i_2_n_0 ;
  wire \hs_data[4]_i_2_n_0 ;
  wire \hs_data[4]_i_3_n_0 ;
  wire \hs_data[5]_i_2_n_0 ;
  wire \hs_data[5]_i_3_n_0 ;
  wire \hs_data[6]_i_2_n_0 ;
  wire \hs_data[6]_i_3_n_0 ;
  wire \hs_data[7]_i_1_n_0 ;
  wire \hs_data[7]_i_3_n_0 ;
  wire \hs_data[7]_i_4_n_0 ;
  wire hs_dvalid_i_1_n_0;
  wire hs_dvalid_reg_0;
  wire pkt_cnt_r0;
  wire prmry_in;
  wire rx_div4_clk;
  wire [7:0]rx_dl0_hs_dp;
  wire [7:0]rx_hs_dp_r;
  wire rxsynchs_i_1_n_0;
  wire rxsynchs_i_2_n_0;
  wire rxsynchs_i_3_n_0;
  wire rxsynchs_i_4_n_0;
  wire rxsynchs_i_5_n_0;
  wire rxsynchs_i_6_n_0;
  wire rxsynchs_i_7_n_0;
  wire s_level_out_d3_reg;
  wire \start_bit[0]_i_10_n_0 ;
  wire \start_bit[0]_i_11_n_0 ;
  wire \start_bit[0]_i_12_n_0 ;
  wire \start_bit[0]_i_1_n_0 ;
  wire \start_bit[0]_i_2_n_0 ;
  wire \start_bit[0]_i_3_n_0 ;
  wire \start_bit[0]_i_4_n_0 ;
  wire \start_bit[0]_i_5_n_0 ;
  wire \start_bit[0]_i_6_n_0 ;
  wire \start_bit[0]_i_7_n_0 ;
  wire \start_bit[0]_i_8_n_0 ;
  wire \start_bit[0]_i_9_n_0 ;
  wire \start_bit[1]_i_1_n_0 ;
  wire \start_bit[1]_i_2_n_0 ;
  wire \start_bit[1]_i_3_n_0 ;
  wire \start_bit[2]_i_10_n_0 ;
  wire \start_bit[2]_i_11_n_0 ;
  wire \start_bit[2]_i_12_n_0 ;
  wire \start_bit[2]_i_1_n_0 ;
  wire \start_bit[2]_i_2_n_0 ;
  wire \start_bit[2]_i_3_n_0 ;
  wire \start_bit[2]_i_4_n_0 ;
  wire \start_bit[2]_i_5_n_0 ;
  wire \start_bit[2]_i_6_n_0 ;
  wire \start_bit[2]_i_7_n_0 ;
  wire \start_bit[2]_i_8_n_0 ;
  wire \start_bit[2]_i_9_n_0 ;
  wire \start_bit_reg_n_0_[0] ;
  wire \start_bit_reg_n_0_[1] ;
  wire \start_bit_reg_n_0_[2] ;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg ;
  wire \two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ;

  LUT6 #(
    .INIT(64'hFFFF0000FDFF0000)) 
    align_done_i_1
       (.I0(align_done_i_2_n_0),
        .I1(align_done_i_3_n_0),
        .I2(align_done_i_4_n_0),
        .I3(align_done_i_5_n_0),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(align_done_i_1_n_0));
  LUT6 #(
    .INIT(64'h080000008E080800)) 
    align_done_i_10
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[12]),
        .I4(h_reg[14]),
        .I5(h_reg[9]),
        .O(align_done_i_10_n_0));
  LUT6 #(
    .INIT(64'hABABABAAABABABAB)) 
    align_done_i_11
       (.I0(rxsynchs_i_6_n_0),
        .I1(errsotsynchs_i_6_n_0),
        .I2(align_done_i_18_n_0),
        .I3(align_done_i_19_n_0),
        .I4(align_done_i_20_n_0),
        .I5(align_done_i_21_n_0),
        .O(align_done_i_11_n_0));
  LUT5 #(
    .INIT(32'h51555555)) 
    align_done_i_12
       (.I0(h_reg[8]),
        .I1(h_reg[13]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .I4(h_reg[12]),
        .O(align_done_i_12_n_0));
  LUT5 #(
    .INIT(32'h1F1F1F10)) 
    align_done_i_13
       (.I0(h_reg[11]),
        .I1(h_reg[12]),
        .I2(h_reg[10]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .O(align_done_i_13_n_0));
  LUT4 #(
    .INIT(16'h03BF)) 
    align_done_i_14
       (.I0(h_reg[12]),
        .I1(h_reg[13]),
        .I2(h_reg[11]),
        .I3(h_reg[10]),
        .O(align_done_i_14_n_0));
  LUT3 #(
    .INIT(8'hDF)) 
    align_done_i_15
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[11]),
        .O(align_done_i_15_n_0));
  LUT5 #(
    .INIT(32'h44044C4C)) 
    align_done_i_16
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .O(align_done_i_16_n_0));
  LUT6 #(
    .INIT(64'h000000000E0E0EFE)) 
    align_done_i_17
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[11]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .I5(h_reg[10]),
        .O(align_done_i_17_n_0));
  LUT5 #(
    .INIT(32'h08000000)) 
    align_done_i_18
       (.I0(h_reg[9]),
        .I1(h_reg[7]),
        .I2(h_reg[8]),
        .I3(h_reg[5]),
        .I4(h_reg[6]),
        .O(align_done_i_18_n_0));
  LUT5 #(
    .INIT(32'hAAAAAAFE)) 
    align_done_i_19
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(h_reg[2]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_19_n_0));
  LUT6 #(
    .INIT(64'hBF2BFFBFFFBFFFFF)) 
    align_done_i_2
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[14]),
        .I4(h_reg[15]),
        .I5(h_reg[12]),
        .O(align_done_i_2_n_0));
  LUT5 #(
    .INIT(32'h08000B00)) 
    align_done_i_20
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(align_done_i_20_n_0));
  LUT5 #(
    .INIT(32'hF7F3F333)) 
    align_done_i_21
       (.I0(h_reg[8]),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[9]),
        .I4(h_reg[7]),
        .O(align_done_i_21_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF0000101F)) 
    align_done_i_3
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(align_done_i_6_n_0),
        .I4(h_reg[11]),
        .I5(align_done_i_7_n_0),
        .O(align_done_i_3_n_0));
  LUT4 #(
    .INIT(16'hFF5D)) 
    align_done_i_4
       (.I0(align_done_i_8_n_0),
        .I1(align_done_i_2_n_0),
        .I2(align_done_i_9_n_0),
        .I3(align_done_i_10_n_0),
        .O(align_done_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    align_done_i_5
       (.I0(\start_bit[0]_i_4_n_0 ),
        .I1(align_done_i_11_n_0),
        .O(align_done_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    align_done_i_6
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .O(align_done_i_6_n_0));
  LUT6 #(
    .INIT(64'hAFAAAEAEEEAEEEEE)) 
    align_done_i_7
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[13]),
        .I3(h_reg[14]),
        .I4(h_reg[15]),
        .I5(h_reg[12]),
        .O(align_done_i_7_n_0));
  LUT6 #(
    .INIT(64'h4444445454544454)) 
    align_done_i_8
       (.I0(\start_bit[2]_i_12_n_0 ),
        .I1(align_done_i_10_n_0),
        .I2(align_done_i_12_n_0),
        .I3(align_done_i_13_n_0),
        .I4(h_reg[9]),
        .I5(align_done_i_14_n_0),
        .O(align_done_i_8_n_0));
  LUT5 #(
    .INIT(32'h0000000D)) 
    align_done_i_9
       (.I0(h_reg[14]),
        .I1(align_done_i_15_n_0),
        .I2(h_reg[9]),
        .I3(align_done_i_16_n_0),
        .I4(align_done_i_17_n_0),
        .O(align_done_i_9_n_0));
  FDRE align_done_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(align_done_i_1_n_0),
        .Q(E),
        .R(1'b0));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_18 en_hs_lpn_sync_i
       (.dl_en_hs_lpn_i(dl_en_hs_lpn_i),
        .out(en_hs_lpn_sync),
        .rx_div4_clk(rx_div4_clk));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_hs_lpn_sync_r_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(en_hs_lpn_sync),
        .Q(en_hs_lpn_sync_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hA8AAFFFFA8AA0000)) 
    errsoths_i_1
       (.I0(errsoths_i_2_n_0),
        .I1(errsoths_i_3_n_0),
        .I2(errsoths_i_4_n_0),
        .I3(errsoths_i_5_n_0),
        .I4(rxsynchs_i_3_n_0),
        .I5(dl0_errsoths),
        .O(errsoths_i_1_n_0));
  LUT6 #(
    .INIT(64'h000000000E0E0EFE)) 
    errsoths_i_10
       (.I0(h_reg[3]),
        .I1(h_reg[4]),
        .I2(h_reg[7]),
        .I3(h_reg[8]),
        .I4(h_reg[9]),
        .I5(h_reg[6]),
        .O(errsoths_i_10_n_0));
  LUT5 #(
    .INIT(32'hF7F3F333)) 
    errsoths_i_11
       (.I0(h_reg[9]),
        .I1(h_reg[6]),
        .I2(h_reg[7]),
        .I3(h_reg[10]),
        .I4(h_reg[8]),
        .O(errsoths_i_11_n_0));
  LUT5 #(
    .INIT(32'hAAAAEAAA)) 
    errsoths_i_12
       (.I0(h_reg[5]),
        .I1(h_reg[10]),
        .I2(h_reg[7]),
        .I3(h_reg[9]),
        .I4(h_reg[8]),
        .O(errsoths_i_12_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    errsoths_i_13
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[9]),
        .O(errsoths_i_13_n_0));
  LUT5 #(
    .INIT(32'h77F7F7FF)) 
    errsoths_i_14
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[9]),
        .I3(h_reg[8]),
        .I4(h_reg[10]),
        .O(errsoths_i_14_n_0));
  LUT6 #(
    .INIT(64'h0000800080006880)) 
    errsoths_i_15
       (.I0(h_reg[7]),
        .I1(h_reg[11]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .I5(h_reg[6]),
        .O(errsoths_i_15_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_16
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[9]),
        .O(errsoths_i_16_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_17
       (.I0(h_reg[13]),
        .I1(h_reg[14]),
        .I2(h_reg[15]),
        .I3(h_reg[12]),
        .I4(h_reg[11]),
        .I5(h_reg[10]),
        .O(errsoths_i_17_n_0));
  LUT6 #(
    .INIT(64'h2000000092202000)) 
    errsoths_i_18
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[10]),
        .I3(h_reg[11]),
        .I4(h_reg[9]),
        .I5(h_reg[8]),
        .O(errsoths_i_18_n_0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h2)) 
    errsoths_i_2
       (.I0(en_hs_lpn_sync_r),
        .I1(E),
        .O(errsoths_i_2_n_0));
  LUT6 #(
    .INIT(64'h4000000094404000)) 
    errsoths_i_3
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(h_reg[6]),
        .I3(h_reg[9]),
        .I4(h_reg[5]),
        .I5(h_reg[4]),
        .O(errsoths_i_3_n_0));
  LUT6 #(
    .INIT(64'h0080000080680080)) 
    errsoths_i_4
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(errsoths_i_4_n_0));
  LUT6 #(
    .INIT(64'h0E0E0E00FFFFFFFF)) 
    errsoths_i_5
       (.I0(errsoths_i_6_n_0),
        .I1(errsoths_i_7_n_0),
        .I2(errsoths_i_8_n_0),
        .I3(rxsynchs_i_4_n_0),
        .I4(errsoths_i_9_n_0),
        .I5(align_done_i_5_n_0),
        .O(errsoths_i_5_n_0));
  LUT6 #(
    .INIT(64'hBF6BFFBFFFBFFFFF)) 
    errsoths_i_6
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[11]),
        .I4(h_reg[10]),
        .I5(h_reg[12]),
        .O(errsoths_i_6_n_0));
  LUT5 #(
    .INIT(32'hAAAAFFEF)) 
    errsoths_i_7
       (.I0(errsotsynchs_i_6_n_0),
        .I1(errsoths_i_10_n_0),
        .I2(errsoths_i_11_n_0),
        .I3(errsoths_i_12_n_0),
        .I4(errsotsynchs_i_9_n_0),
        .O(errsoths_i_7_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF94009455)) 
    errsoths_i_8
       (.I0(h_reg[5]),
        .I1(h_reg[7]),
        .I2(h_reg[6]),
        .I3(errsoths_i_13_n_0),
        .I4(errsoths_i_14_n_0),
        .I5(errsoths_i_15_n_0),
        .O(errsoths_i_8_n_0));
  LUT4 #(
    .INIT(16'h0015)) 
    errsoths_i_9
       (.I0(errsoths_i_16_n_0),
        .I1(align_done_i_8_n_0),
        .I2(errsoths_i_17_n_0),
        .I3(errsoths_i_18_n_0),
        .O(errsoths_i_9_n_0));
  FDRE errsoths_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsoths_i_1_n_0),
        .Q(dl0_errsoths),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h888AFFFF888A0000)) 
    errsotsynchs_i_1
       (.I0(errsoths_i_2_n_0),
        .I1(errsotsynchs_i_2_n_0),
        .I2(errsotsynchs_i_3_n_0),
        .I3(errsotsynchs_i_4_n_0),
        .I4(rxsynchs_i_3_n_0),
        .I5(dl0_errsotsynchs),
        .O(errsotsynchs_i_1_n_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    errsotsynchs_i_10
       (.I0(h_reg[9]),
        .I1(h_reg[11]),
        .I2(h_reg[10]),
        .I3(h_reg[12]),
        .I4(h_reg[13]),
        .O(errsotsynchs_i_10_n_0));
  LUT6 #(
    .INIT(64'h0000000707070007)) 
    errsotsynchs_i_11
       (.I0(errsotsynchs_i_14_n_0),
        .I1(h_reg[13]),
        .I2(h_reg[8]),
        .I3(align_done_i_13_n_0),
        .I4(h_reg[9]),
        .I5(align_done_i_14_n_0),
        .O(errsotsynchs_i_11_n_0));
  LUT6 #(
    .INIT(64'hF0FFFFFFEEEEFFFF)) 
    errsotsynchs_i_12
       (.I0(errsotsynchs_i_15_n_0),
        .I1(align_done_i_9_n_0),
        .I2(errsotsynchs_i_16_n_0),
        .I3(align_done_i_3_n_0),
        .I4(align_done_i_8_n_0),
        .I5(errsotsynchs_i_17_n_0),
        .O(errsotsynchs_i_12_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    errsotsynchs_i_13
       (.I0(h_reg[10]),
        .I1(h_reg[7]),
        .O(errsotsynchs_i_13_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    errsotsynchs_i_14
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[12]),
        .O(errsotsynchs_i_14_n_0));
  LUT5 #(
    .INIT(32'h00800000)) 
    errsotsynchs_i_15
       (.I0(h_reg[10]),
        .I1(h_reg[11]),
        .I2(h_reg[12]),
        .I3(h_reg[13]),
        .I4(h_reg[14]),
        .O(errsotsynchs_i_15_n_0));
  LUT5 #(
    .INIT(32'h20000000)) 
    errsotsynchs_i_16
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(h_reg[13]),
        .I3(h_reg[11]),
        .I4(h_reg[12]),
        .O(errsotsynchs_i_16_n_0));
  LUT5 #(
    .INIT(32'h00045555)) 
    errsotsynchs_i_17
       (.I0(align_done_i_10_n_0),
        .I1(errsotsynchs_i_18_n_0),
        .I2(align_done_i_16_n_0),
        .I3(align_done_i_17_n_0),
        .I4(align_done_i_2_n_0),
        .O(errsotsynchs_i_17_n_0));
  LUT5 #(
    .INIT(32'h51555555)) 
    errsotsynchs_i_18
       (.I0(h_reg[9]),
        .I1(h_reg[13]),
        .I2(h_reg[12]),
        .I3(h_reg[11]),
        .I4(h_reg[14]),
        .O(errsotsynchs_i_18_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT4 #(
    .INIT(16'h005D)) 
    errsotsynchs_i_2
       (.I0(\start_bit[0]_i_4_n_0 ),
        .I1(errsotsynchs_i_5_n_0),
        .I2(errsotsynchs_i_6_n_0),
        .I3(rxsynchs_i_7_n_0),
        .O(errsotsynchs_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFF4)) 
    errsotsynchs_i_3
       (.I0(errsotsynchs_i_7_n_0),
        .I1(errsotsynchs_i_8_n_0),
        .I2(errsotsynchs_i_9_n_0),
        .I3(errsotsynchs_i_6_n_0),
        .O(errsotsynchs_i_3_n_0));
  LUT6 #(
    .INIT(64'h55540000FFFFFFFF)) 
    errsotsynchs_i_4
       (.I0(rxsynchs_i_4_n_0),
        .I1(errsotsynchs_i_10_n_0),
        .I2(errsotsynchs_i_11_n_0),
        .I3(align_done_i_10_n_0),
        .I4(errsotsynchs_i_12_n_0),
        .I5(align_done_i_5_n_0),
        .O(errsotsynchs_i_4_n_0));
  LUT6 #(
    .INIT(64'hAEFE2ABEAEEEAEFE)) 
    errsotsynchs_i_5
       (.I0(align_done_i_19_n_0),
        .I1(h_reg[5]),
        .I2(h_reg[6]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(errsotsynchs_i_5_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    errsotsynchs_i_6
       (.I0(h_reg[6]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[10]),
        .I4(h_reg[7]),
        .I5(h_reg[5]),
        .O(errsotsynchs_i_6_n_0));
  LUT6 #(
    .INIT(64'hF771FFF7FFF7FFFF)) 
    errsotsynchs_i_7
       (.I0(h_reg[12]),
        .I1(h_reg[10]),
        .I2(h_reg[11]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[9]),
        .O(errsotsynchs_i_7_n_0));
  LUT6 #(
    .INIT(64'h0000000040444444)) 
    errsotsynchs_i_8
       (.I0(errsoths_i_10_n_0),
        .I1(errsoths_i_11_n_0),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(errsotsynchs_i_13_n_0),
        .I5(h_reg[5]),
        .O(errsotsynchs_i_8_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    errsotsynchs_i_9
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(h_reg[9]),
        .I3(h_reg[7]),
        .I4(h_reg[8]),
        .I5(h_reg[6]),
        .O(errsotsynchs_i_9_n_0));
  FDRE errsotsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(errsotsynchs_i_1_n_0),
        .Q(dl0_errsotsynchs),
        .R(1'b0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[8]),
        .Q(h_reg[0]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[2]),
        .Q(h_reg[10]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[3]),
        .Q(h_reg[11]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[4]),
        .Q(h_reg[12]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[5]),
        .Q(h_reg[13]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[6]),
        .Q(h_reg[14]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[7]),
        .Q(h_reg[15]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[9]),
        .Q(h_reg[1]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[10]),
        .Q(h_reg[2]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[11]),
        .Q(h_reg[3]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[12]),
        .Q(h_reg[4]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[13]),
        .Q(h_reg[5]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[14]),
        .Q(h_reg[6]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(h_reg[15]),
        .Q(h_reg[7]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[0]),
        .Q(h_reg[8]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDRE \h_reg_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_hs_dp_r[1]),
        .Q(h_reg[9]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[0]_i_1 
       (.I0(\hs_data[4]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[0]_i_2_n_0 ),
        .O(hs_data[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[0]_i_2 
       (.I0(h_reg[4]),
        .I1(h_reg[3]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[2]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[1]),
        .O(\hs_data[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[1]_i_1 
       (.I0(\hs_data[5]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[1]_i_2_n_0 ),
        .O(hs_data[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[1]_i_2 
       (.I0(h_reg[5]),
        .I1(h_reg[4]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[3]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[2]),
        .O(\hs_data[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[2]_i_1 
       (.I0(\hs_data[6]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[2]_i_2_n_0 ),
        .O(hs_data[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[2]_i_2 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[4]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[3]),
        .O(\hs_data[2]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[3]_i_1 
       (.I0(\hs_data[7]_i_4_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[3]_i_2_n_0 ),
        .O(hs_data[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[3]_i_2 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[5]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[4]),
        .O(\hs_data[3]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[4]_i_1 
       (.I0(\hs_data[4]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[4]_i_3_n_0 ),
        .O(hs_data[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_2 
       (.I0(h_reg[12]),
        .I1(h_reg[11]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[10]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[9]),
        .O(\hs_data[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[4]_i_3 
       (.I0(h_reg[8]),
        .I1(h_reg[7]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[6]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[5]),
        .O(\hs_data[4]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[5]_i_1 
       (.I0(\hs_data[5]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[5]_i_3_n_0 ),
        .O(hs_data[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_2 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[11]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[10]),
        .O(\hs_data[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[5]_i_3 
       (.I0(h_reg[9]),
        .I1(h_reg[8]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[7]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[6]),
        .O(\hs_data[5]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[6]_i_1 
       (.I0(\hs_data[6]_i_2_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[6]_i_3_n_0 ),
        .O(hs_data[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_2 
       (.I0(h_reg[14]),
        .I1(h_reg[13]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[12]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[11]),
        .O(\hs_data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[6]_i_3 
       (.I0(h_reg[10]),
        .I1(h_reg[9]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[8]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[7]),
        .O(\hs_data[6]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \hs_data[7]_i_1 
       (.I0(en_hs_lpn_sync_r),
        .O(\hs_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \hs_data[7]_i_2 
       (.I0(\hs_data[7]_i_3_n_0 ),
        .I1(\start_bit_reg_n_0_[2] ),
        .I2(\hs_data[7]_i_4_n_0 ),
        .O(hs_data[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_3 
       (.I0(h_reg[15]),
        .I1(h_reg[14]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[13]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[12]),
        .O(\hs_data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \hs_data[7]_i_4 
       (.I0(h_reg[11]),
        .I1(h_reg[10]),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(h_reg[9]),
        .I4(\start_bit_reg_n_0_[0] ),
        .I5(h_reg[8]),
        .O(\hs_data[7]_i_4_n_0 ));
  FDRE \hs_data_reg[0] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[0]),
        .Q(dl0_rxdatahs[0]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[1] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[1]),
        .Q(dl0_rxdatahs[1]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[2] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[2]),
        .Q(dl0_rxdatahs[2]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[3] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[3]),
        .Q(dl0_rxdatahs[3]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[4] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[4]),
        .Q(dl0_rxdatahs[4]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[5] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[5]),
        .Q(dl0_rxdatahs[5]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[6] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[6]),
        .Q(dl0_rxdatahs[6]),
        .R(\hs_data[7]_i_1_n_0 ));
  FDRE \hs_data_reg[7] 
       (.C(rx_div4_clk),
        .CE(E),
        .D(hs_data[7]),
        .Q(dl0_rxdatahs[7]),
        .R(\hs_data[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hC8)) 
    hs_dvalid_i_1
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(hs_dvalid_reg_0),
        .O(hs_dvalid_i_1_n_0));
  FDRE hs_dvalid_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(hs_dvalid_i_1_n_0),
        .Q(hs_dvalid_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'hAAA8)) 
    \pkt_cnt_r[0]_i_1 
       (.I0(E),
        .I1(dl0_rxsynchs),
        .I2(dl0_errsoths),
        .I3(dl0_errsotsynchs),
        .O(pkt_cnt_r0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[0]),
        .Q(rx_hs_dp_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[1]),
        .Q(rx_hs_dp_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[2]),
        .Q(rx_hs_dp_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[3]),
        .Q(rx_hs_dp_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[4]),
        .Q(rx_hs_dp_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[5]),
        .Q(rx_hs_dp_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[6]),
        .Q(rx_hs_dp_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \rx_hs_dp_r_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rx_dl0_hs_dp[7]),
        .Q(rx_hs_dp_r[7]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h04FF0400)) 
    rxsynchs_i_1
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(rxsynchs_i_2_n_0),
        .I3(rxsynchs_i_3_n_0),
        .I4(dl0_rxsynchs),
        .O(rxsynchs_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000004FEF)) 
    rxsynchs_i_2
       (.I0(rxsynchs_i_4_n_0),
        .I1(rxsynchs_i_5_n_0),
        .I2(align_done_i_5_n_0),
        .I3(errsotsynchs_i_3_n_0),
        .I4(rxsynchs_i_6_n_0),
        .I5(rxsynchs_i_7_n_0),
        .O(rxsynchs_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFDFFFFFFFFF)) 
    rxsynchs_i_3
       (.I0(align_done_i_2_n_0),
        .I1(align_done_i_3_n_0),
        .I2(align_done_i_5_n_0),
        .I3(align_done_i_4_n_0),
        .I4(E),
        .I5(en_hs_lpn_sync_r),
        .O(rxsynchs_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    rxsynchs_i_4
       (.I0(\start_bit[2]_i_3_n_0 ),
        .I1(\start_bit[0]_i_5_n_0 ),
        .I2(errsoths_i_7_n_0),
        .O(rxsynchs_i_4_n_0));
  LUT4 #(
    .INIT(16'h000B)) 
    rxsynchs_i_5
       (.I0(align_done_i_2_n_0),
        .I1(errsotsynchs_i_11_n_0),
        .I2(align_done_i_10_n_0),
        .I3(\start_bit[2]_i_12_n_0 ),
        .O(rxsynchs_i_5_n_0));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    rxsynchs_i_6
       (.I0(h_reg[7]),
        .I1(h_reg[8]),
        .I2(h_reg[5]),
        .I3(h_reg[6]),
        .I4(h_reg[9]),
        .I5(h_reg[4]),
        .O(rxsynchs_i_6_n_0));
  LUT6 #(
    .INIT(64'h0080000080E80080)) 
    rxsynchs_i_7
       (.I0(h_reg[4]),
        .I1(h_reg[5]),
        .I2(h_reg[8]),
        .I3(h_reg[7]),
        .I4(h_reg[6]),
        .I5(h_reg[3]),
        .O(rxsynchs_i_7_n_0));
  FDRE rxsynchs_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(rxsynchs_i_1_n_0),
        .Q(dl0_rxsynchs),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF0F00000DD000000)) 
    \start_bit[0]_i_1 
       (.I0(\start_bit[0]_i_2_n_0 ),
        .I1(\start_bit[0]_i_3_n_0 ),
        .I2(\start_bit_reg_n_0_[0] ),
        .I3(\start_bit[0]_i_4_n_0 ),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \start_bit[0]_i_10 
       (.I0(h_reg[7]),
        .I1(h_reg[11]),
        .I2(h_reg[8]),
        .I3(h_reg[9]),
        .I4(h_reg[10]),
        .O(\start_bit[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hABABABAA)) 
    \start_bit[0]_i_11 
       (.I0(h_reg[6]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[5]),
        .I4(h_reg[4]),
        .O(\start_bit[0]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hCFEFFFEF)) 
    \start_bit[0]_i_12 
       (.I0(h_reg[7]),
        .I1(h_reg[9]),
        .I2(h_reg[8]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .O(\start_bit[0]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'hFFF2F0F0)) 
    \start_bit[0]_i_2 
       (.I0(align_done_i_2_n_0),
        .I1(align_done_i_3_n_0),
        .I2(rxsynchs_i_4_n_0),
        .I3(align_done_i_4_n_0),
        .I4(align_done_i_8_n_0),
        .O(\start_bit[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \start_bit[0]_i_3 
       (.I0(errsoths_i_7_n_0),
        .I1(\start_bit[0]_i_5_n_0 ),
        .I2(align_done_i_11_n_0),
        .O(\start_bit[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF005D)) 
    \start_bit[0]_i_4 
       (.I0(\start_bit[0]_i_6_n_0 ),
        .I1(\start_bit[0]_i_7_n_0 ),
        .I2(\start_bit[0]_i_8_n_0 ),
        .I3(h_reg[3]),
        .I4(rxsynchs_i_6_n_0),
        .I5(rxsynchs_i_7_n_0),
        .O(\start_bit[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFBBBFBFAAAAAAAA)) 
    \start_bit[0]_i_5 
       (.I0(errsotsynchs_i_9_n_0),
        .I1(\start_bit[0]_i_9_n_0 ),
        .I2(\start_bit[0]_i_10_n_0 ),
        .I3(\start_bit[0]_i_11_n_0 ),
        .I4(\start_bit[0]_i_12_n_0 ),
        .I5(errsotsynchs_i_7_n_0),
        .O(\start_bit[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \start_bit[0]_i_6 
       (.I0(h_reg[6]),
        .I1(h_reg[5]),
        .O(\start_bit[0]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'h5D5D5D55)) 
    \start_bit[0]_i_7 
       (.I0(h_reg[4]),
        .I1(h_reg[8]),
        .I2(h_reg[7]),
        .I3(h_reg[6]),
        .I4(h_reg[5]),
        .O(\start_bit[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0F0E0F0E000E0F0E)) 
    \start_bit[0]_i_8 
       (.I0(h_reg[2]),
        .I1(h_reg[1]),
        .I2(h_reg[4]),
        .I3(h_reg[5]),
        .I4(h_reg[7]),
        .I5(h_reg[8]),
        .O(\start_bit[0]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    \start_bit[0]_i_9 
       (.I0(h_reg[10]),
        .I1(h_reg[8]),
        .I2(h_reg[11]),
        .I3(h_reg[7]),
        .I4(h_reg[9]),
        .O(\start_bit[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0444444004444)) 
    \start_bit[1]_i_1 
       (.I0(\start_bit[1]_i_2_n_0 ),
        .I1(\start_bit[1]_i_3_n_0 ),
        .I2(\start_bit_reg_n_0_[1] ),
        .I3(align_done_i_5_n_0),
        .I4(en_hs_lpn_sync_r),
        .I5(E),
        .O(\start_bit[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'hEFFFEFEF)) 
    \start_bit[1]_i_2 
       (.I0(align_done_i_11_n_0),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .I3(\start_bit[2]_i_7_n_0 ),
        .I4(\start_bit[2]_i_3_n_0 ),
        .O(\start_bit[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCCC8CCC)) 
    \start_bit[1]_i_3 
       (.I0(align_done_i_3_n_0),
        .I1(align_done_i_8_n_0),
        .I2(align_done_i_2_n_0),
        .I3(align_done_i_9_n_0),
        .I4(align_done_i_10_n_0),
        .I5(\start_bit[2]_i_7_n_0 ),
        .O(\start_bit[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FF540054)) 
    \start_bit[2]_i_1 
       (.I0(\start_bit[2]_i_2_n_0 ),
        .I1(\start_bit[2]_i_3_n_0 ),
        .I2(\start_bit[2]_i_4_n_0 ),
        .I3(\start_bit[2]_i_5_n_0 ),
        .I4(\start_bit_reg_n_0_[2] ),
        .I5(\start_bit[2]_i_6_n_0 ),
        .O(\start_bit[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAAAAAAFE)) 
    \start_bit[2]_i_10 
       (.I0(h_reg[7]),
        .I1(h_reg[6]),
        .I2(h_reg[5]),
        .I3(h_reg[9]),
        .I4(h_reg[8]),
        .O(\start_bit[2]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'hF7F7FFF3)) 
    \start_bit[2]_i_11 
       (.I0(h_reg[12]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[8]),
        .I4(h_reg[11]),
        .O(\start_bit[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h20000000B2202000)) 
    \start_bit[2]_i_12 
       (.I0(h_reg[13]),
        .I1(h_reg[12]),
        .I2(h_reg[9]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .I5(h_reg[8]),
        .O(\start_bit[2]_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'hFFEF)) 
    \start_bit[2]_i_2 
       (.I0(align_done_i_11_n_0),
        .I1(E),
        .I2(en_hs_lpn_sync_r),
        .I3(\start_bit[2]_i_7_n_0 ),
        .O(\start_bit[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h555555557F777F7F)) 
    \start_bit[2]_i_3 
       (.I0(errsotsynchs_i_7_n_0),
        .I1(\start_bit[2]_i_8_n_0 ),
        .I2(\start_bit[2]_i_9_n_0 ),
        .I3(\start_bit[2]_i_10_n_0 ),
        .I4(\start_bit[2]_i_11_n_0 ),
        .I5(\start_bit[2]_i_12_n_0 ),
        .O(\start_bit[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hFD)) 
    \start_bit[2]_i_4 
       (.I0(align_done_i_2_n_0),
        .I1(align_done_i_3_n_0),
        .I2(align_done_i_4_n_0),
        .O(\start_bit[2]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \start_bit[2]_i_5 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .O(\start_bit[2]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT4 #(
    .INIT(16'h4044)) 
    \start_bit[2]_i_6 
       (.I0(E),
        .I1(en_hs_lpn_sync_r),
        .I2(\start_bit[2]_i_7_n_0 ),
        .I3(align_done_i_5_n_0),
        .O(\start_bit[2]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \start_bit[2]_i_7 
       (.I0(errsoths_i_7_n_0),
        .I1(\start_bit[0]_i_5_n_0 ),
        .O(\start_bit[2]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hDCFFC0FF)) 
    \start_bit[2]_i_8 
       (.I0(h_reg[11]),
        .I1(h_reg[9]),
        .I2(h_reg[10]),
        .I3(h_reg[8]),
        .I4(h_reg[12]),
        .O(\start_bit[2]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \start_bit[2]_i_9 
       (.I0(h_reg[8]),
        .I1(h_reg[12]),
        .I2(h_reg[9]),
        .I3(h_reg[10]),
        .I4(h_reg[11]),
        .O(\start_bit[2]_i_9_n_0 ));
  FDRE \start_bit_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[0]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \start_bit_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[1]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \start_bit_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(\start_bit[2]_i_1_n_0 ),
        .Q(\start_bit_reg_n_0_[2] ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \two_lane_hs_rx_timeout.hs_wait_count[15]_i_1 
       (.I0(hs_dvalid_reg_0),
        .I1(E),
        .O(SR));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'hB0008000)) 
    \two_lane_hs_rx_timeout.maxfrm_wait_done_i_1 
       (.I0(\two_lane_hs_rx_timeout.maxfrm_wait_done_reg ),
        .I1(\two_lane_hs_rx_timeout.maxfrm_wait_done_reg_0 ),
        .I2(hs_dvalid_reg_0),
        .I3(E),
        .I4(prmry_in),
        .O(s_level_out_d3_reg));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_support_rst_logic
   (system_rst_reg_0,
    system_rst,
    system_rst_reg_1,
    stopstate0,
    system_rst_byteclk,
    out,
    \FSM_sequential_dl_rx_state[0]_i_9__0 ,
    \gen_hs_high_rates_spec_v1_1.stopstate_reg ,
    system_rst_in,
    core_clk,
    \FSM_sequential_rst_blk_state_reg[2]_0 );
  output system_rst_reg_0;
  output system_rst;
  output system_rst_reg_1;
  output stopstate0;
  output system_rst_byteclk;
  input out;
  input \FSM_sequential_dl_rx_state[0]_i_9__0 ;
  input \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  input system_rst_in;
  input core_clk;
  input [1:0]\FSM_sequential_rst_blk_state_reg[2]_0 ;

  wire \FSM_sequential_dl_rx_state[0]_i_9__0 ;
  wire \FSM_sequential_rst_blk_state[0]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[1]_i_1_n_0 ;
  wire \FSM_sequential_rst_blk_state[2]_i_1_n_0 ;
  wire [1:0]\FSM_sequential_rst_blk_state_reg[2]_0 ;
  wire core_clk;
  wire core_rst_sync;
  wire \gen_hs_high_rates_spec_v1_1.stopstate_reg ;
  wire out;
  wire phy_rdy_sync;
  wire [2:0]rst_blk_state__0;
  wire stopstate0;
  (* DONT_TOUCH *) wire system_rst;
  (* DONT_TOUCH *) wire system_rst_byteclk;
  wire system_rst_byteclk_i_1_n_0;
  wire system_rst_byteclk_i_2_n_0;
  wire system_rst_i_1_n_0;
  wire system_rst_in;
  wire system_rst_reg_0;
  wire system_rst_reg_1;
  wire NLW_core_rst_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED;
  wire NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED;
  wire [1:0]NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED;

  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_rx_state[1]_i_9 
       (.I0(system_rst),
        .I1(out),
        .O(system_rst_reg_0));
  LUT2 #(
    .INIT(4'hB)) 
    \FSM_sequential_dl_rx_state[1]_i_9__0 
       (.I0(system_rst),
        .I1(\FSM_sequential_dl_rx_state[0]_i_9__0 ),
        .O(system_rst_reg_1));
  LUT6 #(
    .INIT(64'hAA02AA022A22200A)) 
    \FSM_sequential_rst_blk_state[0]_i_1 
       (.I0(\FSM_sequential_rst_blk_state_reg[2]_0 [1]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(phy_rdy_sync),
        .I5(rst_blk_state__0[2]),
        .O(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hA0A2A0A220222AA0)) 
    \FSM_sequential_rst_blk_state[1]_i_1 
       (.I0(\FSM_sequential_rst_blk_state_reg[2]_0 [1]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(phy_rdy_sync),
        .I5(rst_blk_state__0[2]),
        .O(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAA8AAA880888000)) 
    \FSM_sequential_rst_blk_state[2]_i_1 
       (.I0(\FSM_sequential_rst_blk_state_reg[2]_0 [1]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I2(rst_blk_state__0[1]),
        .I3(rst_blk_state__0[0]),
        .I4(phy_rdy_sync),
        .I5(rst_blk_state__0[2]),
        .O(\FSM_sequential_rst_blk_state[2]_i_1_n_0 ));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[0]_i_1_n_0 ),
        .Q(rst_blk_state__0[0]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[1]_i_1_n_0 ),
        .Q(rst_blk_state__0[1]));
  (* FSM_ENCODED_STATES = "RST_BEGIN:000,RELEASE_PHY_RESET:010,ASSERT_ALL_RESETS:001,RESET_FSM_DONE:011,CHECK_SRST:100" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_rst_blk_state_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .CLR(core_rst_sync),
        .D(\FSM_sequential_rst_blk_state[2]_i_1_n_0 ),
        .Q(rst_blk_state__0[2]));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__5 core_rst_sync_i
       (.prmry_ack(NLW_core_rst_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(system_rst_in),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(core_rst_sync),
        .scndry_rst_n(1'b1),
        .scndry_vect_out(NLW_core_rst_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT2 #(
    .INIT(4'hB)) 
    \gen_hs_high_rates_spec_v1_1.stopstate_i_1__0 
       (.I0(system_rst),
        .I1(\gen_hs_high_rates_spec_v1_1.stopstate_reg ),
        .O(stopstate0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* c_cdc_type = "2'b01" *) 
  (* c_flop_input = "1'b0" *) 
  (* c_mtbf_stages = "3" *) 
  (* c_reset_state = "1'b1" *) 
  (* c_single_bit = "1'b1" *) 
  (* c_vector_width = "8'b00000010" *) 
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__6 phy_rdy_sync_i
       (.prmry_ack(NLW_phy_rdy_sync_i_prmry_ack_UNCONNECTED),
        .prmry_aclk(1'b0),
        .prmry_in(1'b1),
        .prmry_rst_n(1'b1),
        .prmry_vect_in({1'b0,1'b0}),
        .scndry_aclk(core_clk),
        .scndry_out(phy_rdy_sync),
        .scndry_rst_n(1'b1),
        .scndry_vect_out(NLW_phy_rdy_sync_i_scndry_vect_out_UNCONNECTED[1:0]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAA0200)) 
    system_rst_byteclk_i_1
       (.I0(system_rst_byteclk),
        .I1(rst_blk_state__0[2]),
        .I2(rst_blk_state__0[0]),
        .I3(rst_blk_state__0[1]),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I5(system_rst_byteclk_i_2_n_0),
        .O(system_rst_byteclk_i_1_n_0));
  LUT6 #(
    .INIT(64'h44005545FFFFFFFF)) 
    system_rst_byteclk_i_2
       (.I0(rst_blk_state__0[2]),
        .I1(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I2(phy_rdy_sync),
        .I3(rst_blk_state__0[0]),
        .I4(rst_blk_state__0[1]),
        .I5(\FSM_sequential_rst_blk_state_reg[2]_0 [1]),
        .O(system_rst_byteclk_i_2_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_byteclk_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_byteclk_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst_byteclk));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAA0200)) 
    system_rst_i_1
       (.I0(system_rst),
        .I1(rst_blk_state__0[2]),
        .I2(rst_blk_state__0[0]),
        .I3(rst_blk_state__0[1]),
        .I4(\FSM_sequential_rst_blk_state_reg[2]_0 [0]),
        .I5(system_rst_byteclk_i_2_n_0),
        .O(system_rst_i_1_n_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  FDPE system_rst_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(system_rst_i_1_n_0),
        .PRE(core_rst_sync),
        .Q(system_rst));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* c_cdc_type = "2'b01" *) (* c_flop_input = "1'b0" *) 
(* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) (* c_single_bit = "1'b1" *) 
(* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = \<const0> ;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__1
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__2
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__3
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__4
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire p_0_in;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;
  wire scndry_rst_n;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h1)) 
    s_level_out_d1_cdc_to_i_1
       (.I0(scndry_rst_n),
        .O(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(p_0_in));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(p_0_in));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__5
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  wire prmry_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(prmry_in),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) (* c_cdc_type = "2'b01" *) 
(* c_flop_input = "1'b0" *) (* c_mtbf_stages = "3" *) (* c_reset_state = "1'b1" *) 
(* c_single_bit = "1'b1" *) (* c_vector_width = "8'b00000010" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__6
   (prmry_aclk,
    prmry_rst_n,
    prmry_in,
    prmry_vect_in,
    scndry_aclk,
    scndry_rst_n,
    prmry_ack,
    scndry_out,
    scndry_vect_out);
  input prmry_aclk;
  input prmry_rst_n;
  input prmry_in;
  input [1:0]prmry_vect_in;
  input scndry_aclk;
  input scndry_rst_n;
  output prmry_ack;
  output scndry_out;
  output [1:0]scndry_vect_out;

  wire \<const0> ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire scndry_aclk;

  assign prmry_ack = \<const0> ;
  assign scndry_out = s_level_out_d3;
  assign scndry_vect_out[1] = \<const0> ;
  assign scndry_vect_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(scndry_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0
   (cl_enable,
    core_clk);
  input cl_enable;
  input core_clk;

  wire cl_enable;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_1
   (clk_active_r,
    core_clk);
  input clk_active_r;
  input core_clk;

  wire clk_active_r;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(clk_active_r),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_10
   (rx_div4_clk);
  input rx_div4_clk;

  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_13
   (out,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ,
    dl_en_hs_lpn_reg,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ,
    rxactivehs_coreclk_sync_r,
    dl_state,
    dl_en_hs_lpn_i);
  output out;
  output \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ;
  output dl_en_hs_lpn_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ;
  input \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ;
  input rxactivehs_coreclk_sync_r;
  input [1:0]dl_state;
  input dl_en_hs_lpn_i;

  wire core_clk;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_reg;
  wire [1:0]dl_state;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_i_2_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ;
  wire rxactivehs_coreclk_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT6 #(
    .INIT(64'h0000000088880F00)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[1]_i_2 
       (.I0(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ),
        .I1(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ),
        .I2(rxactivehs_coreclk_sync_r),
        .I3(s_level_out_d2),
        .I4(dl_state[0]),
        .I5(dl_state[1]),
        .O(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg ));
  LUT6 #(
    .INIT(64'hF0DF0080F3DF0080)) 
    \gen_hs_high_rates_spec_v1_1.active_sm_r_i_1 
       (.I0(\gen_hs_high_rates_spec_v1_1.active_sm_r_i_2_n_0 ),
        .I1(dl_en_hs_lpn_i),
        .I2(dl_state[1]),
        .I3(dl_state[0]),
        .I4(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ),
        .I5(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ),
        .O(dl_en_hs_lpn_reg));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_hs_high_rates_spec_v1_1.active_sm_r_i_2 
       (.I0(rxactivehs_coreclk_sync_r),
        .I1(s_level_out_d2),
        .O(\gen_hs_high_rates_spec_v1_1.active_sm_r_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_14
   (out,
    \bit_cnt_reg[0] ,
    D,
    s_level_out_d2_reg_0,
    s_level_out_d2_reg_1,
    dl_status_reg_bit_626_out,
    p_1_in,
    \FSM_sequential_dl_rx_state_reg[0] ,
    rxwaitesc_r,
    \FSM_sequential_dl_rx_state_reg[4] ,
    lp_00_r_reg,
    E,
    dl_erresc_reg,
    dl_stopstate_reg,
    \lpdt_data_r_reg[7] ,
    \FSM_sequential_dl_rx_state_reg[2] ,
    \lpdt_data_r_reg[0] ,
    \byte_cnt_reg[1] ,
    \byte_cnt_reg[1]_0 ,
    lp_clk_reg,
    lp_11_r_reg,
    dl_status_reg_bit_1_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    dl_ulpsactivenot_reg,
    lp_clk_reg_0,
    dl_errcontrol_reg,
    errsyncesc_r_reg,
    dl_en_hs_lpn_reg,
    \bit_cnt_reg[1] ,
    \bit_cnt_reg[2] ,
    \bit_cnt_reg[3] ,
    core_rst,
    dl0_enable,
    core_clk,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    p_2_in66_in,
    lp_00_r,
    \bit_cnt_reg[0]_2 ,
    \FSM_sequential_dl_rx_state_reg[3] ,
    dl_stopstate_reg_0,
    \FSM_sequential_dl_rx_state_reg[3]_0 ,
    \FSM_sequential_dl_rx_state_reg[3]_1 ,
    lp_10_r,
    dl_status_reg_bit_1_reg_0,
    dl_status_reg_bit_4_reg,
    dl_status_reg_bit_4_reg_0,
    lp_01_r,
    dl_status_reg_bit_1_i_2_0,
    dl_status_reg_bit_6_reg,
    dl_status_reg_bit_6_reg_0,
    dl_ulpsactivenot_reg_0,
    \FSM_sequential_dl_rx_state_reg[1] ,
    Q,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    \byte_cnt_reg[0] ,
    lp_clk_reg_1,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    dl_errcontrol_reg_0,
    dl_errcontrol_i_2_0,
    dl_ulpsactivenot_reg_1,
    dl_status_reg_bit_1_i_2_1,
    dl_stopstate_reg_1,
    system_rst,
    \lpdt_data_r_reg[0]_0 ,
    dl_stopstate_reg_2,
    dl_stopstate_reg_3,
    dl_stopstate_reg_4,
    dl_stopstate_reg_5,
    dl_stopstate_reg_6,
    dl_status_reg_bit_6_i_5,
    dl_status_reg_bit_6_i_5_0,
    dl_status_reg_bit_6_i_5_1,
    \bit_cnt_reg[1]_0 ,
    dl_stopstate,
    dl_forcerxmode_ris_edge,
    dl_status_reg_bit_6_reg_1,
    dl_status_reg,
    dl_status_reg_bit_6_reg_2,
    dl_status_reg_bit_6_reg_3,
    \FSM_sequential_dl_rx_state_reg[1]_1 ,
    dl_erresc_reg_0,
    dl_erresc_reg_1,
    dl_erresc_reg_2,
    dl0_erresc,
    dl_erresc_reg_3,
    \dl_rxtriggeresc_reg[0] ,
    \dl_rxtriggeresc_reg[3] ,
    \dl_rxtriggeresc_reg[2] ,
    \dl_rxtriggeresc_reg[1] ,
    \dl_rxtriggeresc_reg[2]_0 ,
    \dl_rxtriggeresc_reg[1]_0 ,
    lp_clk_reg_2,
    dl_status_reg_bit_4_reg_1,
    byte_cnt,
    dl_rxvalidesc_reg,
    lp_clk_reg_3,
    dl_stopstate_reg_7,
    dl_stopstate_reg_8,
    dl_status_reg_bit_1_reg_1,
    dl_status_reg_bit_1_reg_2,
    dl_status_reg_bit_1_reg_3,
    dl_ulpsactivenot_reg_2,
    dl_ulpsactivenot_reg_3,
    dl0_ulpsactivenot,
    lp_clk_reg_4,
    dl_errcontrol_reg_1,
    dl_errcontrol_reg_2,
    dl_errcontrol_reg_3,
    dl_errcontrol_reg_4,
    dl0_errcontrol,
    errsyncesc_r_reg_0,
    errsyncesc_r_reg_1,
    errsyncesc_r_reg_2,
    errsyncesc_r_reg_3,
    dl_en_hs_lpn1_out,
    dl_en_hs_lpn_reg_0,
    dl_en_hs_lpn_reg_1,
    dl_en_hs_lpn_reg_2,
    \bit_cnt_reg[1]_1 ,
    \bit_cnt_reg[2]_0 ,
    bit_cnt,
    dl_status_reg_bit_1_reg_4);
  output out;
  output \bit_cnt_reg[0] ;
  output [3:0]D;
  output s_level_out_d2_reg_0;
  output s_level_out_d2_reg_1;
  output dl_status_reg_bit_626_out;
  output [7:0]p_1_in;
  output \FSM_sequential_dl_rx_state_reg[0] ;
  output rxwaitesc_r;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output lp_00_r_reg;
  output [0:0]E;
  output dl_erresc_reg;
  output [0:0]dl_stopstate_reg;
  output [3:0]\lpdt_data_r_reg[7] ;
  output \FSM_sequential_dl_rx_state_reg[2] ;
  output [7:0]\lpdt_data_r_reg[0] ;
  output \byte_cnt_reg[1] ;
  output [0:0]\byte_cnt_reg[1]_0 ;
  output lp_clk_reg;
  output lp_11_r_reg;
  output dl_status_reg_bit_1_reg;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  output cl_rxclkactivehs_reg;
  output dl_ulpsactivenot_reg;
  output lp_clk_reg_0;
  output dl_errcontrol_reg;
  output errsyncesc_r_reg;
  output dl_en_hs_lpn_reg;
  output \bit_cnt_reg[1] ;
  output \bit_cnt_reg[2] ;
  output \bit_cnt_reg[3] ;
  input core_rst;
  input dl0_enable;
  input core_clk;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input p_2_in66_in;
  input lp_00_r;
  input \bit_cnt_reg[0]_2 ;
  input \FSM_sequential_dl_rx_state_reg[3] ;
  input dl_stopstate_reg_0;
  input \FSM_sequential_dl_rx_state_reg[3]_0 ;
  input \FSM_sequential_dl_rx_state_reg[3]_1 ;
  input lp_10_r;
  input dl_status_reg_bit_1_reg_0;
  input dl_status_reg_bit_4_reg;
  input dl_status_reg_bit_4_reg_0;
  input lp_01_r;
  input dl_status_reg_bit_1_i_2_0;
  input dl_status_reg_bit_6_reg;
  input dl_status_reg_bit_6_reg_0;
  input dl_ulpsactivenot_reg_0;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input [4:0]Q;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input \FSM_sequential_dl_rx_state_reg[4]_0 ;
  input \byte_cnt_reg[0] ;
  input lp_clk_reg_1;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[0]_1 ;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input dl_errcontrol_reg_0;
  input dl_errcontrol_i_2_0;
  input dl_ulpsactivenot_reg_1;
  input dl_status_reg_bit_1_i_2_1;
  input dl_stopstate_reg_1;
  input system_rst;
  input \lpdt_data_r_reg[0]_0 ;
  input dl_stopstate_reg_2;
  input dl_stopstate_reg_3;
  input dl_stopstate_reg_4;
  input dl_stopstate_reg_5;
  input dl_stopstate_reg_6;
  input dl_status_reg_bit_6_i_5;
  input dl_status_reg_bit_6_i_5_0;
  input dl_status_reg_bit_6_i_5_1;
  input \bit_cnt_reg[1]_0 ;
  input dl_stopstate;
  input dl_forcerxmode_ris_edge;
  input dl_status_reg_bit_6_reg_1;
  input [2:0]dl_status_reg;
  input dl_status_reg_bit_6_reg_2;
  input dl_status_reg_bit_6_reg_3;
  input \FSM_sequential_dl_rx_state_reg[1]_1 ;
  input dl_erresc_reg_0;
  input dl_erresc_reg_1;
  input dl_erresc_reg_2;
  input dl0_erresc;
  input dl_erresc_reg_3;
  input \dl_rxtriggeresc_reg[0] ;
  input [7:0]\dl_rxtriggeresc_reg[3] ;
  input \dl_rxtriggeresc_reg[2] ;
  input \dl_rxtriggeresc_reg[1] ;
  input \dl_rxtriggeresc_reg[2]_0 ;
  input \dl_rxtriggeresc_reg[1]_0 ;
  input lp_clk_reg_2;
  input dl_status_reg_bit_4_reg_1;
  input [1:0]byte_cnt;
  input dl_rxvalidesc_reg;
  input lp_clk_reg_3;
  input dl_stopstate_reg_7;
  input dl_stopstate_reg_8;
  input dl_status_reg_bit_1_reg_1;
  input dl_status_reg_bit_1_reg_2;
  input dl_status_reg_bit_1_reg_3;
  input dl_ulpsactivenot_reg_2;
  input dl_ulpsactivenot_reg_3;
  input dl0_ulpsactivenot;
  input lp_clk_reg_4;
  input dl_errcontrol_reg_1;
  input dl_errcontrol_reg_2;
  input dl_errcontrol_reg_3;
  input dl_errcontrol_reg_4;
  input dl0_errcontrol;
  input errsyncesc_r_reg_0;
  input errsyncesc_r_reg_1;
  input errsyncesc_r_reg_2;
  input errsyncesc_r_reg_3;
  input dl_en_hs_lpn1_out;
  input dl_en_hs_lpn_reg_0;
  input dl_en_hs_lpn_reg_1;
  input dl_en_hs_lpn_reg_2;
  input \bit_cnt_reg[1]_1 ;
  input \bit_cnt_reg[2]_0 ;
  input bit_cnt;
  input dl_status_reg_bit_1_reg_4;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[0]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_5_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_10_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_4_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_5_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_6_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_10_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[1]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire \FSM_sequential_dl_rx_state_reg[3] ;
  wire \FSM_sequential_dl_rx_state_reg[3]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[3]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire bit_cnt;
  wire \bit_cnt[3]_i_3_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire \bit_cnt_reg[1] ;
  wire \bit_cnt_reg[1]_0 ;
  wire \bit_cnt_reg[1]_1 ;
  wire \bit_cnt_reg[2] ;
  wire \bit_cnt_reg[2]_0 ;
  wire \bit_cnt_reg[3] ;
  wire [1:0]byte_cnt;
  wire \byte_cnt_reg[0] ;
  wire \byte_cnt_reg[1] ;
  wire [0:0]\byte_cnt_reg[1]_0 ;
  wire cl_rxclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl0_enable;
  wire dl0_errcontrol;
  wire dl0_erresc;
  wire dl0_ulpsactivenot;
  wire dl_en_hs_lpn1_out;
  wire dl_en_hs_lpn_reg;
  wire dl_en_hs_lpn_reg_0;
  wire dl_en_hs_lpn_reg_1;
  wire dl_en_hs_lpn_reg_2;
  wire dl_errcontrol7_out;
  wire dl_errcontrol_i_2_0;
  wire dl_errcontrol_i_7_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire dl_errcontrol_reg_2;
  wire dl_errcontrol_reg_3;
  wire dl_errcontrol_reg_4;
  wire dl_erresc_reg;
  wire dl_erresc_reg_0;
  wire dl_erresc_reg_1;
  wire dl_erresc_reg_2;
  wire dl_erresc_reg_3;
  wire dl_forcerxmode_ris_edge;
  wire \dl_rxtriggeresc[3]_i_4_n_0 ;
  wire \dl_rxtriggeresc_reg[0] ;
  wire \dl_rxtriggeresc_reg[1] ;
  wire \dl_rxtriggeresc_reg[1]_0 ;
  wire \dl_rxtriggeresc_reg[2] ;
  wire \dl_rxtriggeresc_reg[2]_0 ;
  wire [7:0]\dl_rxtriggeresc_reg[3] ;
  wire dl_rxvalidesc_reg;
  wire [2:0]dl_status_reg;
  wire dl_status_reg_bit_135_out;
  wire dl_status_reg_bit_1_i_12_n_0;
  wire dl_status_reg_bit_1_i_2_0;
  wire dl_status_reg_bit_1_i_2_1;
  wire dl_status_reg_bit_1_i_7_n_0;
  wire dl_status_reg_bit_1_i_8_n_0;
  wire dl_status_reg_bit_1_i_9_n_0;
  wire dl_status_reg_bit_1_reg;
  wire dl_status_reg_bit_1_reg_0;
  wire dl_status_reg_bit_1_reg_1;
  wire dl_status_reg_bit_1_reg_2;
  wire dl_status_reg_bit_1_reg_3;
  wire dl_status_reg_bit_1_reg_4;
  wire dl_status_reg_bit_4_i_3_n_0;
  wire dl_status_reg_bit_4_reg;
  wire dl_status_reg_bit_4_reg_0;
  wire dl_status_reg_bit_4_reg_1;
  wire dl_status_reg_bit_626_out;
  wire dl_status_reg_bit_6_i_2_n_0;
  wire dl_status_reg_bit_6_i_5;
  wire dl_status_reg_bit_6_i_5_0;
  wire dl_status_reg_bit_6_i_5_1;
  wire dl_status_reg_bit_6_reg;
  wire dl_status_reg_bit_6_reg_0;
  wire dl_status_reg_bit_6_reg_1;
  wire dl_status_reg_bit_6_reg_2;
  wire dl_status_reg_bit_6_reg_3;
  wire dl_stopstate;
  wire dl_stopstate_i_2_n_0;
  wire dl_stopstate_i_4_n_0;
  wire [0:0]dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire dl_stopstate_reg_3;
  wire dl_stopstate_reg_4;
  wire dl_stopstate_reg_5;
  wire dl_stopstate_reg_6;
  wire dl_stopstate_reg_7;
  wire dl_stopstate_reg_8;
  wire dl_ulpsactivenot_i_6_n_0;
  wire dl_ulpsactivenot_reg;
  wire dl_ulpsactivenot_reg_0;
  wire dl_ulpsactivenot_reg_1;
  wire dl_ulpsactivenot_reg_2;
  wire dl_ulpsactivenot_reg_3;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire errsyncesc_r_reg;
  wire errsyncesc_r_reg_0;
  wire errsyncesc_r_reg_1;
  wire errsyncesc_r_reg_2;
  wire errsyncesc_r_reg_3;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_11_r_reg;
  wire lp_clk_i_2_n_0;
  wire lp_clk_i_4_n_0;
  wire lp_clk_i_6_n_0;
  wire lp_clk_i_8_n_0;
  wire lp_clk_reg;
  wire lp_clk_reg_0;
  wire lp_clk_reg_1;
  wire lp_clk_reg_2;
  wire lp_clk_reg_3;
  wire lp_clk_reg_4;
  wire [7:0]\lpdt_data_r_reg[0] ;
  wire \lpdt_data_r_reg[0]_0 ;
  wire [3:0]\lpdt_data_r_reg[7] ;
  wire [7:0]p_1_in;
  wire p_2_in66_in;
  wire rxwaitesc_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  wire s_level_out_d2_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_dl_rx_state[0]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_1 ),
        .I3(\FSM_sequential_dl_rx_state[0]_i_5_n_0 ),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF020500020205000)) 
    \FSM_sequential_dl_rx_state[0]_i_2 
       (.I0(lp_00_r),
        .I1(lp_10_r),
        .I2(p_1_in[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(lp_01_r),
        .O(\FSM_sequential_dl_rx_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    \FSM_sequential_dl_rx_state[0]_i_5 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_10_n_0 ),
        .I1(Q[2]),
        .I2(lp_10_r),
        .I3(\FSM_sequential_dl_rx_state[0]_i_8_n_0 ),
        .I4(\byte_cnt_reg[0] ),
        .I5(dl_ulpsactivenot_reg_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h002F)) 
    \FSM_sequential_dl_rx_state[0]_i_8 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .O(\FSM_sequential_dl_rx_state[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF2)) 
    \FSM_sequential_dl_rx_state[1]_i_1 
       (.I0(s_level_out_d2_reg_1),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(\FSM_sequential_dl_rx_state[1]_i_2_n_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[1] ),
        .I4(\FSM_sequential_dl_rx_state[1]_i_4_n_0 ),
        .I5(\FSM_sequential_dl_rx_state[1]_i_5_n_0 ),
        .O(D[1]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \FSM_sequential_dl_rx_state[1]_i_10 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_rx_state[1]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    \FSM_sequential_dl_rx_state[1]_i_2 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[1]_1 ),
        .I2(Q[3]),
        .I3(p_1_in[0]),
        .I4(lp_clk_reg_1),
        .I5(lp_01_r),
        .O(\FSM_sequential_dl_rx_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h02020202FF020202)) 
    \FSM_sequential_dl_rx_state[1]_i_4 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6_n_0 ),
        .I1(dl_stopstate_reg_0),
        .I2(Q[2]),
        .I3(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I4(p_1_in[0]),
        .I5(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000001111F000)) 
    \FSM_sequential_dl_rx_state[1]_i_5 
       (.I0(dl_ulpsactivenot_reg_1),
        .I1(\lpdt_data_r_reg[0]_0 ),
        .I2(\FSM_sequential_dl_rx_state[1]_i_10_n_0 ),
        .I3(\byte_cnt_reg[0] ),
        .I4(Q[0]),
        .I5(dl_status_reg_bit_4_reg_0),
        .O(\FSM_sequential_dl_rx_state[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00002F0000000000)) 
    \FSM_sequential_dl_rx_state[1]_i_6 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[0]),
        .I4(Q[4]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \FSM_sequential_dl_rx_state[2]_i_3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(lp_00_r),
        .I3(Q[0]),
        .I4(lp_10_r),
        .I5(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[2] ));
  LUT5 #(
    .INIT(32'hFFFFFFF2)) 
    \FSM_sequential_dl_rx_state[3]_i_1 
       (.I0(\FSM_sequential_dl_rx_state_reg[3] ),
        .I1(dl_stopstate_reg_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 ),
        .I3(s_level_out_d2_reg_0),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_1 ),
        .O(D[2]));
  LUT3 #(
    .INIT(8'hD0)) 
    \FSM_sequential_dl_rx_state[3]_i_4 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \FSM_sequential_dl_rx_state[4]_i_10 
       (.I0(dl_status_reg_bit_4_reg_1),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(s_level_out_d2_reg_1),
        .O(\FSM_sequential_dl_rx_state[4]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0400)) 
    \FSM_sequential_dl_rx_state[4]_i_2 
       (.I0(dl_ulpsactivenot_reg_0),
        .I1(lp_01_r),
        .I2(Q[1]),
        .I3(s_level_out_d2_reg_1),
        .I4(\FSM_sequential_dl_rx_state[4]_i_10_n_0 ),
        .I5(\FSM_sequential_dl_rx_state_reg[4]_0 ),
        .O(D[3]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \FSM_sequential_dl_rx_state[4]_i_9 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .O(s_level_out_d2_reg_1));
  LUT6 #(
    .INIT(64'h00000000B9AAAAAA)) 
    \bit_cnt[0]_i_1 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(p_2_in66_in),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_ulpsactivenot_i_6_n_0),
        .O(\bit_cnt_reg[0] ));
  LUT6 #(
    .INIT(64'h0A000A060A0A0A0A)) 
    \bit_cnt[1]_i_1 
       (.I0(\bit_cnt_reg[1]_1 ),
        .I1(\bit_cnt_reg[0]_0 ),
        .I2(dl_ulpsactivenot_i_6_n_0),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(p_2_in66_in),
        .I5(\bit_cnt_reg[1]_0 ),
        .O(\bit_cnt_reg[1] ));
  LUT6 #(
    .INIT(64'h000000009AAAAAAA)) 
    \bit_cnt[2]_i_1 
       (.I0(\bit_cnt_reg[2]_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(\bit_cnt_reg[1]_0 ),
        .I3(\bit_cnt_reg[0]_0 ),
        .I4(\bit_cnt_reg[1]_1 ),
        .I5(\bit_cnt[3]_i_3_n_0 ),
        .O(\bit_cnt_reg[2] ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \bit_cnt[3]_i_1 
       (.I0(p_2_in66_in),
        .I1(bit_cnt),
        .I2(\bit_cnt_reg[1]_1 ),
        .I3(\bit_cnt_reg[0]_0 ),
        .I4(\bit_cnt_reg[2]_0 ),
        .I5(\bit_cnt[3]_i_3_n_0 ),
        .O(\bit_cnt_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF08FF)) 
    \bit_cnt[3]_i_3 
       (.I0(\bit_cnt_reg[1]_0 ),
        .I1(p_2_in66_in),
        .I2(\bit_cnt_reg[0]_1 ),
        .I3(s_level_out_d2),
        .I4(dl_stopstate),
        .I5(dl_forcerxmode_ris_edge),
        .O(\bit_cnt[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFC840)) 
    \byte_cnt[1]_i_3 
       (.I0(Q[0]),
        .I1(\byte_cnt_reg[0] ),
        .I2(lp_clk_reg_1),
        .I3(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I4(rxwaitesc_r),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_rx_state_reg[0] ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    dl_en_hs_lpn_i_1
       (.I0(dl_en_hs_lpn1_out),
        .I1(\FSM_sequential_dl_rx_state_reg[4] ),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_en_hs_lpn_reg_1),
        .I4(dl_en_hs_lpn_reg_2),
        .O(dl_en_hs_lpn_reg));
  LUT5 #(
    .INIT(32'hFFFF0080)) 
    dl_en_hs_lpn_i_3
       (.I0(dl_status_reg_bit_1_reg_0),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(dl_status_reg_bit_4_reg_1),
        .I4(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    dl_errcontrol_i_1
       (.I0(dl_errcontrol7_out),
        .I1(dl_errcontrol_reg_1),
        .I2(dl_errcontrol_reg_2),
        .I3(dl_errcontrol_reg_3),
        .I4(dl_errcontrol_reg_4),
        .I5(dl0_errcontrol),
        .O(dl_errcontrol_reg));
  LUT6 #(
    .INIT(64'hEAEAAAAAFFEAAAAA)) 
    dl_errcontrol_i_2
       (.I0(dl_errcontrol_i_7_n_0),
        .I1(lp_00_r),
        .I2(dl_status_reg_bit_1_reg_0),
        .I3(lp_10_r),
        .I4(dl_status_reg_bit_4_reg),
        .I5(dl_errcontrol_reg_0),
        .O(dl_errcontrol7_out));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000A8)) 
    dl_errcontrol_i_7
       (.I0(s_level_out_d2_reg_1),
        .I1(dl_stopstate_reg_0),
        .I2(lp_10_r),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl_errcontrol_i_2_0),
        .O(dl_errcontrol_i_7_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFE0000)) 
    dl_erresc_i_1
       (.I0(dl_erresc_reg_0),
        .I1(dl_erresc_reg_1),
        .I2(dl_erresc_reg_2),
        .I3(dl0_erresc),
        .I4(dl_erresc_reg_3),
        .I5(rxwaitesc_r),
        .O(dl_erresc_reg));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[0]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [7]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [0]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[1]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [6]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [1]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[2]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [5]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [2]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[3]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [4]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [3]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[4]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [3]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [4]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[5]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [2]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [5]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[6]_i_1 
       (.I0(\dl_rxtriggeresc_reg[3] [1]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [6]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'hFFFF2000)) 
    \dl_rxdataesc[7]_i_1 
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_rxvalidesc_reg),
        .I3(p_2_in66_in),
        .I4(dl_ulpsactivenot_i_6_n_0),
        .O(\byte_cnt_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[7]_i_2 
       (.I0(\dl_rxtriggeresc_reg[3] [0]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [7]));
  LUT3 #(
    .INIT(8'h08)) 
    dl_rxescclk_i_1
       (.I0(lp_clk_reg_3),
        .I1(s_level_out_d2),
        .I2(dl_forcerxmode_ris_edge),
        .O(lp_clk_reg));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    dl_rxlpdtesc_i_1
       (.I0(core_rst),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(dl_forcerxmode_ris_edge),
        .I4(dl_stopstate),
        .O(rxwaitesc_r));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \dl_rxtriggeresc[0]_i_1 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[3] [0]),
        .I2(\dl_rxtriggeresc_reg[3] [1]),
        .I3(\dl_rxtriggeresc_reg[3] [2]),
        .I4(\dl_rxtriggeresc_reg[1]_0 ),
        .I5(rxwaitesc_r),
        .O(\lpdt_data_r_reg[7] [0]));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \dl_rxtriggeresc[1]_i_1 
       (.I0(rxwaitesc_r),
        .I1(\dl_rxtriggeresc_reg[3] [2]),
        .I2(\dl_rxtriggeresc_reg[3] [0]),
        .I3(\dl_rxtriggeresc_reg[1]_0 ),
        .I4(\dl_rxtriggeresc_reg[3] [1]),
        .I5(\dl_rxtriggeresc_reg[1] ),
        .O(\lpdt_data_r_reg[7] [1]));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \dl_rxtriggeresc[2]_i_1 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[2]_0 ),
        .I2(\dl_rxtriggeresc_reg[3] [0]),
        .I3(\dl_rxtriggeresc_reg[3] [7]),
        .I4(\dl_rxtriggeresc_reg[3] [6]),
        .I5(rxwaitesc_r),
        .O(\lpdt_data_r_reg[7] [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \dl_rxtriggeresc[3]_i_1 
       (.I0(\dl_rxtriggeresc_reg[0] ),
        .I1(dl_stopstate),
        .I2(dl_forcerxmode_ris_edge),
        .I3(s_level_out_d2),
        .I4(system_rst),
        .I5(core_rst),
        .O(dl_stopstate_reg));
  LUT5 #(
    .INIT(32'hAFAEAEAF)) 
    \dl_rxtriggeresc[3]_i_2 
       (.I0(\dl_rxtriggeresc[3]_i_4_n_0 ),
        .I1(\dl_rxtriggeresc_reg[3] [7]),
        .I2(rxwaitesc_r),
        .I3(\dl_rxtriggeresc_reg[3] [0]),
        .I4(\dl_rxtriggeresc_reg[3] [1]),
        .O(\lpdt_data_r_reg[7] [3]));
  LUT6 #(
    .INIT(64'h00000000FFCFAFFA)) 
    \dl_rxtriggeresc[3]_i_4 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[1] ),
        .I2(\dl_rxtriggeresc_reg[3] [6]),
        .I3(\dl_rxtriggeresc_reg[3] [1]),
        .I4(\dl_rxtriggeresc_reg[3] [2]),
        .I5(rxwaitesc_r),
        .O(\dl_rxtriggeresc[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT5 #(
    .INIT(32'h00002000)) 
    dl_rxvalidesc_i_1
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_rxvalidesc_reg),
        .I3(p_2_in66_in),
        .I4(dl_ulpsactivenot_i_6_n_0),
        .O(\byte_cnt_reg[1] ));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    dl_status_reg_bit_1_i_1
       (.I0(dl_status_reg_bit_135_out),
        .I1(dl_status_reg_bit_1_reg_1),
        .I2(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I3(dl_status_reg_bit_1_reg_2),
        .I4(dl_status_reg_bit_1_reg_3),
        .I5(dl_status_reg[0]),
        .O(dl_status_reg_bit_1_reg));
  LUT5 #(
    .INIT(32'h0000002F)) 
    dl_status_reg_bit_1_i_12
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .I4(Q[1]),
        .O(dl_status_reg_bit_1_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    dl_status_reg_bit_1_i_2
       (.I0(dl_status_reg_bit_1_i_7_n_0),
        .I1(lp_10_r),
        .I2(dl_status_reg_bit_1_reg_0),
        .I3(dl_status_reg_bit_4_reg),
        .I4(dl_status_reg_bit_1_i_8_n_0),
        .I5(dl_status_reg_bit_1_i_9_n_0),
        .O(dl_status_reg_bit_135_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF8A8A8A)) 
    dl_status_reg_bit_1_i_4
       (.I0(\lpdt_data_r_reg[0]_0 ),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_status_reg_bit_1_reg_4),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    dl_status_reg_bit_1_i_7
       (.I0(s_level_out_d2_reg_1),
        .I1(lp_00_r),
        .I2(dl_status_reg_bit_4_reg_0),
        .I3(lp_clk_i_6_n_0),
        .I4(lp_01_r),
        .I5(dl_status_reg_bit_1_i_2_0),
        .O(dl_status_reg_bit_1_i_7_n_0));
  LUT6 #(
    .INIT(64'h880088F088008800)) 
    dl_status_reg_bit_1_i_8
       (.I0(dl_status_reg_bit_1_i_12_n_0),
        .I1(lp_00_r),
        .I2(p_1_in[0]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_reg_1),
        .I5(dl_status_reg_bit_1_i_2_1),
        .O(dl_status_reg_bit_1_i_8_n_0));
  LUT6 #(
    .INIT(64'hF888888800000000)) 
    dl_status_reg_bit_1_i_9
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6_n_0 ),
        .I1(lp_01_r),
        .I2(\FSM_sequential_dl_rx_state[0]_i_8_n_0 ),
        .I3(Q[0]),
        .I4(lp_10_r),
        .I5(Q[2]),
        .O(dl_status_reg_bit_1_i_9_n_0));
  LUT6 #(
    .INIT(64'h1000FFFF10000000)) 
    dl_status_reg_bit_4_i_1
       (.I0(dl_status_reg_bit_4_reg_1),
        .I1(dl_status_reg_bit_4_reg_0),
        .I2(Q[1]),
        .I3(dl_status_reg_bit_4_reg),
        .I4(dl_status_reg_bit_4_i_3_n_0),
        .I5(dl_status_reg[1]),
        .O(cl_rxclkactivehs_reg));
  LUT6 #(
    .INIT(64'hCFEECCCCCCCCCCCC)) 
    dl_status_reg_bit_4_i_3
       (.I0(dl_stopstate_reg_0),
        .I1(s_level_out_d2_reg_0),
        .I2(dl_status_reg_bit_4_reg_1),
        .I3(Q[1]),
        .I4(Q[4]),
        .I5(dl_status_reg_bit_1_reg_0),
        .O(dl_status_reg_bit_4_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEFEEE)) 
    dl_status_reg_bit_6_i_1
       (.I0(dl_status_reg_bit_6_i_2_n_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_10_n_0 ),
        .I2(dl_status_reg_bit_6_reg),
        .I3(dl_status_reg_bit_4_reg),
        .I4(lp_10_r),
        .I5(dl_status_reg_bit_6_reg_0),
        .O(dl_status_reg_bit_626_out));
  LUT6 #(
    .INIT(64'h80F0808080808080)) 
    dl_status_reg_bit_6_i_2
       (.I0(dl_status_reg_bit_6_reg_1),
        .I1(dl_status_reg[2]),
        .I2(\FSM_sequential_dl_rx_state[0]_i_8_n_0 ),
        .I3(dl_status_reg_bit_6_reg_2),
        .I4(dl_stopstate_reg_0),
        .I5(dl_status_reg_bit_6_reg_3),
        .O(dl_status_reg_bit_6_i_2_n_0));
  LUT6 #(
    .INIT(64'h888888F800000000)) 
    dl_status_reg_bit_6_i_9
       (.I0(dl_status_reg_bit_6_i_5),
        .I1(dl_status_reg_bit_6_i_5_0),
        .I2(dl_status_reg_bit_6_i_5_1),
        .I3(lp_00_r),
        .I4(lp_01_r),
        .I5(p_1_in[0]),
        .O(lp_00_r_reg));
  LUT6 #(
    .INIT(64'hEAEAEAFFEAEAEA00)) 
    dl_stopstate_i_1
       (.I0(dl_stopstate_i_2_n_0),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_reg_7),
        .I3(dl_stopstate_i_4_n_0),
        .I4(dl_stopstate_reg_8),
        .I5(dl_stopstate),
        .O(lp_11_r_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAEAAAAA)) 
    dl_stopstate_i_2
       (.I0(dl_stopstate_reg_1),
        .I1(Q[3]),
        .I2(dl_stopstate_reg_0),
        .I3(Q[4]),
        .I4(p_1_in[0]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_10_n_0 ),
        .O(dl_stopstate_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    dl_stopstate_i_4
       (.I0(dl_stopstate_reg_2),
        .I1(\FSM_sequential_dl_rx_state_reg[4] ),
        .I2(dl_stopstate_reg_3),
        .I3(dl_stopstate_reg_4),
        .I4(dl_stopstate_reg_5),
        .I5(dl_stopstate_reg_6),
        .O(dl_stopstate_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFEFFFFFE00)) 
    dl_ulpsactivenot_i_1
       (.I0(dl_ulpsactivenot_reg_1),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(dl_ulpsactivenot_reg_2),
        .I3(dl_ulpsactivenot_reg_3),
        .I4(dl_ulpsactivenot_i_6_n_0),
        .I5(dl0_ulpsactivenot),
        .O(dl_ulpsactivenot_reg));
  LUT3 #(
    .INIT(8'hEF)) 
    dl_ulpsactivenot_i_6
       (.I0(dl_forcerxmode_ris_edge),
        .I1(dl_stopstate),
        .I2(s_level_out_d2),
        .O(dl_ulpsactivenot_i_6_n_0));
  LUT6 #(
    .INIT(64'h0700040004000400)) 
    errsyncesc_r_i_1
       (.I0(errsyncesc_r_reg_0),
        .I1(errsyncesc_r_reg_1),
        .I2(dl_forcerxmode_ris_edge),
        .I3(s_level_out_d2),
        .I4(errsyncesc_r_reg_2),
        .I5(errsyncesc_r_reg_3),
        .O(errsyncesc_r_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    lp_clk_i_1
       (.I0(lp_clk_i_2_n_0),
        .I1(lp_clk_reg_1),
        .I2(p_1_in[0]),
        .I3(lp_clk_i_4_n_0),
        .I4(lp_clk_reg_4),
        .I5(lp_clk_reg_3),
        .O(lp_clk_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00B00000)) 
    lp_clk_i_2
       (.I0(Q[1]),
        .I1(lp_01_r),
        .I2(dl_stopstate_reg_0),
        .I3(Q[4]),
        .I4(lp_clk_i_6_n_0),
        .I5(lp_clk_reg_2),
        .O(lp_clk_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFF0F2F0F0F0F0F0)) 
    lp_clk_i_4
       (.I0(Q[4]),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(lp_clk_i_8_n_0),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_status_reg_bit_4_reg),
        .O(lp_clk_i_4_n_0));
  LUT5 #(
    .INIT(32'h15110000)) 
    lp_clk_i_6
       (.I0(Q[0]),
        .I1(\lpdt_data_r_reg[0]_0 ),
        .I2(system_rst),
        .I3(s_level_out_d2),
        .I4(Q[2]),
        .O(lp_clk_i_6_n_0));
  LUT6 #(
    .INIT(64'h8000800080808000)) 
    lp_clk_i_8
       (.I0(dl_status_reg_bit_1_i_12_n_0),
        .I1(dl_stopstate_reg_0),
        .I2(Q[2]),
        .I3(lp_00_r),
        .I4(Q[0]),
        .I5(lp_10_r),
        .O(lp_clk_i_8_n_0));
  LUT4 #(
    .INIT(16'h002F)) 
    \lpdt_data_r[0]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[0]),
        .O(p_1_in[0]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[1]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [0]),
        .O(p_1_in[1]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[2]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [1]),
        .O(p_1_in[2]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[3]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [2]),
        .O(p_1_in[3]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[4]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [3]),
        .O(p_1_in[4]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[5]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [4]),
        .O(p_1_in[5]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[6]_i_1 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [5]),
        .O(p_1_in[6]));
  LUT5 #(
    .INIT(32'hFF8A8A8A)) 
    \lpdt_data_r[7]_i_1 
       (.I0(\lpdt_data_r_reg[0]_0 ),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .O(E));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[7]_i_2 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [6]),
        .O(p_1_in[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_15
   (out,
    dl_forcerxmode_ris_edge0,
    dl_forcerxmode_t0,
    \lp_st_out_reg[1] ,
    core_rst,
    dl0_forcerxmode,
    core_clk,
    dl_forcerxmode_sync_r,
    dl_forcerxmode_out,
    Q,
    \dl_lp_st_t_reg[1] );
  output out;
  output dl_forcerxmode_ris_edge0;
  output dl_forcerxmode_t0;
  output [1:0]\lp_st_out_reg[1] ;
  input core_rst;
  input dl0_forcerxmode;
  input core_clk;
  input dl_forcerxmode_sync_r;
  input dl_forcerxmode_out;
  input [1:0]Q;
  input [1:0]\dl_lp_st_t_reg[1] ;

  wire [1:0]Q;
  wire core_clk;
  wire core_rst;
  wire dl0_forcerxmode;
  wire dl_forcerxmode_out;
  wire dl_forcerxmode_ris_edge0;
  wire dl_forcerxmode_sync_r;
  wire dl_forcerxmode_t0;
  wire [1:0]\dl_lp_st_t_reg[1] ;
  wire [1:0]\lp_st_out_reg[1] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT2 #(
    .INIT(4'h2)) 
    dl_forcerxmode_ris_edge_i_1__0
       (.I0(s_level_out_d2),
        .I1(dl_forcerxmode_sync_r),
        .O(dl_forcerxmode_ris_edge0));
  LUT2 #(
    .INIT(4'hE)) 
    dl_forcerxmode_t_i_1
       (.I0(s_level_out_d2),
        .I1(dl_forcerxmode_out),
        .O(dl_forcerxmode_t0));
  LUT4 #(
    .INIT(16'hACA0)) 
    \dl_lp_st_t[0]_i_1 
       (.I0(Q[0]),
        .I1(\dl_lp_st_t_reg[1] [0]),
        .I2(s_level_out_d2),
        .I3(dl_forcerxmode_out),
        .O(\lp_st_out_reg[1] [0]));
  LUT4 #(
    .INIT(16'hACA0)) 
    \dl_lp_st_t[1]_i_1 
       (.I0(Q[1]),
        .I1(\dl_lp_st_t_reg[1] [1]),
        .I2(s_level_out_d2),
        .I3(dl_forcerxmode_out),
        .O(\lp_st_out_reg[1] [1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl0_forcerxmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_19
   (out,
    \s_level_out_bus_d3_reg[1] ,
    \cl_rx_state_reg[3] ,
    s_level_out_d2_reg_0,
    cl_rxclkactivehs1_out,
    \cl_rx_state_reg[3]_0 ,
    dl_forcerxmode_ris_edge_reg,
    core_rst,
    cl_enable,
    core_clk,
    cl_ulpsactivenot_reg,
    system_rst,
    \cl_rx_state_reg[1] ,
    dl_forcerxmode_ris_edge,
    \cl_rx_state_reg[3]_1 ,
    \cl_rx_state_reg[3]_2 ,
    \cl_rx_state_reg[3]_3 ,
    cl_rxclkactivehs_reg,
    cl_rxclkactivehs_reg_0,
    \cl_rx_state_reg[0] ,
    \cl_rx_state_reg[0]_0 ,
    cl_rx_state);
  output out;
  output \s_level_out_bus_d3_reg[1] ;
  output \cl_rx_state_reg[3] ;
  output s_level_out_d2_reg_0;
  output cl_rxclkactivehs1_out;
  output \cl_rx_state_reg[3]_0 ;
  output dl_forcerxmode_ris_edge_reg;
  input core_rst;
  input cl_enable;
  input core_clk;
  input [0:0]cl_ulpsactivenot_reg;
  input system_rst;
  input \cl_rx_state_reg[1] ;
  input dl_forcerxmode_ris_edge;
  input \cl_rx_state_reg[3]_1 ;
  input \cl_rx_state_reg[3]_2 ;
  input \cl_rx_state_reg[3]_3 ;
  input cl_rxclkactivehs_reg;
  input cl_rxclkactivehs_reg_0;
  input \cl_rx_state_reg[0] ;
  input \cl_rx_state_reg[0]_0 ;
  input [0:0]cl_rx_state;

  wire cl_enable;
  wire [0:0]cl_rx_state;
  wire \cl_rx_state_reg[0] ;
  wire \cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[1] ;
  wire \cl_rx_state_reg[3] ;
  wire \cl_rx_state_reg[3]_0 ;
  wire \cl_rx_state_reg[3]_1 ;
  wire \cl_rx_state_reg[3]_2 ;
  wire \cl_rx_state_reg[3]_3 ;
  wire cl_rxclkactivehs1_out;
  wire cl_rxclkactivehs_reg;
  wire cl_rxclkactivehs_reg_0;
  wire [0:0]cl_ulpsactivenot_reg;
  wire core_clk;
  wire core_rst;
  wire dl_forcerxmode_ris_edge;
  wire dl_forcerxmode_ris_edge_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'h00004540)) 
    \cl_rx_state[0]_i_1 
       (.I0(s_level_out_d2_reg_0),
        .I1(\cl_rx_state_reg[0] ),
        .I2(\cl_rx_state_reg[3]_2 ),
        .I3(\cl_rx_state_reg[0]_0 ),
        .I4(dl_forcerxmode_ris_edge),
        .O(\cl_rx_state_reg[3]_0 ));
  LUT5 #(
    .INIT(32'hAEFFAAAA)) 
    \cl_rx_state[1]_i_1 
       (.I0(dl_forcerxmode_ris_edge),
        .I1(s_level_out_d2),
        .I2(system_rst),
        .I3(\cl_rx_state_reg[1] ),
        .I4(cl_rx_state),
        .O(dl_forcerxmode_ris_edge_reg));
  LUT5 #(
    .INIT(32'h00004540)) 
    \cl_rx_state[3]_i_3 
       (.I0(s_level_out_d2_reg_0),
        .I1(\cl_rx_state_reg[3]_1 ),
        .I2(\cl_rx_state_reg[3]_2 ),
        .I3(\cl_rx_state_reg[3]_3 ),
        .I4(dl_forcerxmode_ris_edge),
        .O(\cl_rx_state_reg[3] ));
  LUT3 #(
    .INIT(8'hD0)) 
    \cl_rx_state[3]_i_5 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\cl_rx_state_reg[1] ),
        .O(s_level_out_d2_reg_0));
  LUT3 #(
    .INIT(8'h08)) 
    cl_rxclkactivehs_i_1
       (.I0(cl_rxclkactivehs_reg),
        .I1(s_level_out_d2),
        .I2(cl_rxclkactivehs_reg_0),
        .O(cl_rxclkactivehs1_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFDFDDDD)) 
    cl_stopstate_i_1
       (.I0(cl_ulpsactivenot_reg),
        .I1(core_rst),
        .I2(s_level_out_d2),
        .I3(system_rst),
        .I4(\cl_rx_state_reg[1] ),
        .I5(dl_forcerxmode_ris_edge),
        .O(\s_level_out_bus_d3_reg[1] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(cl_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_4
   (rx_div4_clk);
  input rx_div4_clk;

  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_5
   (out,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ,
    dl_en_hs_lpn_reg,
    s_level_out_d1_cdc_to_reg_0,
    core_clk,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ,
    \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ,
    rxactivehs_coreclk_sync_r,
    dl_state,
    dl_en_hs_lpn_i);
  output out;
  output \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ;
  output dl_en_hs_lpn_reg;
  input s_level_out_d1_cdc_to_reg_0;
  input core_clk;
  input \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ;
  input \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ;
  input rxactivehs_coreclk_sync_r;
  input [1:0]dl_state;
  input dl_en_hs_lpn_i;

  wire core_clk;
  wire dl_en_hs_lpn_i;
  wire dl_en_hs_lpn_reg;
  wire [1:0]dl_state;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_i_2__0_n_0 ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ;
  wire \gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ;
  wire rxactivehs_coreclk_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  wire s_level_out_d1_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT6 #(
    .INIT(64'h0000000088880F00)) 
    \FSM_sequential_gen_hs_high_rates_spec_v1_1.dl_state[1]_i_2__0 
       (.I0(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ),
        .I1(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ),
        .I2(rxactivehs_coreclk_sync_r),
        .I3(s_level_out_d2),
        .I4(dl_state[0]),
        .I5(dl_state[1]),
        .O(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg ));
  LUT6 #(
    .INIT(64'hF0DF0080F3DF0080)) 
    \gen_hs_high_rates_spec_v1_1.active_sm_r_i_1__0 
       (.I0(\gen_hs_high_rates_spec_v1_1.active_sm_r_i_2__0_n_0 ),
        .I1(dl_en_hs_lpn_i),
        .I2(dl_state[1]),
        .I3(dl_state[0]),
        .I4(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_0 ),
        .I5(\gen_hs_high_rates_spec_v1_1.active_sm_r_reg_1 ),
        .O(dl_en_hs_lpn_reg));
  LUT2 #(
    .INIT(4'h2)) 
    \gen_hs_high_rates_spec_v1_1.active_sm_r_i_2__0 
       (.I0(rxactivehs_coreclk_sync_r),
        .I1(s_level_out_d2),
        .O(\gen_hs_high_rates_spec_v1_1.active_sm_r_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to_reg_0),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_6
   (out,
    \bit_cnt_reg[0] ,
    D,
    s_level_out_d2_reg_0,
    s_level_out_d2_reg_1,
    dl_status_reg_bit_626_out,
    p_1_in,
    \FSM_sequential_dl_rx_state_reg[0] ,
    rxwaitesc_r,
    \FSM_sequential_dl_rx_state_reg[4] ,
    lp_00_r_reg,
    E,
    dl_erresc_reg,
    dl_stopstate_reg,
    \lpdt_data_r_reg[7] ,
    \FSM_sequential_dl_rx_state_reg[2] ,
    \lpdt_data_r_reg[0] ,
    \byte_cnt_reg[1] ,
    \byte_cnt_reg[1]_0 ,
    lp_clk_reg,
    lp_11_r_reg,
    dl_status_reg_bit_1_reg,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    cl_rxclkactivehs_reg,
    dl_ulpsactivenot_reg,
    lp_clk_reg_0,
    dl_errcontrol_reg,
    errsyncesc_r_reg,
    dl_en_hs_lpn_reg,
    \bit_cnt_reg[1] ,
    \bit_cnt_reg[2] ,
    \bit_cnt_reg[3] ,
    core_rst,
    dl1_enable,
    core_clk,
    \bit_cnt_reg[0]_0 ,
    \bit_cnt_reg[0]_1 ,
    p_2_in66_in,
    lp_00_r,
    \bit_cnt_reg[0]_2 ,
    \FSM_sequential_dl_rx_state_reg[3] ,
    dl_stopstate_reg_0,
    \FSM_sequential_dl_rx_state_reg[3]_0 ,
    \FSM_sequential_dl_rx_state_reg[3]_1 ,
    lp_10_r,
    dl_status_reg_bit_1_reg_0,
    dl_status_reg_bit_4_reg,
    dl_status_reg_bit_4_reg_0,
    lp_01_r,
    dl_status_reg_bit_1_i_2__0_0,
    dl_status_reg_bit_6_reg,
    dl_status_reg_bit_6_reg_0,
    dl_ulpsactivenot_reg_0,
    \FSM_sequential_dl_rx_state_reg[1] ,
    Q,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    \byte_cnt_reg[0] ,
    lp_clk_reg_1,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    dl_errcontrol_reg_0,
    dl_errcontrol_i_2__0_0,
    dl_ulpsactivenot_reg_1,
    dl_status_reg_bit_1_i_2__0_1,
    dl_stopstate_reg_1,
    system_rst,
    \lpdt_data_r_reg[0]_0 ,
    dl_stopstate_reg_2,
    dl_stopstate_reg_3,
    dl_stopstate_reg_4,
    dl_stopstate_reg_5,
    dl_stopstate_reg_6,
    dl_status_reg_bit_6_i_5__0,
    dl_status_reg_bit_6_i_5__0_0,
    dl_status_reg_bit_6_i_5__0_1,
    \bit_cnt_reg[1]_0 ,
    dl_stopstate,
    dl_forcerxmode_ris_edge,
    dl_status_reg_bit_6_reg_1,
    dl_status_reg,
    dl_status_reg_bit_6_reg_2,
    dl_status_reg_bit_6_reg_3,
    \FSM_sequential_dl_rx_state_reg[1]_1 ,
    dl_erresc_reg_0,
    dl_erresc_reg_1,
    dl_erresc_reg_2,
    dl1_erresc,
    dl_erresc_reg_3,
    \dl_rxtriggeresc_reg[0] ,
    \dl_rxtriggeresc_reg[3] ,
    \dl_rxtriggeresc_reg[2] ,
    \dl_rxtriggeresc_reg[1] ,
    \dl_rxtriggeresc_reg[2]_0 ,
    \dl_rxtriggeresc_reg[1]_0 ,
    lp_clk_reg_2,
    dl_status_reg_bit_4_reg_1,
    byte_cnt,
    dl_rxvalidesc_reg,
    lp_clk_reg_3,
    dl_stopstate_reg_7,
    dl_stopstate_reg_8,
    dl_status_reg_bit_1_reg_1,
    dl_status_reg_bit_1_reg_2,
    dl_status_reg_bit_1_reg_3,
    dl_ulpsactivenot_reg_2,
    dl_ulpsactivenot_reg_3,
    dl1_ulpsactivenot,
    lp_clk_reg_4,
    dl_errcontrol_reg_1,
    dl_errcontrol_reg_2,
    dl_errcontrol_reg_3,
    dl_errcontrol_reg_4,
    dl1_errcontrol,
    errsyncesc_r_reg_0,
    errsyncesc_r_reg_1,
    errsyncesc_r_reg_2,
    errsyncesc_r_reg_3,
    dl_en_hs_lpn1_out,
    dl_en_hs_lpn_reg_0,
    dl_en_hs_lpn_reg_1,
    dl_en_hs_lpn_reg_2,
    \bit_cnt_reg[1]_1 ,
    \bit_cnt_reg[2]_0 ,
    bit_cnt,
    dl_status_reg_bit_1_reg_4);
  output out;
  output \bit_cnt_reg[0] ;
  output [3:0]D;
  output s_level_out_d2_reg_0;
  output s_level_out_d2_reg_1;
  output dl_status_reg_bit_626_out;
  output [7:0]p_1_in;
  output \FSM_sequential_dl_rx_state_reg[0] ;
  output rxwaitesc_r;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output lp_00_r_reg;
  output [0:0]E;
  output dl_erresc_reg;
  output [0:0]dl_stopstate_reg;
  output [3:0]\lpdt_data_r_reg[7] ;
  output \FSM_sequential_dl_rx_state_reg[2] ;
  output [7:0]\lpdt_data_r_reg[0] ;
  output \byte_cnt_reg[1] ;
  output [0:0]\byte_cnt_reg[1]_0 ;
  output lp_clk_reg;
  output lp_11_r_reg;
  output dl_status_reg_bit_1_reg;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  output cl_rxclkactivehs_reg;
  output dl_ulpsactivenot_reg;
  output lp_clk_reg_0;
  output dl_errcontrol_reg;
  output errsyncesc_r_reg;
  output dl_en_hs_lpn_reg;
  output \bit_cnt_reg[1] ;
  output \bit_cnt_reg[2] ;
  output \bit_cnt_reg[3] ;
  input core_rst;
  input dl1_enable;
  input core_clk;
  input \bit_cnt_reg[0]_0 ;
  input \bit_cnt_reg[0]_1 ;
  input p_2_in66_in;
  input lp_00_r;
  input \bit_cnt_reg[0]_2 ;
  input \FSM_sequential_dl_rx_state_reg[3] ;
  input dl_stopstate_reg_0;
  input \FSM_sequential_dl_rx_state_reg[3]_0 ;
  input \FSM_sequential_dl_rx_state_reg[3]_1 ;
  input lp_10_r;
  input dl_status_reg_bit_1_reg_0;
  input dl_status_reg_bit_4_reg;
  input dl_status_reg_bit_4_reg_0;
  input lp_01_r;
  input dl_status_reg_bit_1_i_2__0_0;
  input dl_status_reg_bit_6_reg;
  input dl_status_reg_bit_6_reg_0;
  input dl_ulpsactivenot_reg_0;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input [4:0]Q;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input \FSM_sequential_dl_rx_state_reg[4]_0 ;
  input \byte_cnt_reg[0] ;
  input lp_clk_reg_1;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[0]_1 ;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input dl_errcontrol_reg_0;
  input dl_errcontrol_i_2__0_0;
  input dl_ulpsactivenot_reg_1;
  input dl_status_reg_bit_1_i_2__0_1;
  input dl_stopstate_reg_1;
  input system_rst;
  input \lpdt_data_r_reg[0]_0 ;
  input dl_stopstate_reg_2;
  input dl_stopstate_reg_3;
  input dl_stopstate_reg_4;
  input dl_stopstate_reg_5;
  input dl_stopstate_reg_6;
  input dl_status_reg_bit_6_i_5__0;
  input dl_status_reg_bit_6_i_5__0_0;
  input dl_status_reg_bit_6_i_5__0_1;
  input \bit_cnt_reg[1]_0 ;
  input dl_stopstate;
  input dl_forcerxmode_ris_edge;
  input dl_status_reg_bit_6_reg_1;
  input [2:0]dl_status_reg;
  input dl_status_reg_bit_6_reg_2;
  input dl_status_reg_bit_6_reg_3;
  input \FSM_sequential_dl_rx_state_reg[1]_1 ;
  input dl_erresc_reg_0;
  input dl_erresc_reg_1;
  input dl_erresc_reg_2;
  input dl1_erresc;
  input dl_erresc_reg_3;
  input \dl_rxtriggeresc_reg[0] ;
  input [7:0]\dl_rxtriggeresc_reg[3] ;
  input \dl_rxtriggeresc_reg[2] ;
  input \dl_rxtriggeresc_reg[1] ;
  input \dl_rxtriggeresc_reg[2]_0 ;
  input \dl_rxtriggeresc_reg[1]_0 ;
  input lp_clk_reg_2;
  input dl_status_reg_bit_4_reg_1;
  input [1:0]byte_cnt;
  input dl_rxvalidesc_reg;
  input lp_clk_reg_3;
  input dl_stopstate_reg_7;
  input dl_stopstate_reg_8;
  input dl_status_reg_bit_1_reg_1;
  input dl_status_reg_bit_1_reg_2;
  input dl_status_reg_bit_1_reg_3;
  input dl_ulpsactivenot_reg_2;
  input dl_ulpsactivenot_reg_3;
  input dl1_ulpsactivenot;
  input lp_clk_reg_4;
  input dl_errcontrol_reg_1;
  input dl_errcontrol_reg_2;
  input dl_errcontrol_reg_3;
  input dl_errcontrol_reg_4;
  input dl1_errcontrol;
  input errsyncesc_r_reg_0;
  input errsyncesc_r_reg_1;
  input errsyncesc_r_reg_2;
  input errsyncesc_r_reg_3;
  input dl_en_hs_lpn1_out;
  input dl_en_hs_lpn_reg_0;
  input dl_en_hs_lpn_reg_1;
  input dl_en_hs_lpn_reg_2;
  input \bit_cnt_reg[1]_1 ;
  input \bit_cnt_reg[2]_0 ;
  input bit_cnt;
  input dl_status_reg_bit_1_reg_4;

  wire [3:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_10__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_4__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_5__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[1]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_10__0_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[1]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire \FSM_sequential_dl_rx_state_reg[3] ;
  wire \FSM_sequential_dl_rx_state_reg[3]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[3]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire bit_cnt;
  wire \bit_cnt[3]_i_3__0_n_0 ;
  wire \bit_cnt_reg[0] ;
  wire \bit_cnt_reg[0]_0 ;
  wire \bit_cnt_reg[0]_1 ;
  wire \bit_cnt_reg[0]_2 ;
  wire \bit_cnt_reg[1] ;
  wire \bit_cnt_reg[1]_0 ;
  wire \bit_cnt_reg[1]_1 ;
  wire \bit_cnt_reg[2] ;
  wire \bit_cnt_reg[2]_0 ;
  wire \bit_cnt_reg[3] ;
  wire [1:0]byte_cnt;
  wire \byte_cnt_reg[0] ;
  wire \byte_cnt_reg[1] ;
  wire [0:0]\byte_cnt_reg[1]_0 ;
  wire cl_rxclkactivehs_reg;
  wire core_clk;
  wire core_rst;
  wire dl1_enable;
  wire dl1_errcontrol;
  wire dl1_erresc;
  wire dl1_ulpsactivenot;
  wire dl_en_hs_lpn1_out;
  wire dl_en_hs_lpn_reg;
  wire dl_en_hs_lpn_reg_0;
  wire dl_en_hs_lpn_reg_1;
  wire dl_en_hs_lpn_reg_2;
  wire dl_errcontrol7_out;
  wire dl_errcontrol_i_2__0_0;
  wire dl_errcontrol_i_7__0_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire dl_errcontrol_reg_2;
  wire dl_errcontrol_reg_3;
  wire dl_errcontrol_reg_4;
  wire dl_erresc_reg;
  wire dl_erresc_reg_0;
  wire dl_erresc_reg_1;
  wire dl_erresc_reg_2;
  wire dl_erresc_reg_3;
  wire dl_forcerxmode_ris_edge;
  wire \dl_rxtriggeresc[3]_i_4__0_n_0 ;
  wire \dl_rxtriggeresc_reg[0] ;
  wire \dl_rxtriggeresc_reg[1] ;
  wire \dl_rxtriggeresc_reg[1]_0 ;
  wire \dl_rxtriggeresc_reg[2] ;
  wire \dl_rxtriggeresc_reg[2]_0 ;
  wire [7:0]\dl_rxtriggeresc_reg[3] ;
  wire dl_rxvalidesc_reg;
  wire [2:0]dl_status_reg;
  wire dl_status_reg_bit_135_out;
  wire dl_status_reg_bit_1_i_12__0_n_0;
  wire dl_status_reg_bit_1_i_2__0_0;
  wire dl_status_reg_bit_1_i_2__0_1;
  wire dl_status_reg_bit_1_i_7__0_n_0;
  wire dl_status_reg_bit_1_i_8__0_n_0;
  wire dl_status_reg_bit_1_i_9__0_n_0;
  wire dl_status_reg_bit_1_reg;
  wire dl_status_reg_bit_1_reg_0;
  wire dl_status_reg_bit_1_reg_1;
  wire dl_status_reg_bit_1_reg_2;
  wire dl_status_reg_bit_1_reg_3;
  wire dl_status_reg_bit_1_reg_4;
  wire dl_status_reg_bit_4_i_3__0_n_0;
  wire dl_status_reg_bit_4_reg;
  wire dl_status_reg_bit_4_reg_0;
  wire dl_status_reg_bit_4_reg_1;
  wire dl_status_reg_bit_626_out;
  wire dl_status_reg_bit_6_i_2__0_n_0;
  wire dl_status_reg_bit_6_i_5__0;
  wire dl_status_reg_bit_6_i_5__0_0;
  wire dl_status_reg_bit_6_i_5__0_1;
  wire dl_status_reg_bit_6_reg;
  wire dl_status_reg_bit_6_reg_0;
  wire dl_status_reg_bit_6_reg_1;
  wire dl_status_reg_bit_6_reg_2;
  wire dl_status_reg_bit_6_reg_3;
  wire dl_stopstate;
  wire dl_stopstate_i_2__0_n_0;
  wire dl_stopstate_i_4__0_n_0;
  wire [0:0]dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire dl_stopstate_reg_1;
  wire dl_stopstate_reg_2;
  wire dl_stopstate_reg_3;
  wire dl_stopstate_reg_4;
  wire dl_stopstate_reg_5;
  wire dl_stopstate_reg_6;
  wire dl_stopstate_reg_7;
  wire dl_stopstate_reg_8;
  wire dl_ulpsactivenot_i_6__0_n_0;
  wire dl_ulpsactivenot_reg;
  wire dl_ulpsactivenot_reg_0;
  wire dl_ulpsactivenot_reg_1;
  wire dl_ulpsactivenot_reg_2;
  wire dl_ulpsactivenot_reg_3;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire errsyncesc_r_reg;
  wire errsyncesc_r_reg_0;
  wire errsyncesc_r_reg_1;
  wire errsyncesc_r_reg_2;
  wire errsyncesc_r_reg_3;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_11_r_reg;
  wire lp_clk_i_2__0_n_0;
  wire lp_clk_i_4__0_n_0;
  wire lp_clk_i_6__0_n_0;
  wire lp_clk_i_8__0_n_0;
  wire lp_clk_reg;
  wire lp_clk_reg_0;
  wire lp_clk_reg_1;
  wire lp_clk_reg_2;
  wire lp_clk_reg_3;
  wire lp_clk_reg_4;
  wire [7:0]\lpdt_data_r_reg[0] ;
  wire \lpdt_data_r_reg[0]_0 ;
  wire [3:0]\lpdt_data_r_reg[7] ;
  wire [7:0]p_1_in;
  wire p_2_in66_in;
  wire rxwaitesc_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  wire s_level_out_d2_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \FSM_sequential_dl_rx_state[0]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_1 ),
        .I3(\FSM_sequential_dl_rx_state[0]_i_5__0_n_0 ),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hF020500020205000)) 
    \FSM_sequential_dl_rx_state[0]_i_2__0 
       (.I0(lp_00_r),
        .I1(lp_10_r),
        .I2(p_1_in[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(lp_01_r),
        .O(\FSM_sequential_dl_rx_state[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    \FSM_sequential_dl_rx_state[0]_i_5__0 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_10__0_n_0 ),
        .I1(Q[2]),
        .I2(lp_10_r),
        .I3(\FSM_sequential_dl_rx_state[0]_i_8__0_n_0 ),
        .I4(\byte_cnt_reg[0] ),
        .I5(dl_ulpsactivenot_reg_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_5__0_n_0 ));
  LUT4 #(
    .INIT(16'h002F)) 
    \FSM_sequential_dl_rx_state[0]_i_8__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .O(\FSM_sequential_dl_rx_state[0]_i_8__0_n_0 ));
  LUT4 #(
    .INIT(16'h2F00)) 
    \FSM_sequential_dl_rx_state[1]_i_10__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[1]),
        .O(\FSM_sequential_dl_rx_state[1]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFF2)) 
    \FSM_sequential_dl_rx_state[1]_i_1__0 
       (.I0(s_level_out_d2_reg_1),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(\FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[1] ),
        .I4(\FSM_sequential_dl_rx_state[1]_i_4__0_n_0 ),
        .I5(\FSM_sequential_dl_rx_state[1]_i_5__0_n_0 ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    \FSM_sequential_dl_rx_state[1]_i_2__0 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[1]_1 ),
        .I2(Q[3]),
        .I3(p_1_in[0]),
        .I4(lp_clk_reg_1),
        .I5(lp_01_r),
        .O(\FSM_sequential_dl_rx_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h02020202FF020202)) 
    \FSM_sequential_dl_rx_state[1]_i_4__0 
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6__0_n_0 ),
        .I1(dl_stopstate_reg_0),
        .I2(Q[2]),
        .I3(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I4(p_1_in[0]),
        .I5(lp_00_r),
        .O(\FSM_sequential_dl_rx_state[1]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000001111F000)) 
    \FSM_sequential_dl_rx_state[1]_i_5__0 
       (.I0(dl_ulpsactivenot_reg_1),
        .I1(\lpdt_data_r_reg[0]_0 ),
        .I2(\FSM_sequential_dl_rx_state[1]_i_10__0_n_0 ),
        .I3(\byte_cnt_reg[0] ),
        .I4(Q[0]),
        .I5(dl_status_reg_bit_4_reg_0),
        .O(\FSM_sequential_dl_rx_state[1]_i_5__0_n_0 ));
  LUT6 #(
    .INIT(64'h00002F0000000000)) 
    \FSM_sequential_dl_rx_state[1]_i_6__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[0]),
        .I4(Q[4]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state[1]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF02000000)) 
    \FSM_sequential_dl_rx_state[2]_i_3__0 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(lp_00_r),
        .I3(Q[0]),
        .I4(lp_10_r),
        .I5(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[2] ));
  LUT5 #(
    .INIT(32'hFFFFFFF2)) 
    \FSM_sequential_dl_rx_state[3]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[3] ),
        .I1(dl_stopstate_reg_0),
        .I2(\FSM_sequential_dl_rx_state_reg[3]_0 ),
        .I3(s_level_out_d2_reg_0),
        .I4(\FSM_sequential_dl_rx_state_reg[3]_1 ),
        .O(D[2]));
  LUT3 #(
    .INIT(8'hD0)) 
    \FSM_sequential_dl_rx_state[3]_i_4__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    \FSM_sequential_dl_rx_state[4]_i_10__0 
       (.I0(dl_status_reg_bit_4_reg_1),
        .I1(Q[0]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(s_level_out_d2_reg_1),
        .O(\FSM_sequential_dl_rx_state[4]_i_10__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0400)) 
    \FSM_sequential_dl_rx_state[4]_i_2__0 
       (.I0(dl_ulpsactivenot_reg_0),
        .I1(lp_01_r),
        .I2(Q[1]),
        .I3(s_level_out_d2_reg_1),
        .I4(\FSM_sequential_dl_rx_state[4]_i_10__0_n_0 ),
        .I5(\FSM_sequential_dl_rx_state_reg[4]_0 ),
        .O(D[3]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \FSM_sequential_dl_rx_state[4]_i_9__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .O(s_level_out_d2_reg_1));
  LUT6 #(
    .INIT(64'h00000000B9AAAAAA)) 
    \bit_cnt[0]_i_1__0 
       (.I0(\bit_cnt_reg[0]_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(p_2_in66_in),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_ulpsactivenot_i_6__0_n_0),
        .O(\bit_cnt_reg[0] ));
  LUT6 #(
    .INIT(64'h0A000A060A0A0A0A)) 
    \bit_cnt[1]_i_1__0 
       (.I0(\bit_cnt_reg[1]_1 ),
        .I1(\bit_cnt_reg[0]_0 ),
        .I2(dl_ulpsactivenot_i_6__0_n_0),
        .I3(\bit_cnt_reg[0]_1 ),
        .I4(p_2_in66_in),
        .I5(\bit_cnt_reg[1]_0 ),
        .O(\bit_cnt_reg[1] ));
  LUT6 #(
    .INIT(64'h000000009AAAAAAA)) 
    \bit_cnt[2]_i_1__0 
       (.I0(\bit_cnt_reg[2]_0 ),
        .I1(\bit_cnt_reg[0]_1 ),
        .I2(\bit_cnt_reg[1]_0 ),
        .I3(\bit_cnt_reg[0]_0 ),
        .I4(\bit_cnt_reg[1]_1 ),
        .I5(\bit_cnt[3]_i_3__0_n_0 ),
        .O(\bit_cnt_reg[2] ));
  LUT6 #(
    .INIT(64'h000000006AAAAAAA)) 
    \bit_cnt[3]_i_1__0 
       (.I0(p_2_in66_in),
        .I1(bit_cnt),
        .I2(\bit_cnt_reg[1]_1 ),
        .I3(\bit_cnt_reg[0]_0 ),
        .I4(\bit_cnt_reg[2]_0 ),
        .I5(\bit_cnt[3]_i_3__0_n_0 ),
        .O(\bit_cnt_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF08FF)) 
    \bit_cnt[3]_i_3__0 
       (.I0(\bit_cnt_reg[1]_0 ),
        .I1(p_2_in66_in),
        .I2(\bit_cnt_reg[0]_1 ),
        .I3(s_level_out_d2),
        .I4(dl_stopstate),
        .I5(dl_forcerxmode_ris_edge),
        .O(\bit_cnt[3]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFC840)) 
    \byte_cnt[1]_i_3__0 
       (.I0(Q[0]),
        .I1(\byte_cnt_reg[0] ),
        .I2(lp_clk_reg_1),
        .I3(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I4(rxwaitesc_r),
        .I5(\bit_cnt_reg[0]_1 ),
        .O(\FSM_sequential_dl_rx_state_reg[0] ));
  LUT5 #(
    .INIT(32'hAAABAAA8)) 
    dl_en_hs_lpn_i_1__0
       (.I0(dl_en_hs_lpn1_out),
        .I1(\FSM_sequential_dl_rx_state_reg[4] ),
        .I2(dl_en_hs_lpn_reg_0),
        .I3(dl_en_hs_lpn_reg_1),
        .I4(dl_en_hs_lpn_reg_2),
        .O(dl_en_hs_lpn_reg));
  LUT5 #(
    .INIT(32'hFFFF0080)) 
    dl_en_hs_lpn_i_3__0
       (.I0(dl_status_reg_bit_1_reg_0),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(dl_status_reg_bit_4_reg_1),
        .I4(s_level_out_d2_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    dl_errcontrol_i_1__0
       (.I0(dl_errcontrol7_out),
        .I1(dl_errcontrol_reg_1),
        .I2(dl_errcontrol_reg_2),
        .I3(dl_errcontrol_reg_3),
        .I4(dl_errcontrol_reg_4),
        .I5(dl1_errcontrol),
        .O(dl_errcontrol_reg));
  LUT6 #(
    .INIT(64'hEAEAAAAAFFEAAAAA)) 
    dl_errcontrol_i_2__0
       (.I0(dl_errcontrol_i_7__0_n_0),
        .I1(lp_00_r),
        .I2(dl_status_reg_bit_1_reg_0),
        .I3(lp_10_r),
        .I4(dl_status_reg_bit_4_reg),
        .I5(dl_errcontrol_reg_0),
        .O(dl_errcontrol7_out));
  LUT6 #(
    .INIT(64'hFFFFFFFF000000A8)) 
    dl_errcontrol_i_7__0
       (.I0(s_level_out_d2_reg_1),
        .I1(dl_stopstate_reg_0),
        .I2(lp_10_r),
        .I3(Q[3]),
        .I4(Q[2]),
        .I5(dl_errcontrol_i_2__0_0),
        .O(dl_errcontrol_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h00000000FFFE0000)) 
    dl_erresc_i_1__0
       (.I0(dl_erresc_reg_0),
        .I1(dl_erresc_reg_1),
        .I2(dl_erresc_reg_2),
        .I3(dl1_erresc),
        .I4(dl_erresc_reg_3),
        .I5(rxwaitesc_r),
        .O(dl_erresc_reg));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[0]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [7]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [0]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[1]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [6]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [1]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[2]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [5]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [2]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[3]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [4]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [3]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[4]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [3]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [4]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[5]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [2]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [5]));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[6]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[3] [1]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [6]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'hFFFF2000)) 
    \dl_rxdataesc[7]_i_1__0 
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_rxvalidesc_reg),
        .I3(p_2_in66_in),
        .I4(dl_ulpsactivenot_i_6__0_n_0),
        .O(\byte_cnt_reg[1]_0 ));
  LUT4 #(
    .INIT(16'h0008)) 
    \dl_rxdataesc[7]_i_2__0 
       (.I0(\dl_rxtriggeresc_reg[3] [0]),
        .I1(s_level_out_d2),
        .I2(dl_stopstate),
        .I3(dl_forcerxmode_ris_edge),
        .O(\lpdt_data_r_reg[0] [7]));
  LUT3 #(
    .INIT(8'h08)) 
    dl_rxescclk_i_1__0
       (.I0(lp_clk_reg_3),
        .I1(s_level_out_d2),
        .I2(dl_forcerxmode_ris_edge),
        .O(lp_clk_reg));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    dl_rxlpdtesc_i_1__0
       (.I0(core_rst),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(dl_forcerxmode_ris_edge),
        .I4(dl_stopstate),
        .O(rxwaitesc_r));
  LUT6 #(
    .INIT(64'h0000000000100000)) 
    \dl_rxtriggeresc[0]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[3] [0]),
        .I2(\dl_rxtriggeresc_reg[3] [1]),
        .I3(\dl_rxtriggeresc_reg[3] [2]),
        .I4(\dl_rxtriggeresc_reg[1]_0 ),
        .I5(rxwaitesc_r),
        .O(\lpdt_data_r_reg[7] [0]));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \dl_rxtriggeresc[1]_i_1__0 
       (.I0(rxwaitesc_r),
        .I1(\dl_rxtriggeresc_reg[3] [2]),
        .I2(\dl_rxtriggeresc_reg[3] [0]),
        .I3(\dl_rxtriggeresc_reg[1]_0 ),
        .I4(\dl_rxtriggeresc_reg[3] [1]),
        .I5(\dl_rxtriggeresc_reg[1] ),
        .O(\lpdt_data_r_reg[7] [1]));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \dl_rxtriggeresc[2]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[2]_0 ),
        .I2(\dl_rxtriggeresc_reg[3] [0]),
        .I3(\dl_rxtriggeresc_reg[3] [7]),
        .I4(\dl_rxtriggeresc_reg[3] [6]),
        .I5(rxwaitesc_r),
        .O(\lpdt_data_r_reg[7] [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEFF)) 
    \dl_rxtriggeresc[3]_i_1__0 
       (.I0(\dl_rxtriggeresc_reg[0] ),
        .I1(dl_stopstate),
        .I2(dl_forcerxmode_ris_edge),
        .I3(s_level_out_d2),
        .I4(system_rst),
        .I5(core_rst),
        .O(dl_stopstate_reg));
  LUT5 #(
    .INIT(32'hAFAEAEAF)) 
    \dl_rxtriggeresc[3]_i_2__0 
       (.I0(\dl_rxtriggeresc[3]_i_4__0_n_0 ),
        .I1(\dl_rxtriggeresc_reg[3] [7]),
        .I2(rxwaitesc_r),
        .I3(\dl_rxtriggeresc_reg[3] [0]),
        .I4(\dl_rxtriggeresc_reg[3] [1]),
        .O(\lpdt_data_r_reg[7] [3]));
  LUT6 #(
    .INIT(64'h00000000FFCFAFFA)) 
    \dl_rxtriggeresc[3]_i_4__0 
       (.I0(\dl_rxtriggeresc_reg[2] ),
        .I1(\dl_rxtriggeresc_reg[1] ),
        .I2(\dl_rxtriggeresc_reg[3] [6]),
        .I3(\dl_rxtriggeresc_reg[3] [1]),
        .I4(\dl_rxtriggeresc_reg[3] [2]),
        .I5(rxwaitesc_r),
        .O(\dl_rxtriggeresc[3]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT5 #(
    .INIT(32'h00002000)) 
    dl_rxvalidesc_i_1__0
       (.I0(byte_cnt[1]),
        .I1(byte_cnt[0]),
        .I2(dl_rxvalidesc_reg),
        .I3(p_2_in66_in),
        .I4(dl_ulpsactivenot_i_6__0_n_0),
        .O(\byte_cnt_reg[1] ));
  LUT5 #(
    .INIT(32'h0000002F)) 
    dl_status_reg_bit_1_i_12__0
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[4]),
        .I4(Q[1]),
        .O(dl_status_reg_bit_1_i_12__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAABAAAAAAA8)) 
    dl_status_reg_bit_1_i_1__0
       (.I0(dl_status_reg_bit_135_out),
        .I1(dl_status_reg_bit_1_reg_1),
        .I2(\en_cl_init_to_blk.cl_init_done_coreclk_reg ),
        .I3(dl_status_reg_bit_1_reg_2),
        .I4(dl_status_reg_bit_1_reg_3),
        .I5(dl_status_reg[0]),
        .O(dl_status_reg_bit_1_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    dl_status_reg_bit_1_i_2__0
       (.I0(dl_status_reg_bit_1_i_7__0_n_0),
        .I1(lp_10_r),
        .I2(dl_status_reg_bit_1_reg_0),
        .I3(dl_status_reg_bit_4_reg),
        .I4(dl_status_reg_bit_1_i_8__0_n_0),
        .I5(dl_status_reg_bit_1_i_9__0_n_0),
        .O(dl_status_reg_bit_135_out));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF8A8A8A)) 
    dl_status_reg_bit_1_i_4__0
       (.I0(\lpdt_data_r_reg[0]_0 ),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_status_reg_bit_1_reg_4),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg ));
  LUT6 #(
    .INIT(64'h08080808FF080808)) 
    dl_status_reg_bit_1_i_7__0
       (.I0(s_level_out_d2_reg_1),
        .I1(lp_00_r),
        .I2(dl_status_reg_bit_4_reg_0),
        .I3(lp_clk_i_6__0_n_0),
        .I4(lp_01_r),
        .I5(dl_status_reg_bit_1_i_2__0_0),
        .O(dl_status_reg_bit_1_i_7__0_n_0));
  LUT6 #(
    .INIT(64'h880088F088008800)) 
    dl_status_reg_bit_1_i_8__0
       (.I0(dl_status_reg_bit_1_i_12__0_n_0),
        .I1(lp_00_r),
        .I2(p_1_in[0]),
        .I3(Q[2]),
        .I4(dl_ulpsactivenot_reg_1),
        .I5(dl_status_reg_bit_1_i_2__0_1),
        .O(dl_status_reg_bit_1_i_8__0_n_0));
  LUT6 #(
    .INIT(64'hF888888800000000)) 
    dl_status_reg_bit_1_i_9__0
       (.I0(\FSM_sequential_dl_rx_state[1]_i_6__0_n_0 ),
        .I1(lp_01_r),
        .I2(\FSM_sequential_dl_rx_state[0]_i_8__0_n_0 ),
        .I3(Q[0]),
        .I4(lp_10_r),
        .I5(Q[2]),
        .O(dl_status_reg_bit_1_i_9__0_n_0));
  LUT6 #(
    .INIT(64'h1000FFFF10000000)) 
    dl_status_reg_bit_4_i_1__0
       (.I0(dl_status_reg_bit_4_reg_1),
        .I1(dl_status_reg_bit_4_reg_0),
        .I2(Q[1]),
        .I3(dl_status_reg_bit_4_reg),
        .I4(dl_status_reg_bit_4_i_3__0_n_0),
        .I5(dl_status_reg[1]),
        .O(cl_rxclkactivehs_reg));
  LUT6 #(
    .INIT(64'hCFEECCCCCCCCCCCC)) 
    dl_status_reg_bit_4_i_3__0
       (.I0(dl_stopstate_reg_0),
        .I1(s_level_out_d2_reg_0),
        .I2(dl_status_reg_bit_4_reg_1),
        .I3(Q[1]),
        .I4(Q[4]),
        .I5(dl_status_reg_bit_1_reg_0),
        .O(dl_status_reg_bit_4_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFEEEEFEEE)) 
    dl_status_reg_bit_6_i_1__0
       (.I0(dl_status_reg_bit_6_i_2__0_n_0),
        .I1(\FSM_sequential_dl_rx_state[4]_i_10__0_n_0 ),
        .I2(dl_status_reg_bit_6_reg),
        .I3(dl_status_reg_bit_4_reg),
        .I4(lp_10_r),
        .I5(dl_status_reg_bit_6_reg_0),
        .O(dl_status_reg_bit_626_out));
  LUT6 #(
    .INIT(64'h80F0808080808080)) 
    dl_status_reg_bit_6_i_2__0
       (.I0(dl_status_reg_bit_6_reg_1),
        .I1(dl_status_reg[2]),
        .I2(\FSM_sequential_dl_rx_state[0]_i_8__0_n_0 ),
        .I3(dl_status_reg_bit_6_reg_2),
        .I4(dl_stopstate_reg_0),
        .I5(dl_status_reg_bit_6_reg_3),
        .O(dl_status_reg_bit_6_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h888888F800000000)) 
    dl_status_reg_bit_6_i_9__0
       (.I0(dl_status_reg_bit_6_i_5__0),
        .I1(dl_status_reg_bit_6_i_5__0_0),
        .I2(dl_status_reg_bit_6_i_5__0_1),
        .I3(lp_00_r),
        .I4(lp_01_r),
        .I5(p_1_in[0]),
        .O(lp_00_r_reg));
  LUT6 #(
    .INIT(64'hEAEAEAFFEAEAEA00)) 
    dl_stopstate_i_1__0
       (.I0(dl_stopstate_i_2__0_n_0),
        .I1(dl_stopstate_reg_0),
        .I2(dl_stopstate_reg_7),
        .I3(dl_stopstate_i_4__0_n_0),
        .I4(dl_stopstate_reg_8),
        .I5(dl_stopstate),
        .O(lp_11_r_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAEAAAAA)) 
    dl_stopstate_i_2__0
       (.I0(dl_stopstate_reg_1),
        .I1(Q[3]),
        .I2(dl_stopstate_reg_0),
        .I3(Q[4]),
        .I4(p_1_in[0]),
        .I5(\FSM_sequential_dl_rx_state[4]_i_10__0_n_0 ),
        .O(dl_stopstate_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    dl_stopstate_i_4__0
       (.I0(dl_stopstate_reg_2),
        .I1(\FSM_sequential_dl_rx_state_reg[4] ),
        .I2(dl_stopstate_reg_3),
        .I3(dl_stopstate_reg_4),
        .I4(dl_stopstate_reg_5),
        .I5(dl_stopstate_reg_6),
        .O(dl_stopstate_i_4__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFEFEFFFFFE00)) 
    dl_ulpsactivenot_i_1__0
       (.I0(dl_ulpsactivenot_reg_1),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(dl_ulpsactivenot_reg_2),
        .I3(dl_ulpsactivenot_reg_3),
        .I4(dl_ulpsactivenot_i_6__0_n_0),
        .I5(dl1_ulpsactivenot),
        .O(dl_ulpsactivenot_reg));
  LUT3 #(
    .INIT(8'hEF)) 
    dl_ulpsactivenot_i_6__0
       (.I0(dl_forcerxmode_ris_edge),
        .I1(dl_stopstate),
        .I2(s_level_out_d2),
        .O(dl_ulpsactivenot_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h0700040004000400)) 
    errsyncesc_r_i_1__0
       (.I0(errsyncesc_r_reg_0),
        .I1(errsyncesc_r_reg_1),
        .I2(dl_forcerxmode_ris_edge),
        .I3(s_level_out_d2),
        .I4(errsyncesc_r_reg_2),
        .I5(errsyncesc_r_reg_3),
        .O(errsyncesc_r_reg));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    lp_clk_i_1__0
       (.I0(lp_clk_i_2__0_n_0),
        .I1(lp_clk_reg_1),
        .I2(p_1_in[0]),
        .I3(lp_clk_i_4__0_n_0),
        .I4(lp_clk_reg_4),
        .I5(lp_clk_reg_3),
        .O(lp_clk_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00B00000)) 
    lp_clk_i_2__0
       (.I0(Q[1]),
        .I1(lp_01_r),
        .I2(dl_stopstate_reg_0),
        .I3(Q[4]),
        .I4(lp_clk_i_6__0_n_0),
        .I5(lp_clk_reg_2),
        .O(lp_clk_i_2__0_n_0));
  LUT6 #(
    .INIT(64'hFFF0F2F0F0F0F0F0)) 
    lp_clk_i_4__0
       (.I0(Q[4]),
        .I1(dl_ulpsactivenot_reg_0),
        .I2(lp_clk_i_8__0_n_0),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .I5(dl_status_reg_bit_4_reg),
        .O(lp_clk_i_4__0_n_0));
  LUT5 #(
    .INIT(32'h15110000)) 
    lp_clk_i_6__0
       (.I0(Q[0]),
        .I1(\lpdt_data_r_reg[0]_0 ),
        .I2(system_rst),
        .I3(s_level_out_d2),
        .I4(Q[2]),
        .O(lp_clk_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h8000800080808000)) 
    lp_clk_i_8__0
       (.I0(dl_status_reg_bit_1_i_12__0_n_0),
        .I1(dl_stopstate_reg_0),
        .I2(Q[2]),
        .I3(lp_00_r),
        .I4(Q[0]),
        .I5(lp_10_r),
        .O(lp_clk_i_8__0_n_0));
  LUT4 #(
    .INIT(16'h002F)) 
    \lpdt_data_r[0]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(Q[0]),
        .O(p_1_in[0]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[1]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [0]),
        .O(p_1_in[1]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[2]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [1]),
        .O(p_1_in[2]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[3]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [2]),
        .O(p_1_in[3]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[4]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [3]),
        .O(p_1_in[4]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[5]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [4]),
        .O(p_1_in[5]));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[6]_i_1__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [5]),
        .O(p_1_in[6]));
  LUT5 #(
    .INIT(32'hFF8A8A8A)) 
    \lpdt_data_r[7]_i_1__0 
       (.I0(\lpdt_data_r_reg[0]_0 ),
        .I1(system_rst),
        .I2(s_level_out_d2),
        .I3(lp_00_r),
        .I4(\bit_cnt_reg[0]_2 ),
        .O(E));
  LUT4 #(
    .INIT(16'h2F00)) 
    \lpdt_data_r[7]_i_2__0 
       (.I0(s_level_out_d2),
        .I1(system_rst),
        .I2(\lpdt_data_r_reg[0]_0 ),
        .I3(\dl_rxtriggeresc_reg[3] [6]),
        .O(p_1_in[7]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_enable),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized0_7
   (out,
    dl_forcerxmode_ris_edge0,
    core_rst,
    dl1_forcerxmode,
    core_clk,
    dl_forcerxmode_sync_r);
  output out;
  output dl_forcerxmode_ris_edge0;
  input core_rst;
  input dl1_forcerxmode;
  input core_clk;
  input dl_forcerxmode_sync_r;

  wire core_clk;
  wire core_rst;
  wire dl1_forcerxmode;
  wire dl_forcerxmode_ris_edge0;
  wire dl_forcerxmode_sync_r;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  LUT2 #(
    .INIT(4'h2)) 
    dl_forcerxmode_ris_edge_i_1__1
       (.I0(s_level_out_d2),
        .I1(dl_forcerxmode_sync_r),
        .O(dl_forcerxmode_ris_edge0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(dl1_forcerxmode),
        .Q(s_level_out_d1_cdc_to),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1
   (out,
    D,
    \FSM_sequential_dl_rx_state_reg[4] ,
    lp_00_r_reg,
    \FSM_sequential_dl_rx_state_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \lp_st_cnt_reg[2] ,
    rx_dl1_lp_dn,
    core_clk,
    \FSM_sequential_dl_rx_state_reg[2] ,
    \FSM_sequential_dl_rx_state_reg[2]_0 ,
    \FSM_sequential_dl_rx_state_reg[2]_1 ,
    \FSM_sequential_dl_rx_state_reg[2]_2 ,
    \FSM_sequential_dl_rx_state_reg[2]_3 ,
    \FSM_sequential_dl_rx_state_reg[2]_4 ,
    \FSM_sequential_dl_rx_state_reg[2]_5 ,
    \FSM_sequential_dl_rx_state_reg[2]_6 ,
    Q,
    dl_errcontrol_reg,
    dl_errcontrol_reg_0,
    lp_00_r,
    dl_errcontrol_reg_1,
    lp_10_r,
    dl_stopstate_i_2__0,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    \FSM_sequential_dl_rx_state[3]_i_5__0_0 ,
    lp_01_r,
    \lp_st_cnt_reg[1] ,
    \lp_st_cnt_reg[4] ,
    \lp_st_cnt_reg[4]_0 ,
    \FSM_sequential_dl_rx_state[2]_i_2__0_0 ,
    lp_11_r_dly);
  output out;
  output [0:0]D;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output lp_00_r_reg;
  output \FSM_sequential_dl_rx_state_reg[0] ;
  output \FSM_sequential_dl_rx_state_reg[0]_0 ;
  output \FSM_sequential_dl_rx_state_reg[4]_0 ;
  output \FSM_sequential_dl_rx_state_reg[0]_1 ;
  output [3:0]\lp_st_cnt_reg[2] ;
  input rx_dl1_lp_dn;
  input core_clk;
  input \FSM_sequential_dl_rx_state_reg[2] ;
  input \FSM_sequential_dl_rx_state_reg[2]_0 ;
  input \FSM_sequential_dl_rx_state_reg[2]_1 ;
  input \FSM_sequential_dl_rx_state_reg[2]_2 ;
  input \FSM_sequential_dl_rx_state_reg[2]_3 ;
  input \FSM_sequential_dl_rx_state_reg[2]_4 ;
  input \FSM_sequential_dl_rx_state_reg[2]_5 ;
  input \FSM_sequential_dl_rx_state_reg[2]_6 ;
  input [4:0]Q;
  input dl_errcontrol_reg;
  input dl_errcontrol_reg_0;
  input lp_00_r;
  input dl_errcontrol_reg_1;
  input lp_10_r;
  input dl_stopstate_i_2__0;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input \FSM_sequential_dl_rx_state[3]_i_5__0_0 ;
  input lp_01_r;
  input [4:0]\lp_st_cnt_reg[1] ;
  input [1:0]\lp_st_cnt_reg[4] ;
  input \lp_st_cnt_reg[4]_0 ;
  input \FSM_sequential_dl_rx_state[2]_i_2__0_0 ;
  input lp_11_r_dly;

  wire [0:0]D;
  wire \FSM_sequential_dl_rx_state[2]_i_2__0_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_6__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_5__0_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_7__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_8__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_20__0_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire \FSM_sequential_dl_rx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_4 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_5 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_6 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire core_clk;
  wire dl_errcontrol_i_11__0_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire dl_stopstate_i_13__0_n_0;
  wire dl_stopstate_i_2__0;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire \lp_st_cnt[4]_i_2__1_n_0 ;
  wire [4:0]\lp_st_cnt_reg[1] ;
  wire [3:0]\lp_st_cnt_reg[2] ;
  wire [1:0]\lp_st_cnt_reg[4] ;
  wire \lp_st_cnt_reg[4]_0 ;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl1_lp_dn;
  LUT6 #(
    .INIT(64'h0F4000000C000000)) 
    \FSM_sequential_dl_rx_state[0]_i_3__0 
       (.I0(dl_errcontrol_i_11__0_n_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \FSM_sequential_dl_rx_state[2]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[2] ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[2]_1 ),
        .I4(\FSM_sequential_dl_rx_state_reg[2]_2 ),
        .I5(\FSM_sequential_dl_rx_state_reg[2]_3 ),
        .O(D));
  LUT6 #(
    .INIT(64'h00000000000C00AA)) 
    \FSM_sequential_dl_rx_state[2]_i_2__0 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_6__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[2]_4 ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_5 ),
        .I3(\FSM_sequential_dl_rx_state_reg[2]_6 ),
        .I4(Q[1]),
        .I5(Q[4]),
        .O(\FSM_sequential_dl_rx_state[2]_i_2__0_n_0 ));
  LUT3 #(
    .INIT(8'h2F)) 
    \FSM_sequential_dl_rx_state[2]_i_6__0 
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .I2(\FSM_sequential_dl_rx_state[2]_i_2__0_0 ),
        .O(\FSM_sequential_dl_rx_state[2]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'hFCCFFCCCFCCEFCCE)) 
    \FSM_sequential_dl_rx_state[3]_i_5__0 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_7__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state[3]_i_8__0_n_0 ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_6 ),
        .I3(Q[4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_dl_rx_state[3]_i_7__0 
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .I2(\FSM_sequential_dl_rx_state[2]_i_2__0_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'h8808880800088808)) 
    \FSM_sequential_dl_rx_state[3]_i_8__0 
       (.I0(Q[1]),
        .I1(\FSM_sequential_dl_rx_state[3]_i_5__0_0 ),
        .I2(lp_01_r),
        .I3(Q[0]),
        .I4(dl_errcontrol_i_11__0_n_0),
        .I5(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[3]_i_8__0_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_dl_rx_state[4]_i_12__0 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_20__0_n_0 ),
        .I1(Q[4]),
        .I2(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h4000020042020202)) 
    \FSM_sequential_dl_rx_state[4]_i_20__0 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[4]_0 ),
        .I5(\FSM_sequential_dl_rx_state[2]_i_2__0_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_20__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    dl_errcontrol_i_11__0
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .O(dl_errcontrol_i_11__0_n_0));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    dl_errcontrol_i_3__0
       (.I0(dl_errcontrol_reg),
        .I1(dl_errcontrol_reg_0),
        .I2(lp_00_r),
        .I3(dl_errcontrol_reg_1),
        .I4(dl_errcontrol_i_11__0_n_0),
        .I5(lp_10_r),
        .O(lp_00_r_reg));
  LUT4 #(
    .INIT(16'h0800)) 
    dl_stopstate_i_13__0
       (.I0(s_level_out_d2),
        .I1(lp_11_r_dly),
        .I2(Q[3]),
        .I3(\lp_st_cnt_reg[4]_0 ),
        .O(dl_stopstate_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hFF08FFFFFF08FF08)) 
    dl_stopstate_i_5__0
       (.I0(dl_errcontrol_reg_1),
        .I1(dl_stopstate_reg),
        .I2(Q[0]),
        .I3(\FSM_sequential_dl_rx_state_reg[4]_0 ),
        .I4(lp_10_r),
        .I5(dl_stopstate_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00C0008800000088)) 
    dl_stopstate_i_6__0
       (.I0(dl_stopstate_i_2__0),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[1]),
        .I5(dl_stopstate_i_13__0_n_0),
        .O(\FSM_sequential_dl_rx_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h2828282828282808)) 
    \lp_st_cnt[1]_i_1__1 
       (.I0(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I1(\lp_st_cnt_reg[1] [0]),
        .I2(\lp_st_cnt_reg[1] [1]),
        .I3(\lp_st_cnt_reg[1] [2]),
        .I4(\lp_st_cnt_reg[1] [3]),
        .I5(\lp_st_cnt_reg[1] [4]),
        .O(\lp_st_cnt_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \lp_st_cnt[2]_i_1__1 
       (.I0(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I1(\lp_st_cnt_reg[1] [1]),
        .I2(\lp_st_cnt_reg[1] [0]),
        .I3(\lp_st_cnt_reg[1] [2]),
        .O(\lp_st_cnt_reg[2] [1]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \lp_st_cnt[3]_i_1__1 
       (.I0(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I1(\lp_st_cnt_reg[1] [2]),
        .I2(\lp_st_cnt_reg[1] [0]),
        .I3(\lp_st_cnt_reg[1] [1]),
        .I4(\lp_st_cnt_reg[1] [3]),
        .O(\lp_st_cnt_reg[2] [2]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st_cnt[4]_i_1__0 
       (.I0(\lp_st_cnt_reg[1] [2]),
        .I1(\lp_st_cnt_reg[1] [0]),
        .I2(\lp_st_cnt_reg[1] [1]),
        .I3(\lp_st_cnt_reg[1] [3]),
        .I4(\lp_st_cnt[4]_i_2__1_n_0 ),
        .I5(\lp_st_cnt_reg[1] [4]),
        .O(\lp_st_cnt_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFEBAAAAEB)) 
    \lp_st_cnt[4]_i_2__1 
       (.I0(\FSM_sequential_dl_rx_state_reg[2]_1 ),
        .I1(s_level_out_d2),
        .I2(\lp_st_cnt_reg[4] [0]),
        .I3(\lp_st_cnt_reg[4]_0 ),
        .I4(\lp_st_cnt_reg[4] [1]),
        .I5(dl_stopstate_reg),
        .O(\lp_st_cnt[4]_i_2__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_16
   (out,
    D,
    \FSM_sequential_dl_rx_state_reg[4] ,
    lp_00_r_reg,
    \FSM_sequential_dl_rx_state_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \lp_st_cnt_reg[2] ,
    rx_dl0_lp_dn,
    core_clk,
    \FSM_sequential_dl_rx_state_reg[2] ,
    \FSM_sequential_dl_rx_state_reg[2]_0 ,
    \FSM_sequential_dl_rx_state_reg[2]_1 ,
    \FSM_sequential_dl_rx_state_reg[2]_2 ,
    \FSM_sequential_dl_rx_state_reg[2]_3 ,
    \FSM_sequential_dl_rx_state_reg[2]_4 ,
    \FSM_sequential_dl_rx_state_reg[2]_5 ,
    \FSM_sequential_dl_rx_state_reg[2]_6 ,
    Q,
    dl_errcontrol_reg,
    dl_errcontrol_reg_0,
    lp_00_r,
    dl_errcontrol_reg_1,
    lp_10_r,
    dl_stopstate_i_2,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    dl_stopstate_reg,
    dl_stopstate_reg_0,
    \FSM_sequential_dl_rx_state[3]_i_5_0 ,
    lp_01_r,
    \lp_st_cnt_reg[1] ,
    \lp_st_cnt_reg[4] ,
    \lp_st_cnt_reg[4]_0 ,
    \FSM_sequential_dl_rx_state[2]_i_2_0 ,
    lp_11_r_dly);
  output out;
  output [0:0]D;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output lp_00_r_reg;
  output \FSM_sequential_dl_rx_state_reg[0] ;
  output \FSM_sequential_dl_rx_state_reg[0]_0 ;
  output \FSM_sequential_dl_rx_state_reg[4]_0 ;
  output \FSM_sequential_dl_rx_state_reg[0]_1 ;
  output [3:0]\lp_st_cnt_reg[2] ;
  input rx_dl0_lp_dn;
  input core_clk;
  input \FSM_sequential_dl_rx_state_reg[2] ;
  input \FSM_sequential_dl_rx_state_reg[2]_0 ;
  input \FSM_sequential_dl_rx_state_reg[2]_1 ;
  input \FSM_sequential_dl_rx_state_reg[2]_2 ;
  input \FSM_sequential_dl_rx_state_reg[2]_3 ;
  input \FSM_sequential_dl_rx_state_reg[2]_4 ;
  input \FSM_sequential_dl_rx_state_reg[2]_5 ;
  input \FSM_sequential_dl_rx_state_reg[2]_6 ;
  input [4:0]Q;
  input dl_errcontrol_reg;
  input dl_errcontrol_reg_0;
  input lp_00_r;
  input dl_errcontrol_reg_1;
  input lp_10_r;
  input dl_stopstate_i_2;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input dl_stopstate_reg;
  input dl_stopstate_reg_0;
  input \FSM_sequential_dl_rx_state[3]_i_5_0 ;
  input lp_01_r;
  input [4:0]\lp_st_cnt_reg[1] ;
  input [1:0]\lp_st_cnt_reg[4] ;
  input \lp_st_cnt_reg[4]_0 ;
  input \FSM_sequential_dl_rx_state[2]_i_2_0 ;
  input lp_11_r_dly;

  wire [0:0]D;
  wire \FSM_sequential_dl_rx_state[2]_i_2_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_2_n_0 ;
  wire \FSM_sequential_dl_rx_state[2]_i_6_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_5_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_7_n_0 ;
  wire \FSM_sequential_dl_rx_state[3]_i_8_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_20_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[2] ;
  wire \FSM_sequential_dl_rx_state_reg[2]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_3 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_4 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_5 ;
  wire \FSM_sequential_dl_rx_state_reg[2]_6 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire core_clk;
  wire dl_errcontrol_i_11_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire dl_stopstate_i_13_n_0;
  wire dl_stopstate_i_2;
  wire dl_stopstate_reg;
  wire dl_stopstate_reg_0;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_01_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire \lp_st_cnt[4]_i_2__0_n_0 ;
  wire [4:0]\lp_st_cnt_reg[1] ;
  wire [3:0]\lp_st_cnt_reg[2] ;
  wire [1:0]\lp_st_cnt_reg[4] ;
  wire \lp_st_cnt_reg[4]_0 ;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl0_lp_dn;
  LUT6 #(
    .INIT(64'h0F4000000C000000)) 
    \FSM_sequential_dl_rx_state[0]_i_3 
       (.I0(dl_errcontrol_i_11_n_0),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[0]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \FSM_sequential_dl_rx_state[2]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_2_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[2] ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[2]_1 ),
        .I4(\FSM_sequential_dl_rx_state_reg[2]_2 ),
        .I5(\FSM_sequential_dl_rx_state_reg[2]_3 ),
        .O(D));
  LUT6 #(
    .INIT(64'h00000000000C00AA)) 
    \FSM_sequential_dl_rx_state[2]_i_2 
       (.I0(\FSM_sequential_dl_rx_state[2]_i_6_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[2]_4 ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_5 ),
        .I3(\FSM_sequential_dl_rx_state_reg[2]_6 ),
        .I4(Q[1]),
        .I5(Q[4]),
        .O(\FSM_sequential_dl_rx_state[2]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h2F)) 
    \FSM_sequential_dl_rx_state[2]_i_6 
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .I2(\FSM_sequential_dl_rx_state[2]_i_2_0 ),
        .O(\FSM_sequential_dl_rx_state[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFCCFFCCCFCCEFCCE)) 
    \FSM_sequential_dl_rx_state[3]_i_5 
       (.I0(\FSM_sequential_dl_rx_state[3]_i_7_n_0 ),
        .I1(\FSM_sequential_dl_rx_state[3]_i_8_n_0 ),
        .I2(\FSM_sequential_dl_rx_state_reg[2]_6 ),
        .I3(Q[4]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT3 #(
    .INIT(8'hDF)) 
    \FSM_sequential_dl_rx_state[3]_i_7 
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .I2(\FSM_sequential_dl_rx_state[2]_i_2_0 ),
        .O(\FSM_sequential_dl_rx_state[3]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h8808880800088808)) 
    \FSM_sequential_dl_rx_state[3]_i_8 
       (.I0(Q[1]),
        .I1(\FSM_sequential_dl_rx_state[3]_i_5_0 ),
        .I2(lp_01_r),
        .I3(Q[0]),
        .I4(dl_errcontrol_i_11_n_0),
        .I5(lp_10_r),
        .O(\FSM_sequential_dl_rx_state[3]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_sequential_dl_rx_state[4]_i_12 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_20_n_0 ),
        .I1(Q[4]),
        .I2(Q[1]),
        .O(\FSM_sequential_dl_rx_state_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h4000020042020202)) 
    \FSM_sequential_dl_rx_state[4]_i_20 
       (.I0(Q[0]),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[4]_0 ),
        .I5(\FSM_sequential_dl_rx_state[2]_i_2_0 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    dl_errcontrol_i_11
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .O(dl_errcontrol_i_11_n_0));
  LUT6 #(
    .INIT(64'hFF08080808080808)) 
    dl_errcontrol_i_3
       (.I0(dl_errcontrol_reg),
        .I1(dl_errcontrol_reg_0),
        .I2(lp_00_r),
        .I3(dl_errcontrol_reg_1),
        .I4(dl_errcontrol_i_11_n_0),
        .I5(lp_10_r),
        .O(lp_00_r_reg));
  LUT4 #(
    .INIT(16'h0800)) 
    dl_stopstate_i_13
       (.I0(s_level_out_d2),
        .I1(lp_11_r_dly),
        .I2(Q[3]),
        .I3(\lp_st_cnt_reg[4]_0 ),
        .O(dl_stopstate_i_13_n_0));
  LUT6 #(
    .INIT(64'hFF08FFFFFF08FF08)) 
    dl_stopstate_i_5
       (.I0(dl_errcontrol_reg_1),
        .I1(dl_stopstate_reg),
        .I2(Q[0]),
        .I3(\FSM_sequential_dl_rx_state_reg[4]_0 ),
        .I4(lp_10_r),
        .I5(dl_stopstate_reg_0),
        .O(\FSM_sequential_dl_rx_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h00C0008800000088)) 
    dl_stopstate_i_6
       (.I0(dl_stopstate_i_2),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I2(Q[0]),
        .I3(Q[4]),
        .I4(Q[1]),
        .I5(dl_stopstate_i_13_n_0),
        .O(\FSM_sequential_dl_rx_state_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'h2828282828282808)) 
    \lp_st_cnt[1]_i_1__0 
       (.I0(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I1(\lp_st_cnt_reg[1] [0]),
        .I2(\lp_st_cnt_reg[1] [1]),
        .I3(\lp_st_cnt_reg[1] [2]),
        .I4(\lp_st_cnt_reg[1] [3]),
        .I5(\lp_st_cnt_reg[1] [4]),
        .O(\lp_st_cnt_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \lp_st_cnt[2]_i_1__0 
       (.I0(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I1(\lp_st_cnt_reg[1] [1]),
        .I2(\lp_st_cnt_reg[1] [0]),
        .I3(\lp_st_cnt_reg[1] [2]),
        .O(\lp_st_cnt_reg[2] [1]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \lp_st_cnt[3]_i_1__0 
       (.I0(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I1(\lp_st_cnt_reg[1] [2]),
        .I2(\lp_st_cnt_reg[1] [0]),
        .I3(\lp_st_cnt_reg[1] [1]),
        .I4(\lp_st_cnt_reg[1] [3]),
        .O(\lp_st_cnt_reg[2] [2]));
  LUT6 #(
    .INIT(64'h7FFF000080000000)) 
    \lp_st_cnt[4]_i_1 
       (.I0(\lp_st_cnt_reg[1] [2]),
        .I1(\lp_st_cnt_reg[1] [0]),
        .I2(\lp_st_cnt_reg[1] [1]),
        .I3(\lp_st_cnt_reg[1] [3]),
        .I4(\lp_st_cnt[4]_i_2__0_n_0 ),
        .I5(\lp_st_cnt_reg[1] [4]),
        .O(\lp_st_cnt_reg[2] [3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFEBAAAAEB)) 
    \lp_st_cnt[4]_i_2__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[2]_1 ),
        .I1(s_level_out_d2),
        .I2(\lp_st_cnt_reg[4] [0]),
        .I3(\lp_st_cnt_reg[4]_0 ),
        .I4(\lp_st_cnt_reg[4] [1]),
        .I5(dl_stopstate_reg),
        .O(\lp_st_cnt[4]_i_2__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_17
   (out,
    lp_00_r_reg,
    E,
    lp_11_r_reg,
    lp_00_r_reg_0,
    lp_10_r_reg,
    lp_00_r_reg_1,
    \FSM_sequential_dl_rx_state_reg[4] ,
    \lp_st_dup_reg[1] ,
    lp_10_r_reg_0,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    rx_dl0_lp_dp,
    core_clk,
    dl_errcontrol_reg,
    dl_errcontrol_reg_0,
    lp_00_r,
    lp_10_r,
    dl_errcontrol_reg_1,
    \FSM_sequential_dl_rx_state_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    \FSM_sequential_dl_rx_state_reg[0]_3 ,
    dl_status_reg_bit_6_reg,
    dl_status_reg_bit_6_reg_0,
    dl_status_reg_bit_6_reg_1,
    dl_status_reg_bit_6_reg_2,
    Q,
    \lp_st_cnt_reg[0] ,
    D,
    dl_status_reg_bit_6_i_5_0,
    dl_status_reg_bit_6_i_5_1,
    \FSM_sequential_dl_rx_state_reg[1] ,
    dl_status_reg,
    dl_status_reg_bit_0_reg,
    \FSM_sequential_dl_rx_state_reg[0]_4 ,
    \FSM_sequential_dl_rx_state_reg[0]_5 ,
    \FSM_sequential_dl_rx_state_reg[0]_6 ,
    \FSM_sequential_dl_rx_state_reg[0]_7 ,
    lp_clk_reg,
    lp_clk_reg_0,
    dl_status_reg_bit_6_reg_3,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    dl_status_reg_bit_0_reg_0,
    dl_status_reg_bit_0_reg_1,
    lp_11_r_dly,
    \FSM_sequential_dl_rx_state[0]_i_6_0 ,
    \lp_st_cnt_reg[0]_0 ,
    \lp_st_cnt_reg[0]_1 ,
    \lp_st_cnt_reg[0]_2 ,
    dl_status_reg_bit_0_reg_2);
  output out;
  output lp_00_r_reg;
  output [0:0]E;
  output lp_11_r_reg;
  output lp_00_r_reg_0;
  output lp_10_r_reg;
  output lp_00_r_reg_1;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output [0:0]\lp_st_dup_reg[1] ;
  output lp_10_r_reg_0;
  output \FSM_sequential_dl_rx_state_reg[4]_0 ;
  input rx_dl0_lp_dp;
  input core_clk;
  input dl_errcontrol_reg;
  input dl_errcontrol_reg_0;
  input lp_00_r;
  input lp_10_r;
  input dl_errcontrol_reg_1;
  input \FSM_sequential_dl_rx_state_reg[0] ;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[0]_1 ;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input \FSM_sequential_dl_rx_state_reg[0]_3 ;
  input dl_status_reg_bit_6_reg;
  input dl_status_reg_bit_6_reg_0;
  input dl_status_reg_bit_6_reg_1;
  input dl_status_reg_bit_6_reg_2;
  input [4:0]Q;
  input \lp_st_cnt_reg[0] ;
  input [0:0]D;
  input dl_status_reg_bit_6_i_5_0;
  input dl_status_reg_bit_6_i_5_1;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input [1:0]dl_status_reg;
  input dl_status_reg_bit_0_reg;
  input \FSM_sequential_dl_rx_state_reg[0]_4 ;
  input \FSM_sequential_dl_rx_state_reg[0]_5 ;
  input \FSM_sequential_dl_rx_state_reg[0]_6 ;
  input \FSM_sequential_dl_rx_state_reg[0]_7 ;
  input lp_clk_reg;
  input lp_clk_reg_0;
  input dl_status_reg_bit_6_reg_3;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input dl_status_reg_bit_0_reg_0;
  input dl_status_reg_bit_0_reg_1;
  input lp_11_r_dly;
  input \FSM_sequential_dl_rx_state[0]_i_6_0 ;
  input \lp_st_cnt_reg[0]_0 ;
  input \lp_st_cnt_reg[0]_1 ;
  input [1:0]\lp_st_cnt_reg[0]_2 ;
  input dl_status_reg_bit_0_reg_2;

  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[0]_i_6_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_9_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_14_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_3_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_5 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_6 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_7 ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire core_clk;
  wire dl_errcontrol_i_15_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire [1:0]dl_status_reg;
  wire dl_status_reg_bit_0_i_3_n_0;
  wire dl_status_reg_bit_0_reg;
  wire dl_status_reg_bit_0_reg_0;
  wire dl_status_reg_bit_0_reg_1;
  wire dl_status_reg_bit_0_reg_2;
  wire dl_status_reg_bit_6_i_10_n_0;
  wire dl_status_reg_bit_6_i_5_0;
  wire dl_status_reg_bit_6_i_5_1;
  wire dl_status_reg_bit_6_i_8_n_0;
  wire dl_status_reg_bit_6_reg;
  wire dl_status_reg_bit_6_reg_0;
  wire dl_status_reg_bit_6_reg_1;
  wire dl_status_reg_bit_6_reg_2;
  wire dl_status_reg_bit_6_reg_3;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_00_r_reg_0;
  wire lp_00_r_reg_1;
  wire lp_10_r;
  wire lp_10_r_reg;
  wire lp_10_r_reg_0;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire lp_clk_reg;
  wire lp_clk_reg_0;
  wire \lp_st_cnt_reg[0] ;
  wire \lp_st_cnt_reg[0]_0 ;
  wire \lp_st_cnt_reg[0]_1 ;
  wire [1:0]\lp_st_cnt_reg[0]_2 ;
  wire [0:0]\lp_st_dup_reg[1] ;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl0_lp_dp;
  LUT6 #(
    .INIT(64'hFFCCCCCCECCFCCCC)) 
    \FSM_sequential_dl_rx_state[0]_i_6 
       (.I0(lp_00_r),
        .I1(\FSM_sequential_dl_rx_state[0]_i_9_n_0 ),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(dl_status_reg_bit_0_reg),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_4 ),
        .O(lp_00_r_reg_0));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_sequential_dl_rx_state[0]_i_9 
       (.I0(\FSM_sequential_dl_rx_state_reg[1] ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_rx_state[0]_i_6_0 ),
        .I5(dl_errcontrol_i_15_n_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAEAAAEAAAE)) 
    \FSM_sequential_dl_rx_state[1]_i_3 
       (.I0(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I1(dl_errcontrol_reg),
        .I2(Q[4]),
        .I3(\FSM_sequential_dl_rx_state_reg[1] ),
        .I4(lp_10_r),
        .I5(dl_errcontrol_i_15_n_0),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT3 #(
    .INIT(8'hAB)) 
    \FSM_sequential_dl_rx_state[1]_i_7 
       (.I0(lp_10_r),
        .I1(s_level_out_d2),
        .I2(\lp_st_cnt_reg[0] ),
        .O(lp_10_r_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_dl_rx_state[4]_i_1 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_3_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0] ),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[0]_1 ),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_3 ),
        .O(E));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \FSM_sequential_dl_rx_state[4]_i_14 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(s_level_out_d2),
        .I3(\lp_st_cnt_reg[0] ),
        .I4(lp_11_r_dly),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(\FSM_sequential_dl_rx_state[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    \FSM_sequential_dl_rx_state[4]_i_3 
       (.I0(\FSM_sequential_dl_rx_state_reg[0]_5 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_6 ),
        .I2(Q[3]),
        .I3(\FSM_sequential_dl_rx_state[4]_i_14_n_0 ),
        .I4(dl_status_reg_bit_0_i_3_n_0),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_7 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    dl_errcontrol_i_15
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[0] ),
        .O(dl_errcontrol_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    dl_errcontrol_i_5
       (.I0(dl_errcontrol_reg),
        .I1(dl_errcontrol_reg_0),
        .I2(lp_00_r),
        .I3(lp_10_r),
        .I4(dl_errcontrol_i_15_n_0),
        .I5(dl_errcontrol_reg_1),
        .O(lp_00_r_reg));
  LUT6 #(
    .INIT(64'h404040FF40404000)) 
    dl_status_reg_bit_0_i_1
       (.I0(Q[4]),
        .I1(dl_status_reg_bit_0_reg),
        .I2(Q[2]),
        .I3(dl_status_reg_bit_0_reg_2),
        .I4(dl_status_reg_bit_0_i_3_n_0),
        .I5(dl_status_reg[0]),
        .O(\FSM_sequential_dl_rx_state_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    dl_status_reg_bit_0_i_3
       (.I0(dl_status_reg_bit_0_reg_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[0] ),
        .I5(dl_status_reg_bit_0_reg_1),
        .O(dl_status_reg_bit_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    dl_status_reg_bit_6_i_10
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(s_level_out_d2),
        .I3(\lp_st_cnt_reg[0] ),
        .I4(dl_errcontrol_reg_0),
        .I5(D),
        .O(dl_status_reg_bit_6_i_10_n_0));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    dl_status_reg_bit_6_i_3
       (.I0(\FSM_sequential_dl_rx_state[4]_i_14_n_0 ),
        .I1(dl_status_reg_bit_6_reg_3),
        .I2(lp_00_r),
        .I3(Q[0]),
        .I4(dl_status_reg_bit_6_reg_0),
        .O(lp_00_r_reg_1));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    dl_status_reg_bit_6_i_5
       (.I0(dl_status_reg_bit_6_i_8_n_0),
        .I1(dl_status_reg_bit_6_reg),
        .I2(dl_status_reg_bit_6_i_10_n_0),
        .I3(dl_status_reg_bit_6_reg_0),
        .I4(dl_status_reg_bit_6_reg_1),
        .I5(dl_status_reg_bit_6_reg_2),
        .O(lp_11_r_reg));
  LUT6 #(
    .INIT(64'hAAAAAEAA00000000)) 
    dl_status_reg_bit_6_i_8
       (.I0(dl_status_reg_bit_6_i_5_0),
        .I1(dl_errcontrol_reg),
        .I2(dl_status_reg_bit_6_i_5_1),
        .I3(dl_errcontrol_i_15_n_0),
        .I4(\FSM_sequential_dl_rx_state_reg[1] ),
        .I5(dl_status_reg[1]),
        .O(dl_status_reg_bit_6_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAEAAAAA)) 
    lp_clk_i_5
       (.I0(lp_clk_reg),
        .I1(dl_errcontrol_i_15_n_0),
        .I2(lp_10_r),
        .I3(Q[4]),
        .I4(dl_errcontrol_reg),
        .I5(lp_clk_reg_0),
        .O(lp_10_r_reg));
  LUT6 #(
    .INIT(64'hAEEAEEEEEEEEAEEA)) 
    \lp_st_cnt[0]_i_1 
       (.I0(\lp_st_cnt_reg[0]_0 ),
        .I1(\lp_st_cnt_reg[0]_1 ),
        .I2(\lp_st_cnt_reg[0]_2 [1]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[0]_2 [0]),
        .I5(\lp_st_cnt_reg[0] ),
        .O(\lp_st_dup_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_18
   (out,
    dl_en_hs_lpn_i,
    rx_div4_clk);
  output out;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = dl_en_hs_lpn_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_20
   (out,
    \cl_rx_state_reg[0] ,
    \cl_rx_state_reg[3] ,
    \cl_rx_state_reg[3]_0 ,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg ,
    \s_level_out_bus_d3_reg[1] ,
    \cl_rx_state_reg[2] ,
    \en_cl_init_to_blk.init_to_cnt_level20 ,
    cl_init_done_coreclk0,
    SR,
    s_level_out_d2_reg_0,
    lp_11_r_reg,
    rx_cl_lp_dn,
    core_clk,
    cl_status_reg_bit_0_reg,
    cl_status_reg_bit_0_reg_0,
    cl_status_reg_bit_0_reg_1,
    cl_mode,
    cl_status_reg_bit_5_reg,
    cl_status_reg_bit_5_reg_0,
    cl_errcontrol,
    cl_stopstate_reg,
    cl_stopstate,
    cl_stopstate_reg_0,
    \cl_rx_state_reg[2]_0 ,
    \en_cl_init_to_blk.init_to_cnt_level1_reg[0] ,
    CO,
    \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ,
    \cl_rx_state_reg[0]_0 ,
    core_rst,
    dl_forcerxmode_ris_edge,
    \cl_rx_state_reg[0]_1 ,
    \cl_rx_state_reg[0]_2 ,
    cl_rx_state0,
    lp_11_r_dly,
    cl_stopstate_reg_1,
    lp_10_r,
    \cl_rx_state_reg[3]_1 ,
    \en_cl_init_to_blk.init_to_cnt_level1_tc ,
    \en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 ,
    Q,
    \cl_rx_state_reg[2]_1 ,
    system_rst,
    lp_00_r,
    \cl_rx_state[2]_i_2_0 );
  output out;
  output \cl_rx_state_reg[0] ;
  output \cl_rx_state_reg[3] ;
  output \cl_rx_state_reg[3]_0 ;
  output \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  output \s_level_out_bus_d3_reg[1] ;
  output \cl_rx_state_reg[2] ;
  output \en_cl_init_to_blk.init_to_cnt_level20 ;
  output cl_init_done_coreclk0;
  output [0:0]SR;
  output s_level_out_d2_reg_0;
  output lp_11_r_reg;
  input rx_cl_lp_dn;
  input core_clk;
  input cl_status_reg_bit_0_reg;
  input cl_status_reg_bit_0_reg_0;
  input cl_status_reg_bit_0_reg_1;
  input [0:0]cl_mode;
  input cl_status_reg_bit_5_reg;
  input cl_status_reg_bit_5_reg_0;
  input cl_errcontrol;
  input cl_stopstate_reg;
  input cl_stopstate;
  input cl_stopstate_reg_0;
  input \cl_rx_state_reg[2]_0 ;
  input \en_cl_init_to_blk.init_to_cnt_level1_reg[0] ;
  input [0:0]CO;
  input \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  input [0:0]\cl_rx_state_reg[0]_0 ;
  input core_rst;
  input dl_forcerxmode_ris_edge;
  input \cl_rx_state_reg[0]_1 ;
  input \cl_rx_state_reg[0]_2 ;
  input cl_rx_state0;
  input lp_11_r_dly;
  input cl_stopstate_reg_1;
  input lp_10_r;
  input \cl_rx_state_reg[3]_1 ;
  input \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  input \en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 ;
  input [1:0]Q;
  input \cl_rx_state_reg[2]_1 ;
  input system_rst;
  input lp_00_r;
  input \cl_rx_state[2]_i_2_0 ;

  wire [0:0]CO;
  wire [1:0]Q;
  wire [0:0]SR;
  wire cl_errcontrol;
  wire cl_init_done_coreclk0;
  wire [0:0]cl_mode;
  wire [2:2]cl_rx_state;
  wire cl_rx_state0;
  wire \cl_rx_state[2]_i_2_0 ;
  wire \cl_rx_state[2]_i_4_n_0 ;
  wire \cl_rx_state[3]_i_11_n_0 ;
  wire \cl_rx_state[3]_i_14_n_0 ;
  wire \cl_rx_state[3]_i_15_n_0 ;
  wire \cl_rx_state[3]_i_4_n_0 ;
  wire \cl_rx_state[3]_i_8_n_0 ;
  wire \cl_rx_state_reg[0] ;
  wire [0:0]\cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[0]_1 ;
  wire \cl_rx_state_reg[0]_2 ;
  wire \cl_rx_state_reg[2] ;
  wire \cl_rx_state_reg[2]_0 ;
  wire \cl_rx_state_reg[2]_1 ;
  wire \cl_rx_state_reg[2]_i_3_n_0 ;
  wire \cl_rx_state_reg[3] ;
  wire \cl_rx_state_reg[3]_0 ;
  wire \cl_rx_state_reg[3]_1 ;
  wire \cl_rx_state_reg[3]_i_9_n_0 ;
  wire cl_status_reg_bit_0_i_2_n_0;
  wire cl_status_reg_bit_0_reg;
  wire cl_status_reg_bit_0_reg_0;
  wire cl_status_reg_bit_0_reg_1;
  wire cl_status_reg_bit_5_i_4_n_0;
  wire cl_status_reg_bit_5_reg;
  wire cl_status_reg_bit_5_reg_0;
  wire cl_stopstate;
  wire cl_stopstate_i_3_n_0;
  wire cl_stopstate_i_5_n_0;
  wire cl_stopstate_i_7_n_0;
  wire cl_stopstate_i_9_n_0;
  wire cl_stopstate_reg;
  wire cl_stopstate_reg_0;
  wire cl_stopstate_reg_1;
  wire cl_stopstate_reg_i_4_n_0;
  wire core_clk;
  wire core_rst;
  wire dl_forcerxmode_ris_edge;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg ;
  wire \en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1[7]_i_4_n_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_reg[0] ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 ;
  wire \en_cl_init_to_blk.init_to_cnt_level1_tc ;
  wire \en_cl_init_to_blk.init_to_cnt_level20 ;
  wire \en_cl_init_to_blk.init_to_cond_w ;
  wire lp_00_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1] ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  wire s_level_out_d2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_cl_lp_dn;
  LUT6 #(
    .INIT(64'hBB8B8888333FFFFF)) 
    \cl_rx_state[0]_i_5 
       (.I0(cl_stopstate_reg),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I2(s_level_out_d2),
        .I3(cl_stopstate_reg_0),
        .I4(lp_10_r),
        .I5(cl_status_reg_bit_0_reg),
        .O(lp_11_r_reg));
  LUT5 #(
    .INIT(32'h0000FBAA)) 
    \cl_rx_state[2]_i_1 
       (.I0(cl_rx_state),
        .I1(\cl_rx_state_reg[2]_1 ),
        .I2(system_rst),
        .I3(\cl_rx_state_reg[2]_0 ),
        .I4(dl_forcerxmode_ris_edge),
        .O(s_level_out_d2_reg_0));
  LUT6 #(
    .INIT(64'h0D33FFFF0D330000)) 
    \cl_rx_state[2]_i_2 
       (.I0(lp_00_r),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I2(cl_status_reg_bit_0_reg_1),
        .I3(cl_status_reg_bit_0_reg),
        .I4(cl_status_reg_bit_0_reg_0),
        .I5(\cl_rx_state_reg[2]_i_3_n_0 ),
        .O(cl_rx_state));
  LUT5 #(
    .INIT(32'h66664000)) 
    \cl_rx_state[2]_i_4 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I1(cl_status_reg_bit_0_reg),
        .I2(s_level_out_d2),
        .I3(cl_stopstate_reg_0),
        .I4(\cl_rx_state_reg[2]_0 ),
        .O(\cl_rx_state[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \cl_rx_state[3]_i_11 
       (.I0(s_level_out_d2),
        .I1(cl_stopstate_reg_0),
        .I2(\cl_rx_state_reg[2]_0 ),
        .I3(cl_status_reg_bit_0_reg),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .O(\cl_rx_state[3]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hEFE0F0E0)) 
    \cl_rx_state[3]_i_14 
       (.I0(lp_00_r),
        .I1(lp_10_r),
        .I2(cl_status_reg_bit_0_reg),
        .I3(s_level_out_d2),
        .I4(cl_stopstate_reg_0),
        .O(\cl_rx_state[3]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hFFEBFFAB)) 
    \cl_rx_state[3]_i_15 
       (.I0(cl_status_reg_bit_0_reg),
        .I1(s_level_out_d2),
        .I2(cl_stopstate_reg_0),
        .I3(lp_10_r),
        .I4(lp_11_r_dly),
        .O(\cl_rx_state[3]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'hFFFD)) 
    \cl_rx_state[3]_i_2 
       (.I0(\cl_rx_state_reg[0]_0 ),
        .I1(core_rst),
        .I2(\cl_rx_state[3]_i_4_n_0 ),
        .I3(dl_forcerxmode_ris_edge),
        .O(\s_level_out_bus_d3_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFFEAEAAAAFEAE)) 
    \cl_rx_state[3]_i_4 
       (.I0(\cl_rx_state_reg[0]_1 ),
        .I1(\cl_rx_state[3]_i_8_n_0 ),
        .I2(cl_status_reg_bit_0_reg_1),
        .I3(\cl_rx_state_reg[3]_i_9_n_0 ),
        .I4(cl_status_reg_bit_0_reg_0),
        .I5(\cl_rx_state_reg[0]_2 ),
        .O(\cl_rx_state[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h74FB77C877C877C8)) 
    \cl_rx_state[3]_i_8 
       (.I0(cl_rx_state0),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I2(\cl_rx_state_reg[2]_0 ),
        .I3(cl_status_reg_bit_0_reg),
        .I4(s_level_out_d2),
        .I5(cl_stopstate_reg_0),
        .O(\cl_rx_state[3]_i_8_n_0 ));
  MUXF7 \cl_rx_state_reg[2]_i_3 
       (.I0(\cl_rx_state[2]_i_4_n_0 ),
        .I1(\cl_rx_state[2]_i_2_0 ),
        .O(\cl_rx_state_reg[2]_i_3_n_0 ),
        .S(cl_status_reg_bit_0_reg_1));
  MUXF7 \cl_rx_state_reg[3]_i_7 
       (.I0(\cl_rx_state[3]_i_11_n_0 ),
        .I1(\cl_rx_state_reg[3]_1 ),
        .O(\cl_rx_state_reg[2] ),
        .S(cl_status_reg_bit_0_reg_1));
  MUXF7 \cl_rx_state_reg[3]_i_9 
       (.I0(\cl_rx_state[3]_i_14_n_0 ),
        .I1(\cl_rx_state[3]_i_15_n_0 ),
        .O(\cl_rx_state_reg[3]_i_9_n_0 ),
        .S(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ));
  LUT5 #(
    .INIT(32'hD3FF1000)) 
    cl_status_reg_bit_0_i_1
       (.I0(cl_status_reg_bit_0_reg),
        .I1(cl_status_reg_bit_0_reg_0),
        .I2(cl_status_reg_bit_0_reg_1),
        .I3(cl_status_reg_bit_0_i_2_n_0),
        .I4(cl_mode),
        .O(\cl_rx_state_reg[0] ));
  LUT6 #(
    .INIT(64'hAB00010000550000)) 
    cl_status_reg_bit_0_i_2
       (.I0(cl_status_reg_bit_0_reg),
        .I1(s_level_out_d2),
        .I2(cl_stopstate_reg_0),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I4(cl_stopstate_reg),
        .I5(cl_status_reg_bit_0_reg_1),
        .O(cl_status_reg_bit_0_i_2_n_0));
  LUT6 #(
    .INIT(64'hBABFBFBF8A808080)) 
    cl_status_reg_bit_5_i_1
       (.I0(cl_status_reg_bit_5_reg),
        .I1(cl_status_reg_bit_5_reg_0),
        .I2(cl_status_reg_bit_0_reg_0),
        .I3(cl_status_reg_bit_0_reg_1),
        .I4(cl_status_reg_bit_5_i_4_n_0),
        .I5(cl_errcontrol),
        .O(\cl_rx_state_reg[3] ));
  LUT6 #(
    .INIT(64'h2220222044040000)) 
    cl_status_reg_bit_5_i_4
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I1(cl_status_reg_bit_0_reg),
        .I2(s_level_out_d2),
        .I3(cl_stopstate_reg_0),
        .I4(lp_00_r),
        .I5(lp_10_r),
        .O(cl_status_reg_bit_5_i_4_n_0));
  LUT6 #(
    .INIT(64'h0D88FFFF0D880000)) 
    cl_stopstate_i_2
       (.I0(cl_status_reg_bit_0_reg_0),
        .I1(cl_stopstate_reg),
        .I2(cl_stopstate_i_3_n_0),
        .I3(cl_status_reg_bit_0_reg_1),
        .I4(cl_stopstate_reg_i_4_n_0),
        .I5(cl_stopstate),
        .O(\cl_rx_state_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h4C7C7C7C7C7C7C7C)) 
    cl_stopstate_i_3
       (.I0(cl_stopstate_reg),
        .I1(cl_status_reg_bit_0_reg),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I3(s_level_out_d2),
        .I4(cl_stopstate_reg_0),
        .I5(lp_11_r_dly),
        .O(cl_stopstate_i_3_n_0));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    cl_stopstate_i_5
       (.I0(cl_stopstate_i_7_n_0),
        .I1(cl_status_reg_bit_0_reg),
        .I2(cl_stopstate_reg),
        .I3(cl_status_reg_bit_0_reg_0),
        .I4(cl_status_reg_bit_0_reg_1),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_4_n_0 ),
        .O(cl_stopstate_i_5_n_0));
  LUT6 #(
    .INIT(64'h00F00FE000F000E0)) 
    cl_stopstate_i_7
       (.I0(cl_stopstate_i_9_n_0),
        .I1(lp_10_r),
        .I2(cl_status_reg_bit_0_reg_1),
        .I3(cl_status_reg_bit_0_reg_0),
        .I4(lp_00_r),
        .I5(cl_stopstate_reg),
        .O(cl_stopstate_i_7_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    cl_stopstate_i_9
       (.I0(s_level_out_d2),
        .I1(cl_stopstate_reg_0),
        .O(cl_stopstate_i_9_n_0));
  MUXF7 cl_stopstate_reg_i_4
       (.I0(cl_stopstate_i_5_n_0),
        .I1(cl_stopstate_reg_1),
        .O(cl_stopstate_reg_i_4_n_0),
        .S(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_1 
       (.I0(\cl_rx_state_reg[2]_0 ),
        .I1(\en_cl_init_to_blk.init_to_cond_w ),
        .I2(CO),
        .I3(\en_cl_init_to_blk.cl_init_done_coreclk_reg_0 ),
        .O(\en_cl_init_to_blk.cl_init_done_coreclk_reg ));
  LUT6 #(
    .INIT(64'h0000AA00C0000000)) 
    \en_cl_init_to_blk.cl_init_done_coreclk_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_4_n_0 ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 ),
        .I4(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I5(cl_status_reg_bit_0_reg),
        .O(\en_cl_init_to_blk.init_to_cond_w ));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \en_cl_init_to_blk.cl_init_done_div4clk_i_2 
       (.I0(\en_cl_init_to_blk.init_to_cond_w ),
        .I1(CO),
        .O(cl_init_done_coreclk0));
  LUT6 #(
    .INIT(64'h9FDFDFDFBFFFFFFF)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_1 
       (.I0(cl_status_reg_bit_0_reg),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_reg[0] ),
        .I2(\en_cl_init_to_blk.init_to_cnt_level1_reg[0]_0 ),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_4_n_0 ),
        .O(SR));
  LUT2 #(
    .INIT(4'h8)) 
    \en_cl_init_to_blk.init_to_cnt_level1[7]_i_4 
       (.I0(s_level_out_d2),
        .I1(cl_stopstate_reg_0),
        .O(\en_cl_init_to_blk.init_to_cnt_level1[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \en_cl_init_to_blk.init_to_cnt_level2[0]_i_1 
       (.I0(\en_cl_init_to_blk.init_to_cond_w ),
        .I1(\en_cl_init_to_blk.init_to_cnt_level1_tc ),
        .O(\en_cl_init_to_blk.init_to_cnt_level20 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_21
   (out,
    \lp_st_cnt_reg[0] ,
    \cl_rx_state_reg[0] ,
    cl_status_reg_bit_4__0,
    lp_11_r_reg,
    lp_11_r_reg_0,
    \cl_rx_state_reg[2] ,
    cl_rx_state,
    \lp_st_cnt_reg[1] ,
    \lp_st_cnt_reg[2] ,
    \lp_st_cnt_reg[3] ,
    \lp_st_cnt_reg[4] ,
    rx_cl_lp_dp,
    core_clk,
    \lp_st_cnt_reg[4]_0 ,
    lp_11_r_dly,
    lp_10_r,
    cl_status_reg_bit_4_reg,
    lp_st_cnt,
    cl_status_reg_bit_4_reg_0,
    cl_status_reg_bit_4_reg_1,
    cl_status_reg_bit_4_reg_2,
    cl_status_reg_bit_4_reg_3,
    cl_status_reg_bit_4_reg_4,
    lp_00_r,
    \cl_rx_state_reg[0]_0 ,
    \cl_rx_state[1]_i_2_0 ,
    Q,
    \lp_st_cnt_reg[4]_1 );
  output out;
  output \lp_st_cnt_reg[0] ;
  output \cl_rx_state_reg[0] ;
  output cl_status_reg_bit_4__0;
  output lp_11_r_reg;
  output lp_11_r_reg_0;
  output \cl_rx_state_reg[2] ;
  output [0:0]cl_rx_state;
  output \lp_st_cnt_reg[1] ;
  output \lp_st_cnt_reg[2] ;
  output \lp_st_cnt_reg[3] ;
  output \lp_st_cnt_reg[4] ;
  input rx_cl_lp_dp;
  input core_clk;
  input \lp_st_cnt_reg[4]_0 ;
  input lp_11_r_dly;
  input lp_10_r;
  input cl_status_reg_bit_4_reg;
  input [4:0]lp_st_cnt;
  input cl_status_reg_bit_4_reg_0;
  input cl_status_reg_bit_4_reg_1;
  input cl_status_reg_bit_4_reg_2;
  input cl_status_reg_bit_4_reg_3;
  input cl_status_reg_bit_4_reg_4;
  input lp_00_r;
  input \cl_rx_state_reg[0]_0 ;
  input \cl_rx_state[1]_i_2_0 ;
  input [1:0]Q;
  input \lp_st_cnt_reg[4]_1 ;

  wire [1:0]Q;
  wire [0:0]cl_rx_state;
  wire \cl_rx_state[0]_i_4_n_0 ;
  wire \cl_rx_state[1]_i_2_0 ;
  wire \cl_rx_state[1]_i_3_n_0 ;
  wire \cl_rx_state_reg[0] ;
  wire \cl_rx_state_reg[0]_0 ;
  wire \cl_rx_state_reg[2] ;
  wire cl_status_reg_bit_4__0;
  wire cl_status_reg_bit_4_i_2_n_0;
  wire cl_status_reg_bit_4_i_3_n_0;
  wire cl_status_reg_bit_4_i_4_n_0;
  wire cl_status_reg_bit_4_i_5_n_0;
  wire cl_status_reg_bit_4_i_6_n_0;
  wire cl_status_reg_bit_4_i_7_n_0;
  wire cl_status_reg_bit_4_reg;
  wire cl_status_reg_bit_4_reg_0;
  wire cl_status_reg_bit_4_reg_1;
  wire cl_status_reg_bit_4_reg_2;
  wire cl_status_reg_bit_4_reg_3;
  wire cl_status_reg_bit_4_reg_4;
  wire cl_stopstate_i_8_n_0;
  wire core_clk;
  wire lp_00_r;
  wire lp_10_r;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire lp_11_r_reg_0;
  wire [4:0]lp_st_cnt;
  wire lp_st_cnt1;
  wire \lp_st_cnt_reg[0] ;
  wire \lp_st_cnt_reg[1] ;
  wire \lp_st_cnt_reg[2] ;
  wire \lp_st_cnt_reg[3] ;
  wire \lp_st_cnt_reg[4] ;
  wire \lp_st_cnt_reg[4]_0 ;
  wire \lp_st_cnt_reg[4]_1 ;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_cl_lp_dp;
  LUT5 #(
    .INIT(32'h10007777)) 
    \cl_rx_state[0]_i_4 
       (.I0(cl_status_reg_bit_4_reg_4),
        .I1(\cl_rx_state[1]_i_2_0 ),
        .I2(s_level_out_d2),
        .I3(\lp_st_cnt_reg[4]_0 ),
        .I4(cl_status_reg_bit_4_reg_0),
        .O(\cl_rx_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0062FFFF00620000)) 
    \cl_rx_state[1]_i_2 
       (.I0(cl_status_reg_bit_4_reg_4),
        .I1(cl_status_reg_bit_4_reg_0),
        .I2(lp_00_r),
        .I3(cl_status_reg_bit_4_reg_1),
        .I4(cl_status_reg_bit_4_reg),
        .I5(\cl_rx_state[1]_i_3_n_0 ),
        .O(cl_rx_state));
  LUT6 #(
    .INIT(64'h405460644044484C)) 
    \cl_rx_state[1]_i_3 
       (.I0(cl_status_reg_bit_4_reg_1),
        .I1(cl_status_reg_bit_4_reg_4),
        .I2(cl_status_reg_bit_4_reg_0),
        .I3(\cl_rx_state[1]_i_2_0 ),
        .I4(s_level_out_d2),
        .I5(\lp_st_cnt_reg[4]_0 ),
        .O(\cl_rx_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8BBB8B8BFFFFFFFF)) 
    \cl_rx_state[2]_i_5 
       (.I0(cl_status_reg_bit_4_reg_2),
        .I1(cl_status_reg_bit_4_reg_4),
        .I2(lp_10_r),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[4]_0 ),
        .I5(cl_status_reg_bit_4_reg_0),
        .O(lp_11_r_reg_0));
  LUT6 #(
    .INIT(64'h5FC050C05FC05F00)) 
    \cl_rx_state[3]_i_12 
       (.I0(cl_status_reg_bit_4_reg_2),
        .I1(lp_10_r),
        .I2(cl_status_reg_bit_4_reg_4),
        .I3(cl_status_reg_bit_4_reg_0),
        .I4(s_level_out_d2),
        .I5(\lp_st_cnt_reg[4]_0 ),
        .O(lp_11_r_reg));
  MUXF7 \cl_rx_state_reg[0]_i_3 
       (.I0(\cl_rx_state[0]_i_4_n_0 ),
        .I1(\cl_rx_state_reg[0]_0 ),
        .O(\cl_rx_state_reg[2] ),
        .S(cl_status_reg_bit_4_reg_1));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    cl_status_reg_bit_4_i_2
       (.I0(cl_status_reg_bit_4_reg_3),
        .I1(cl_status_reg_bit_4_reg),
        .I2(cl_status_reg_bit_4_i_4_n_0),
        .I3(cl_status_reg_bit_4_reg_4),
        .I4(cl_status_reg_bit_4_i_5_n_0),
        .O(cl_status_reg_bit_4_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFEFEF0F00E0E000)) 
    cl_status_reg_bit_4_i_3
       (.I0(cl_status_reg_bit_4_reg_3),
        .I1(cl_status_reg_bit_4_reg_2),
        .I2(cl_status_reg_bit_4_reg_4),
        .I3(cl_status_reg_bit_4_reg),
        .I4(cl_status_reg_bit_4_reg_1),
        .I5(cl_status_reg_bit_4_i_6_n_0),
        .O(cl_status_reg_bit_4_i_3_n_0));
  LUT6 #(
    .INIT(64'h88A8888888888888)) 
    cl_status_reg_bit_4_i_4
       (.I0(cl_status_reg_bit_4_reg_1),
        .I1(cl_status_reg_bit_4_reg_3),
        .I2(lp_11_r_dly),
        .I3(lp_10_r),
        .I4(s_level_out_d2),
        .I5(\lp_st_cnt_reg[4]_0 ),
        .O(cl_status_reg_bit_4_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFAAAAFFFFC000)) 
    cl_status_reg_bit_4_i_5
       (.I0(cl_status_reg_bit_4_reg_2),
        .I1(s_level_out_d2),
        .I2(\lp_st_cnt_reg[4]_0 ),
        .I3(cl_status_reg_bit_4_reg_1),
        .I4(cl_status_reg_bit_4_reg_3),
        .I5(cl_status_reg_bit_4_reg),
        .O(cl_status_reg_bit_4_i_5_n_0));
  LUT6 #(
    .INIT(64'hBBBBBBBB8B888888)) 
    cl_status_reg_bit_4_i_6
       (.I0(cl_status_reg_bit_4_i_7_n_0),
        .I1(cl_status_reg_bit_4_reg_1),
        .I2(lp_00_r),
        .I3(cl_status_reg_bit_4_reg_2),
        .I4(cl_status_reg_bit_4_reg),
        .I5(cl_status_reg_bit_4_reg_3),
        .O(cl_status_reg_bit_4_i_6_n_0));
  LUT6 #(
    .INIT(64'h888B8888888B888B)) 
    cl_status_reg_bit_4_i_7
       (.I0(cl_status_reg_bit_4_reg_3),
        .I1(cl_status_reg_bit_4_reg),
        .I2(lp_10_r),
        .I3(lp_00_r),
        .I4(s_level_out_d2),
        .I5(\lp_st_cnt_reg[4]_0 ),
        .O(cl_status_reg_bit_4_i_7_n_0));
  MUXF7 cl_status_reg_bit_4_reg_i_1
       (.I0(cl_status_reg_bit_4_i_2_n_0),
        .I1(cl_status_reg_bit_4_i_3_n_0),
        .O(cl_status_reg_bit_4__0),
        .S(cl_status_reg_bit_4_reg_0));
  LUT5 #(
    .INIT(32'h2EEF222F)) 
    cl_stopstate_i_6
       (.I0(cl_stopstate_i_8_n_0),
        .I1(cl_status_reg_bit_4_reg_0),
        .I2(cl_status_reg_bit_4_reg_1),
        .I3(cl_status_reg_bit_4_reg),
        .I4(cl_status_reg_bit_4_reg_2),
        .O(\cl_rx_state_reg[0] ));
  LUT5 #(
    .INIT(32'h00000080)) 
    cl_stopstate_i_8
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[4]_0 ),
        .I2(lp_11_r_dly),
        .I3(lp_10_r),
        .I4(cl_status_reg_bit_4_reg),
        .O(cl_stopstate_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \lp_st_cnt[0]_i_1__1 
       (.I0(lp_st_cnt1),
        .I1(lp_st_cnt[0]),
        .O(\lp_st_cnt_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h28)) 
    \lp_st_cnt[1]_i_1 
       (.I0(lp_st_cnt1),
        .I1(lp_st_cnt[1]),
        .I2(lp_st_cnt[0]),
        .O(\lp_st_cnt_reg[1] ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h2888)) 
    \lp_st_cnt[2]_i_1 
       (.I0(lp_st_cnt1),
        .I1(lp_st_cnt[2]),
        .I2(lp_st_cnt[1]),
        .I3(lp_st_cnt[0]),
        .O(\lp_st_cnt_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h28888888)) 
    \lp_st_cnt[3]_i_1 
       (.I0(lp_st_cnt1),
        .I1(lp_st_cnt[3]),
        .I2(lp_st_cnt[2]),
        .I3(lp_st_cnt[0]),
        .I4(lp_st_cnt[1]),
        .O(\lp_st_cnt_reg[3] ));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    \lp_st_cnt[4]_i_2 
       (.I0(lp_st_cnt1),
        .I1(lp_st_cnt[4]),
        .I2(lp_st_cnt[3]),
        .I3(lp_st_cnt[1]),
        .I4(lp_st_cnt[0]),
        .I5(lp_st_cnt[2]),
        .O(\lp_st_cnt_reg[4] ));
  LUT5 #(
    .INIT(32'hFFFF9009)) 
    \lp_st_cnt[4]_i_3 
       (.I0(s_level_out_d2),
        .I1(Q[1]),
        .I2(\lp_st_cnt_reg[4]_0 ),
        .I3(Q[0]),
        .I4(\lp_st_cnt_reg[4]_1 ),
        .O(lp_st_cnt1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_8
   (out,
    lp_00_r_reg,
    E,
    lp_11_r_reg,
    lp_00_r_reg_0,
    lp_10_r_reg,
    lp_00_r_reg_1,
    \FSM_sequential_dl_rx_state_reg[4] ,
    \lp_st_dup_reg[1] ,
    lp_10_r_reg_0,
    \FSM_sequential_dl_rx_state_reg[4]_0 ,
    rx_dl1_lp_dp,
    core_clk,
    dl_errcontrol_reg,
    dl_errcontrol_reg_0,
    lp_00_r,
    lp_10_r,
    dl_errcontrol_reg_1,
    \FSM_sequential_dl_rx_state_reg[0] ,
    \FSM_sequential_dl_rx_state_reg[0]_0 ,
    \FSM_sequential_dl_rx_state_reg[0]_1 ,
    \FSM_sequential_dl_rx_state_reg[0]_2 ,
    \FSM_sequential_dl_rx_state_reg[0]_3 ,
    dl_status_reg_bit_6_reg,
    dl_status_reg_bit_6_reg_0,
    dl_status_reg_bit_6_reg_1,
    dl_status_reg_bit_6_reg_2,
    Q,
    \lp_st_cnt_reg[0] ,
    D,
    dl_status_reg_bit_6_i_5__0_0,
    dl_status_reg_bit_6_i_5__0_1,
    \FSM_sequential_dl_rx_state_reg[1] ,
    dl_status_reg,
    dl_status_reg_bit_0_reg,
    \FSM_sequential_dl_rx_state_reg[0]_4 ,
    \FSM_sequential_dl_rx_state_reg[0]_5 ,
    \FSM_sequential_dl_rx_state_reg[0]_6 ,
    \FSM_sequential_dl_rx_state_reg[0]_7 ,
    lp_clk_reg,
    lp_clk_reg_0,
    dl_status_reg_bit_6_reg_3,
    \FSM_sequential_dl_rx_state_reg[1]_0 ,
    dl_status_reg_bit_0_reg_0,
    dl_status_reg_bit_0_reg_1,
    lp_11_r_dly,
    \FSM_sequential_dl_rx_state[0]_i_6__0_0 ,
    \lp_st_cnt_reg[0]_0 ,
    \lp_st_cnt_reg[0]_1 ,
    \lp_st_cnt_reg[0]_2 ,
    dl_status_reg_bit_0_reg_2);
  output out;
  output lp_00_r_reg;
  output [0:0]E;
  output lp_11_r_reg;
  output lp_00_r_reg_0;
  output lp_10_r_reg;
  output lp_00_r_reg_1;
  output \FSM_sequential_dl_rx_state_reg[4] ;
  output [0:0]\lp_st_dup_reg[1] ;
  output lp_10_r_reg_0;
  output \FSM_sequential_dl_rx_state_reg[4]_0 ;
  input rx_dl1_lp_dp;
  input core_clk;
  input dl_errcontrol_reg;
  input dl_errcontrol_reg_0;
  input lp_00_r;
  input lp_10_r;
  input dl_errcontrol_reg_1;
  input \FSM_sequential_dl_rx_state_reg[0] ;
  input \FSM_sequential_dl_rx_state_reg[0]_0 ;
  input \FSM_sequential_dl_rx_state_reg[0]_1 ;
  input \FSM_sequential_dl_rx_state_reg[0]_2 ;
  input \FSM_sequential_dl_rx_state_reg[0]_3 ;
  input dl_status_reg_bit_6_reg;
  input dl_status_reg_bit_6_reg_0;
  input dl_status_reg_bit_6_reg_1;
  input dl_status_reg_bit_6_reg_2;
  input [4:0]Q;
  input \lp_st_cnt_reg[0] ;
  input [0:0]D;
  input dl_status_reg_bit_6_i_5__0_0;
  input dl_status_reg_bit_6_i_5__0_1;
  input \FSM_sequential_dl_rx_state_reg[1] ;
  input [1:0]dl_status_reg;
  input dl_status_reg_bit_0_reg;
  input \FSM_sequential_dl_rx_state_reg[0]_4 ;
  input \FSM_sequential_dl_rx_state_reg[0]_5 ;
  input \FSM_sequential_dl_rx_state_reg[0]_6 ;
  input \FSM_sequential_dl_rx_state_reg[0]_7 ;
  input lp_clk_reg;
  input lp_clk_reg_0;
  input dl_status_reg_bit_6_reg_3;
  input \FSM_sequential_dl_rx_state_reg[1]_0 ;
  input dl_status_reg_bit_0_reg_0;
  input dl_status_reg_bit_0_reg_1;
  input lp_11_r_dly;
  input \FSM_sequential_dl_rx_state[0]_i_6__0_0 ;
  input \lp_st_cnt_reg[0]_0 ;
  input \lp_st_cnt_reg[0]_1 ;
  input [1:0]\lp_st_cnt_reg[0]_2 ;
  input dl_status_reg_bit_0_reg_2;

  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_dl_rx_state[0]_i_6__0_0 ;
  wire \FSM_sequential_dl_rx_state[0]_i_9__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_14__0_n_0 ;
  wire \FSM_sequential_dl_rx_state[4]_i_3__0_n_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0] ;
  wire \FSM_sequential_dl_rx_state_reg[0]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_1 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_2 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_3 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_4 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_5 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_6 ;
  wire \FSM_sequential_dl_rx_state_reg[0]_7 ;
  wire \FSM_sequential_dl_rx_state_reg[1] ;
  wire \FSM_sequential_dl_rx_state_reg[1]_0 ;
  wire \FSM_sequential_dl_rx_state_reg[4] ;
  wire \FSM_sequential_dl_rx_state_reg[4]_0 ;
  wire [4:0]Q;
  wire core_clk;
  wire dl_errcontrol_i_15__0_n_0;
  wire dl_errcontrol_reg;
  wire dl_errcontrol_reg_0;
  wire dl_errcontrol_reg_1;
  wire [1:0]dl_status_reg;
  wire dl_status_reg_bit_0_i_3__0_n_0;
  wire dl_status_reg_bit_0_reg;
  wire dl_status_reg_bit_0_reg_0;
  wire dl_status_reg_bit_0_reg_1;
  wire dl_status_reg_bit_0_reg_2;
  wire dl_status_reg_bit_6_i_10__0_n_0;
  wire dl_status_reg_bit_6_i_5__0_0;
  wire dl_status_reg_bit_6_i_5__0_1;
  wire dl_status_reg_bit_6_i_8__0_n_0;
  wire dl_status_reg_bit_6_reg;
  wire dl_status_reg_bit_6_reg_0;
  wire dl_status_reg_bit_6_reg_1;
  wire dl_status_reg_bit_6_reg_2;
  wire dl_status_reg_bit_6_reg_3;
  wire lp_00_r;
  wire lp_00_r_reg;
  wire lp_00_r_reg_0;
  wire lp_00_r_reg_1;
  wire lp_10_r;
  wire lp_10_r_reg;
  wire lp_10_r_reg_0;
  wire lp_11_r_dly;
  wire lp_11_r_reg;
  wire lp_clk_reg;
  wire lp_clk_reg_0;
  wire \lp_st_cnt_reg[0] ;
  wire \lp_st_cnt_reg[0]_0 ;
  wire \lp_st_cnt_reg[0]_1 ;
  wire [1:0]\lp_st_cnt_reg[0]_2 ;
  wire [0:0]\lp_st_dup_reg[1] ;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = rx_dl1_lp_dp;
  LUT6 #(
    .INIT(64'hFFCCCCCCECCFCCCC)) 
    \FSM_sequential_dl_rx_state[0]_i_6__0 
       (.I0(lp_00_r),
        .I1(\FSM_sequential_dl_rx_state[0]_i_9__0_n_0 ),
        .I2(Q[1]),
        .I3(Q[4]),
        .I4(dl_status_reg_bit_0_reg),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_4 ),
        .O(lp_00_r_reg_0));
  LUT6 #(
    .INIT(64'h0000000001000000)) 
    \FSM_sequential_dl_rx_state[0]_i_9__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[1] ),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_dl_rx_state[0]_i_6__0_0 ),
        .I5(dl_errcontrol_i_15__0_n_0),
        .O(\FSM_sequential_dl_rx_state[0]_i_9__0_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAEAAAEAAAE)) 
    \FSM_sequential_dl_rx_state[1]_i_3__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[1]_0 ),
        .I1(dl_errcontrol_reg),
        .I2(Q[4]),
        .I3(\FSM_sequential_dl_rx_state_reg[1] ),
        .I4(lp_10_r),
        .I5(dl_errcontrol_i_15__0_n_0),
        .O(\FSM_sequential_dl_rx_state_reg[4] ));
  LUT3 #(
    .INIT(8'hAB)) 
    \FSM_sequential_dl_rx_state[1]_i_7__0 
       (.I0(lp_10_r),
        .I1(s_level_out_d2),
        .I2(\lp_st_cnt_reg[0] ),
        .O(lp_10_r_reg_0));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    \FSM_sequential_dl_rx_state[4]_i_14__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(s_level_out_d2),
        .I3(\lp_st_cnt_reg[0] ),
        .I4(lp_11_r_dly),
        .I5(dl_status_reg_bit_0_reg_0),
        .O(\FSM_sequential_dl_rx_state[4]_i_14__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_sequential_dl_rx_state[4]_i_1__0 
       (.I0(\FSM_sequential_dl_rx_state[4]_i_3__0_n_0 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0] ),
        .I2(\FSM_sequential_dl_rx_state_reg[0]_0 ),
        .I3(\FSM_sequential_dl_rx_state_reg[0]_1 ),
        .I4(\FSM_sequential_dl_rx_state_reg[0]_2 ),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_3 ),
        .O(E));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFEA)) 
    \FSM_sequential_dl_rx_state[4]_i_3__0 
       (.I0(\FSM_sequential_dl_rx_state_reg[0]_5 ),
        .I1(\FSM_sequential_dl_rx_state_reg[0]_6 ),
        .I2(Q[3]),
        .I3(\FSM_sequential_dl_rx_state[4]_i_14__0_n_0 ),
        .I4(dl_status_reg_bit_0_i_3__0_n_0),
        .I5(\FSM_sequential_dl_rx_state_reg[0]_7 ),
        .O(\FSM_sequential_dl_rx_state[4]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    dl_errcontrol_i_15__0
       (.I0(s_level_out_d2),
        .I1(\lp_st_cnt_reg[0] ),
        .O(dl_errcontrol_i_15__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFF00200000)) 
    dl_errcontrol_i_5__0
       (.I0(dl_errcontrol_reg),
        .I1(dl_errcontrol_reg_0),
        .I2(lp_00_r),
        .I3(lp_10_r),
        .I4(dl_errcontrol_i_15__0_n_0),
        .I5(dl_errcontrol_reg_1),
        .O(lp_00_r_reg));
  LUT6 #(
    .INIT(64'h404040FF40404000)) 
    dl_status_reg_bit_0_i_1__0
       (.I0(Q[4]),
        .I1(dl_status_reg_bit_0_reg),
        .I2(Q[2]),
        .I3(dl_status_reg_bit_0_reg_2),
        .I4(dl_status_reg_bit_0_i_3__0_n_0),
        .I5(dl_status_reg[0]),
        .O(\FSM_sequential_dl_rx_state_reg[4]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000010)) 
    dl_status_reg_bit_0_i_3__0
       (.I0(dl_status_reg_bit_0_reg_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[0] ),
        .I5(dl_status_reg_bit_0_reg_1),
        .O(dl_status_reg_bit_0_i_3__0_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    dl_status_reg_bit_6_i_10__0
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(s_level_out_d2),
        .I3(\lp_st_cnt_reg[0] ),
        .I4(dl_errcontrol_reg_0),
        .I5(D),
        .O(dl_status_reg_bit_6_i_10__0_n_0));
  LUT5 #(
    .INIT(32'hAEAAAAAA)) 
    dl_status_reg_bit_6_i_3__0
       (.I0(\FSM_sequential_dl_rx_state[4]_i_14__0_n_0 ),
        .I1(dl_status_reg_bit_6_reg_3),
        .I2(lp_00_r),
        .I3(Q[0]),
        .I4(dl_status_reg_bit_6_reg_0),
        .O(lp_00_r_reg_1));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    dl_status_reg_bit_6_i_5__0
       (.I0(dl_status_reg_bit_6_i_8__0_n_0),
        .I1(dl_status_reg_bit_6_reg),
        .I2(dl_status_reg_bit_6_i_10__0_n_0),
        .I3(dl_status_reg_bit_6_reg_0),
        .I4(dl_status_reg_bit_6_reg_1),
        .I5(dl_status_reg_bit_6_reg_2),
        .O(lp_11_r_reg));
  LUT6 #(
    .INIT(64'hAAAAAEAA00000000)) 
    dl_status_reg_bit_6_i_8__0
       (.I0(dl_status_reg_bit_6_i_5__0_0),
        .I1(dl_errcontrol_reg),
        .I2(dl_status_reg_bit_6_i_5__0_1),
        .I3(dl_errcontrol_i_15__0_n_0),
        .I4(\FSM_sequential_dl_rx_state_reg[1] ),
        .I5(dl_status_reg[1]),
        .O(dl_status_reg_bit_6_i_8__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAEAAAAA)) 
    lp_clk_i_5__0
       (.I0(lp_clk_reg),
        .I1(dl_errcontrol_i_15__0_n_0),
        .I2(lp_10_r),
        .I3(Q[4]),
        .I4(dl_errcontrol_reg),
        .I5(lp_clk_reg_0),
        .O(lp_10_r_reg));
  LUT6 #(
    .INIT(64'hAEEAEEEEEEEEAEEA)) 
    \lp_st_cnt[0]_i_1__0 
       (.I0(\lp_st_cnt_reg[0]_0 ),
        .I1(\lp_st_cnt_reg[0]_1 ),
        .I2(\lp_st_cnt_reg[0]_2 [1]),
        .I3(s_level_out_d2),
        .I4(\lp_st_cnt_reg[0]_2 [0]),
        .I5(\lp_st_cnt_reg[0] ),
        .O(\lp_st_dup_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized1_9
   (out,
    dl_en_hs_lpn_i,
    rx_div4_clk);
  output out;
  input dl_en_hs_lpn_i;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d2;
  assign p_level_in_int = dl_en_hs_lpn_i;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2
   (D,
    \rd_addr_reg[5] ,
    \rd_addr_reg[5]_0 ,
    \rd_addr_reg[2] ,
    \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] ,
    \rd_addr_reg[5]_1 ,
    \rd_addr_reg[6] ,
    Q,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ,
    rd_req,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_0 ,
    SR,
    pkt_cnt,
    s_axi_aclk);
  output [9:0]D;
  output \rd_addr_reg[5] ;
  output \rd_addr_reg[5]_0 ;
  output \rd_addr_reg[2] ;
  output \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] ;
  output \rd_addr_reg[5]_1 ;
  output \rd_addr_reg[6] ;
  input [4:0]Q;
  input [3:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ;
  input rd_req;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_1 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_0 ;
  input [0:0]SR;
  input [15:0]pkt_cnt;
  input s_axi_aclk;

  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_6_n_0 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_9_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ;
  wire [3:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] ;
  wire [15:0]pkt_cnt;
  wire \rd_addr_reg[2] ;
  wire \rd_addr_reg[5] ;
  wire \rd_addr_reg[5]_0 ;
  wire \rd_addr_reg[5]_1 ;
  wire \rd_addr_reg[6] ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[9:4] = s_level_out_bus_d3[14:9];
  assign D[3] = s_level_out_bus_d3[6];
  assign D[2:0] = s_level_out_bus_d3[3:1];
  LUT6 #(
    .INIT(64'hFFFFFFFF0000C7F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] [0]),
        .I4(Q[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_6_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.idelay_fixed_tap1_reg[24] ));
  LUT5 #(
    .INIT(32'hBFFFAAAA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_6 
       (.I0(Q[3]),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFEFEFBFFFFFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[4]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] [1]),
        .O(\rd_addr_reg[5] ));
  LUT6 #(
    .INIT(64'hBBEFFFFFFFEFFFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] [2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(s_level_out_bus_d3[5]),
        .O(\rd_addr_reg[5]_1 ));
  LUT6 #(
    .INIT(64'hBFFFEFEFBFFFFFFF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_3 
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[7]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] [3]),
        .O(\rd_addr_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h4444040044444444)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 
       (.I0(Q[4]),
        .I1(rd_req),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ),
        .I3(s_level_out_bus_d3[8]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_1 ),
        .O(\rd_addr_reg[6] ));
  LUT6 #(
    .INIT(64'h1111011111111111)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_9_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ),
        .O(\rd_addr_reg[2] ));
  LUT6 #(
    .INIT(64'h0003800000008000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_9 
       (.I0(s_level_out_bus_d3[15]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(pkt_cnt[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_22
   (D,
    \s_level_out_bus_d3_reg[7]_0 ,
    \s_level_out_bus_d3_reg[5]_0 ,
    \s_level_out_bus_d3_reg[4]_0 ,
    \s_level_out_bus_d3_reg[0]_0 ,
    \s_level_out_bus_d3_reg[8]_0 ,
    Q,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[15]_0 ,
    s_axi_aclk);
  output [10:0]D;
  output \s_level_out_bus_d3_reg[7]_0 ;
  output \s_level_out_bus_d3_reg[5]_0 ;
  output \s_level_out_bus_d3_reg[4]_0 ;
  output \s_level_out_bus_d3_reg[0]_0 ;
  output \s_level_out_bus_d3_reg[8]_0 ;
  input [1:0]Q;
  input [4:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 ;
  input [4:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  input [0:0]SR;
  input [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  input s_axi_aclk;

  wire [1:0]Q;
  wire [0:0]SR;
  wire [4:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 ;
  wire [4:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  wire [15:0]\s_level_out_bus_d1_cdc_to_reg[15]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[0]_0 ;
  wire \s_level_out_bus_d3_reg[4]_0 ;
  wire \s_level_out_bus_d3_reg[5]_0 ;
  wire \s_level_out_bus_d3_reg[7]_0 ;
  wire \s_level_out_bus_d3_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[10:4] = s_level_out_bus_d3[15:9];
  assign D[3] = s_level_out_bus_d3[6];
  assign D[2:0] = s_level_out_bus_d3[3:1];
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_4 
       (.I0(s_level_out_bus_d3[0]),
        .I1(Q[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 [0]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 [0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .O(\s_level_out_bus_d3_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_4 
       (.I0(s_level_out_bus_d3[4]),
        .I1(Q[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 [1]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 [1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .O(\s_level_out_bus_d3_reg[4]_0 ));
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_4 
       (.I0(s_level_out_bus_d3[5]),
        .I1(Q[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 [2]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 [2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .O(\s_level_out_bus_d3_reg[5]_0 ));
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_4 
       (.I0(s_level_out_bus_d3[7]),
        .I1(Q[0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 [3]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 [3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .O(\s_level_out_bus_d3_reg[7]_0 ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_6 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .I1(s_level_out_bus_d3[8]),
        .I2(Q[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4 [4]),
        .I4(Q[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_4_0 [4]),
        .O(\s_level_out_bus_d3_reg[8]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[15]_0 [9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_23
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_24
   (D,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] ,
    \s_level_out_bus_d3_reg[6]_0 ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] ,
    \s_level_out_bus_d3_reg[10]_0 ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] ,
    \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] ,
    \s_level_out_bus_d3_reg[13]_0 ,
    \s_level_out_bus_d3_reg[14]_0 ,
    \s_level_out_bus_d3_reg[15]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ,
    Q,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 ,
    SR,
    s_axi_aclk);
  output [4:0]D;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] ;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] ;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] ;
  output \s_level_out_bus_d3_reg[6]_0 ;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] ;
  output \s_level_out_bus_d3_reg[10]_0 ;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] ;
  output \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] ;
  output \s_level_out_bus_d3_reg[13]_0 ;
  output \s_level_out_bus_d3_reg[14]_0 ;
  output \s_level_out_bus_d3_reg[15]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ;
  input [10:0]Q;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ;
  input [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ;
  input [3:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 ;
  input [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 ;
  input [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 ;
  input [0:0]SR;
  input s_axi_aclk;

  wire [10:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_4_n_0 ;
  wire [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 ;
  wire [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_4_n_0 ;
  wire [3:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ;
  wire [9:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] ;
  wire \gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] ;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[10]_0 ;
  wire \s_level_out_bus_d3_reg[13]_0 ;
  wire \s_level_out_bus_d3_reg[14]_0 ;
  wire \s_level_out_bus_d3_reg[15]_0 ;
  wire \s_level_out_bus_d3_reg[6]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[4:3] = s_level_out_bus_d3[8:7];
  assign D[2:1] = s_level_out_bus_d3[5:4];
  assign D[0] = s_level_out_bus_d3[0];
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[0]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[17] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_4 
       (.I0(s_level_out_bus_d3[1]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [0]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[1]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[18] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_4 
       (.I0(s_level_out_bus_d3[2]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [1]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[2]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[19] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_4 
       (.I0(s_level_out_bus_d3[3]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [2]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [3]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .O(\s_level_out_bus_d3_reg[6]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_4 
       (.I0(s_level_out_bus_d3[6]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [3]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[4]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [4]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[25] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_4 
       (.I0(s_level_out_bus_d3[9]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [4]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [5]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .I4(Q[5]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .O(\s_level_out_bus_d3_reg[10]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_4 
       (.I0(s_level_out_bus_d3[10]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [5]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [5]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[6]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [6]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[27] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_4 
       (.I0(s_level_out_bus_d3[11]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [6]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [6]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(Q[7]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [7]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.init_value_axi_reg[28] ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_4 
       (.I0(s_level_out_bus_d3[12]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [7]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [7]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [8]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .I4(Q[8]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .O(\s_level_out_bus_d3_reg[13]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_4 
       (.I0(s_level_out_bus_d3[13]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [8]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [8]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h7707770700007707)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] [9]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .I4(Q[9]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .O(\s_level_out_bus_d3_reg[14]_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_4 
       (.I0(s_level_out_bus_d3[14]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_0 [9]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_3_1 [9]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0023000000200000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_10 
       (.I0(s_level_out_bus_d3[15]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [3]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [2]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_7 [1]),
        .I5(Q[10]),
        .O(\s_level_out_bus_d3_reg[15]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_25
   (\s_level_out_bus_d3_reg[15]_0 ,
    Q,
    D,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]_0 ,
    rd_req,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_1 ,
    SR,
    s_axi_aclk);
  output [15:0]\s_level_out_bus_d3_reg[15]_0 ;
  input [4:0]Q;
  input [15:0]D;
  input [15:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]_0 ;
  input rd_req;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ;
  input [15:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_1 ;
  input [0:0]SR;
  input s_axi_aclk;

  wire [15:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ;
  wire [15:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] ;
  wire [15:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  wire [15:0]\s_level_out_bus_d3_reg[15]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'h44440000FF0F0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(\s_level_out_bus_d3_reg[15]_0 [0]));
  LUT6 #(
    .INIT(64'hA0A2AAAAAAA2AAAA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_5_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[16]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_5 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [1]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_1 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [1]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[1]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [2]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[18] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [2]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [3]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[19] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [3]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[3]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [3]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44440000FF0F0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[20]_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(\s_level_out_bus_d3_reg[15]_0 [4]));
  LUT5 #(
    .INIT(32'hAAA2AAAA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_5_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_5 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[4]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[4]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [4]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h44440000FF0F0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[21]_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(\s_level_out_bus_d3_reg[15]_0 [5]));
  LUT5 #(
    .INIT(32'hAAA2AAAA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_5_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [5]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_5 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[5]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[5]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [5]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [6]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[22] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [6]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[6]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[6]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [6]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h44440000FF0F0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[23]_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(\s_level_out_bus_d3_reg[15]_0 [7]));
  LUT5 #(
    .INIT(32'hAAA2AAAA)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_5_n_0 ),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [7]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_5 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[7]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[7]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [7]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF5D0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [8]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24] ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[24]_0 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [8]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[8]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[8]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [8]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [9]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[25] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [9]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[9]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[9]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [9]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [10]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[26] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [10]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[10]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[10]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [10]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [11]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[27] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [11]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[11]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[11]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [11]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [12]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[28] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [12]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[12]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[12]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [12]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [13]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[29] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [13]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[13]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[13]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [13]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h7500FFFF75007500)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [14]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[30] ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [14]));
  LUT6 #(
    .INIT(64'hAABFAFBFFABFFFBF)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2 
       (.I0(Q[2]),
        .I1(s_level_out_bus_d3[14]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(D[14]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [14]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBA00FFFFBA00BA00)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17] ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_0 [15]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31]_1 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[17]_2 ),
        .O(\s_level_out_bus_d3_reg[15]_0 [15]));
  LUT6 #(
    .INIT(64'h00000000F8C83808)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4 
       (.I0(s_level_out_bus_d3[15]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(D[15]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[31] [15]),
        .I5(Q[2]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_26
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_27
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized2_28
   (D,
    SR,
    s_axi_aclk);
  output [15:0]D;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [15:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign D[15:0] = s_level_out_bus_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized3
   (SR,
    s_axi_aclk);
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized3_29
   (SR,
    dl_status_reg,
    s_axi_aclk);
  input [0:0]SR;
  input [1:0]dl_status_reg;
  input s_axi_aclk;

  wire [0:0]SR;
  wire [1:0]dl_status_reg;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [7:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(dl_status_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4
   (\s_level_out_bus_d3_reg[8]_0 ,
    system_rst,
    Q,
    core_clk);
  output [8:0]\s_level_out_bus_d3_reg[8]_0 ;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  wire [8:0]\s_level_out_bus_d3_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(\s_level_out_bus_d3_reg[8]_0 [8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(\s_level_out_bus_d3_reg[8]_0 [7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(\s_level_out_bus_d3_reg[8]_0 [6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(\s_level_out_bus_d3_reg[8]_0 [5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(\s_level_out_bus_d3_reg[8]_0 [4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(\s_level_out_bus_d3_reg[8]_0 [3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(\s_level_out_bus_d3_reg[8]_0 [2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(\s_level_out_bus_d3_reg[8]_0 [1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln1_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(\s_level_out_bus_d3_reg[8]_0 [0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_31
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln2_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_32
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln3_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_33
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln4_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_34
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln5_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_35
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln6_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_36
   (in0,
    system_rst,
    Q,
    core_clk);
  output [8:0]in0;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]Q;
  wire core_clk;
  wire [8:0]in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(in0[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(in0[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(in0[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(in0[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(in0[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(in0[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(in0[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(in0[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_ln7_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(in0[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_37
   (D,
    system_rst,
    Q,
    core_clk);
  output [8:0]D;
  input system_rst;
  input [8:0]Q;
  input core_clk;

  wire [8:0]D;
  wire [8:0]Q;
  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst
       (.I0(s_level_out_bus_d3[8]),
        .O(D[8]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__0
       (.I0(s_level_out_bus_d3[7]),
        .O(D[7]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__1
       (.I0(s_level_out_bus_d3[6]),
        .O(D[6]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__2
       (.I0(s_level_out_bus_d3[5]),
        .O(D[5]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__3
       (.I0(s_level_out_bus_d3[4]),
        .O(D[4]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__4
       (.I0(s_level_out_bus_d3[3]),
        .O(D[3]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__5
       (.I0(s_level_out_bus_d3[2]),
        .O(D[2]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__6
       (.I0(s_level_out_bus_d3[1]),
        .O(D[1]));
  LUT1 #(
    .INIT(2'h2)) 
    hs_settle_reg_w_inst__7
       (.I0(s_level_out_bus_d3[0]),
        .O(D[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_39
   (D,
    Q,
    rd_req,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_4 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_5 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_0 ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[8]_0 ,
    s_axi_aclk);
  output [1:0]D;
  input [4:0]Q;
  input rd_req;
  input [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_2 ;
  input [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_4 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_5 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_0 ;
  input [0:0]SR;
  input [2:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  input s_axi_aclk;

  wire [1:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]_0 ;
  wire [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_2 ;
  wire [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_4 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_5 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  wire [2:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hFFAE00AE00000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] [0]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] ),
        .I3(Q[4]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4]_0 ),
        .I5(rd_req),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h000000000000E200)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 [0]),
        .I1(Q[2]),
        .I2(s_level_out_bus_d3[0]),
        .I3(Q[1]),
        .I4(Q[3]),
        .I5(Q[0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFE0E0000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ),
        .I2(Q[4]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_n_0 ),
        .I4(rd_req),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h44F444F4FFFF44F4)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[4] ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6] [1]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_3 [1]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_4 ),
        .I4(s_level_out_bus_d3[8]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_5 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3 
       (.I0(s_level_out_bus_d3[7]),
        .I1(Q[0]),
        .I2(s_level_out_bus_d3[6]),
        .I3(Q[1]),
        .I4(s_level_out_bus_d3[5]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0C550C55FF550C55)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_1 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_6_n_0 ),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(s_level_out_bus_d3[1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[6]_2 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_6 
       (.I0(s_level_out_bus_d3[2]),
        .I1(s_level_out_bus_d3[3]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[4]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_4_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[6]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized4_40
   (D,
    Q,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] ,
    rd_req,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_3 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_4 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_5 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_6 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_7 ,
    SR,
    \s_level_out_bus_d1_cdc_to_reg[8]_0 ,
    s_axi_aclk);
  output [0:0]D;
  input [4:0]Q;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] ;
  input rd_req;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_0 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_2 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_3 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_4 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_5 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_6 ;
  input [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_7 ;
  input [0:0]SR;
  input [2:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  input s_axi_aclk;

  wire [0:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_0 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_2 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_3 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_4 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_5 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_6 ;
  wire [0:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_7 ;
  wire rd_req;
  wire s_axi_aclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d1_cdc_to;
  wire [2:0]\s_level_out_bus_d1_cdc_to_reg[8]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [8:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'hFFC0000055550000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_5_n_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(D));
  LUT6 #(
    .INIT(64'h000000008A008A8A)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_6_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_1 ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_2 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_3 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_7_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3 
       (.I0(s_level_out_bus_d3[2]),
        .I1(s_level_out_bus_d3[3]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[4]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_7 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F8F8FFF0F8F8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_5 
       (.I0(Q[2]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_4 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_5 ),
        .I3(s_level_out_bus_d3[1]),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2]_6 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hF5F557F7FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_6 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[2] ),
        .I1(s_level_out_bus_d3[7]),
        .I2(Q[0]),
        .I3(s_level_out_bus_d3[6]),
        .I4(Q[1]),
        .I5(s_level_out_bus_d3[5]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h5040000000400000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_7 
       (.I0(Q[3]),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(s_level_out_bus_d3[8]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[2]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[8]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized5
   (D,
    SR,
    Q,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] ,
    rd_req,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_0 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_1 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_3 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_2 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_3 ,
    \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 ,
    s_axi_aresetn,
    \s_level_out_bus_d1_cdc_to_reg[17]_0 ,
    s_axi_aclk);
  output [1:0]D;
  output [0:0]SR;
  input [4:0]Q;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] ;
  input rd_req;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 ;
  input [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_0 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_1 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_2 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_3 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_2 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_2 ;
  input \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_3 ;
  input [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 ;
  input s_axi_aresetn;
  input [5:0]\s_level_out_bus_d1_cdc_to_reg[17]_0 ;
  input s_axi_aclk;

  wire [1:0]D;
  wire [4:0]Q;
  wire [0:0]SR;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_5_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_6_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_9_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_11_n_0 ;
  wire [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_2 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_3 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_7_n_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_2 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_0 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_1 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_2 ;
  wire \gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_3 ;
  wire [1:0]\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 ;
  wire rd_req;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d1_cdc_to;
  wire [5:0]\s_level_out_bus_d1_cdc_to_reg[17]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [17:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT6 #(
    .INIT(64'h020202A2A2A202A2)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_1 
       (.I0(rd_req),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ),
        .I2(Q[4]),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0] ),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'h0000000000005155)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_5_n_0 ),
        .I1(Q[3]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 [0]),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_6_n_0 ),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_1 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hF0F35555FFF35555)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_9_n_0 ),
        .I1(s_level_out_bus_d3[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_2 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h33E200E200000000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_5 
       (.I0(s_level_out_bus_d3[14]),
        .I1(Q[0]),
        .I2(s_level_out_bus_d3[12]),
        .I3(Q[1]),
        .I4(s_level_out_bus_d3[10]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h5040000000400000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_6 
       (.I0(Q[3]),
        .I1(s_level_out_bus_d3[0]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(s_level_out_bus_d3[16]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_9 
       (.I0(s_level_out_bus_d3[4]),
        .I1(s_level_out_bus_d3[6]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[8]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 [0]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFC0000055550000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_1 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1] ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ),
        .I4(rd_req),
        .I5(Q[4]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'h0040440000400000)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_11 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(s_level_out_bus_d3[13]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(s_level_out_bus_d3[11]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFF57F7)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2 
       (.I0(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_0 ),
        .I1(s_level_out_bus_d3[17]),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_1 ),
        .I3(s_level_out_bus_d3[1]),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_7_n_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3 
       (.I0(s_level_out_bus_d3[5]),
        .I1(s_level_out_bus_d3[7]),
        .I2(Q[1]),
        .I3(s_level_out_bus_d3[9]),
        .I4(Q[0]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_4 [1]),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF0F0F8F8FFF0F8F8)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4 
       (.I0(Q[2]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_2 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[1]_3 ),
        .I3(s_level_out_bus_d3[3]),
        .I4(Q[3]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata_reg[0]_0 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFF2FFF2FFFFFFF2)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_7 
       (.I0(s_level_out_bus_d3[15]),
        .I1(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_1 ),
        .I2(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_2 ),
        .I3(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_11_n_0 ),
        .I4(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_0 [1]),
        .I5(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_2_3 ),
        .O(\gen_regs_wo_debug_wo_timeout.axi_rdata[1]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_regs_wo_debug_wo_timeout.axi_rdata[31]_i_3 
       (.I0(s_axi_aresetn),
        .O(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [2]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [3]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [4]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [5]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[17]_0 [1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized6
   (out,
    \s_level_out_bus_d3_reg[1]_0 ,
    core_rst,
    data0,
    core_clk,
    p_12_in);
  output [1:0]out;
  output \s_level_out_bus_d3_reg[1]_0 ;
  input core_rst;
  input [0:0]data0;
  input core_clk;
  input [0:0]p_12_in;

  wire core_clk;
  wire core_rst;
  wire [0:0]data0;
  wire [0:0]p_12_in;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  wire \s_level_out_bus_d3_reg[1]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out[1:0] = s_level_out_bus_d3;
  LUT2 #(
    .INIT(4'hD)) 
    \cl_rx_state[3]_i_1 
       (.I0(s_level_out_bus_d3[1]),
        .I1(core_rst),
        .O(\s_level_out_bus_d3_reg[1]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(p_12_in),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(data0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized7
   (system_rst,
    core_clk,
    \s_level_out_bus_d1_cdc_to_reg[48]_0 ,
    \s_level_out_bus_d1_cdc_to_reg[16]_0 );
  input system_rst;
  input core_clk;
  input \s_level_out_bus_d1_cdc_to_reg[48]_0 ;
  input \s_level_out_bus_d1_cdc_to_reg[16]_0 ;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d1_cdc_to;
  wire \s_level_out_bus_d1_cdc_to_reg[16]_0 ;
  wire \s_level_out_bus_d1_cdc_to_reg[48]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [63:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[16]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[16]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[16]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[48]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[48]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[48]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[48]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(\s_level_out_bus_d1_cdc_to_reg[16]_0 ),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[32]),
        .Q(s_level_out_bus_d2[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[33]),
        .Q(s_level_out_bus_d2[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[34]),
        .Q(s_level_out_bus_d2[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[35]),
        .Q(s_level_out_bus_d2[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[36]),
        .Q(s_level_out_bus_d2[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[37]),
        .Q(s_level_out_bus_d2[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[38]),
        .Q(s_level_out_bus_d2[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[39]),
        .Q(s_level_out_bus_d2[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[40]),
        .Q(s_level_out_bus_d2[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[41]),
        .Q(s_level_out_bus_d2[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[42]),
        .Q(s_level_out_bus_d2[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[43]),
        .Q(s_level_out_bus_d2[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[44]),
        .Q(s_level_out_bus_d2[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[45]),
        .Q(s_level_out_bus_d2[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[46]),
        .Q(s_level_out_bus_d2[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[47]),
        .Q(s_level_out_bus_d2[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[48]),
        .Q(s_level_out_bus_d2[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[49]),
        .Q(s_level_out_bus_d2[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[50]),
        .Q(s_level_out_bus_d2[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[51]),
        .Q(s_level_out_bus_d2[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[52]),
        .Q(s_level_out_bus_d2[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[53]),
        .Q(s_level_out_bus_d2[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[54]),
        .Q(s_level_out_bus_d2[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[55]),
        .Q(s_level_out_bus_d2[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[56]),
        .Q(s_level_out_bus_d2[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[57]),
        .Q(s_level_out_bus_d2[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[58]),
        .Q(s_level_out_bus_d2[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[59]),
        .Q(s_level_out_bus_d2[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[60]),
        .Q(s_level_out_bus_d2[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[61]),
        .Q(s_level_out_bus_d2[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[62]),
        .Q(s_level_out_bus_d2[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[63]),
        .Q(s_level_out_bus_d2[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[32]),
        .Q(s_level_out_bus_d3[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[33]),
        .Q(s_level_out_bus_d3[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[34]),
        .Q(s_level_out_bus_d3[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[35]),
        .Q(s_level_out_bus_d3[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[36]),
        .Q(s_level_out_bus_d3[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[37]),
        .Q(s_level_out_bus_d3[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[38]),
        .Q(s_level_out_bus_d3[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[39]),
        .Q(s_level_out_bus_d3[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[40]),
        .Q(s_level_out_bus_d3[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[41]),
        .Q(s_level_out_bus_d3[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[42]),
        .Q(s_level_out_bus_d3[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[43]),
        .Q(s_level_out_bus_d3[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[44]),
        .Q(s_level_out_bus_d3[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[45]),
        .Q(s_level_out_bus_d3[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[46]),
        .Q(s_level_out_bus_d3[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[47]),
        .Q(s_level_out_bus_d3[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[48]),
        .Q(s_level_out_bus_d3[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[49]),
        .Q(s_level_out_bus_d3[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[50]),
        .Q(s_level_out_bus_d3[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[51]),
        .Q(s_level_out_bus_d3[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[52]),
        .Q(s_level_out_bus_d3[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[53]),
        .Q(s_level_out_bus_d3[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[54]),
        .Q(s_level_out_bus_d3[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[55]),
        .Q(s_level_out_bus_d3[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[56]),
        .Q(s_level_out_bus_d3[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[57]),
        .Q(s_level_out_bus_d3[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[58]),
        .Q(s_level_out_bus_d3[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[59]),
        .Q(s_level_out_bus_d3[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[60]),
        .Q(s_level_out_bus_d3[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[61]),
        .Q(s_level_out_bus_d3[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[62]),
        .Q(s_level_out_bus_d3[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[63]),
        .Q(s_level_out_bus_d3[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[32]),
        .Q(s_level_out_bus_d4[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[33]),
        .Q(s_level_out_bus_d4[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[34]),
        .Q(s_level_out_bus_d4[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[35]),
        .Q(s_level_out_bus_d4[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[36]),
        .Q(s_level_out_bus_d4[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[37]),
        .Q(s_level_out_bus_d4[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[38]),
        .Q(s_level_out_bus_d4[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[39]),
        .Q(s_level_out_bus_d4[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[40]),
        .Q(s_level_out_bus_d4[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[41]),
        .Q(s_level_out_bus_d4[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[42]),
        .Q(s_level_out_bus_d4[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[43]),
        .Q(s_level_out_bus_d4[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[44]),
        .Q(s_level_out_bus_d4[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[45]),
        .Q(s_level_out_bus_d4[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[46]),
        .Q(s_level_out_bus_d4[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[47]),
        .Q(s_level_out_bus_d4[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[48]),
        .Q(s_level_out_bus_d4[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[49]),
        .Q(s_level_out_bus_d4[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[50]),
        .Q(s_level_out_bus_d4[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[51]),
        .Q(s_level_out_bus_d4[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[52]),
        .Q(s_level_out_bus_d4[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[53]),
        .Q(s_level_out_bus_d4[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[54]),
        .Q(s_level_out_bus_d4[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[55]),
        .Q(s_level_out_bus_d4[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[56]),
        .Q(s_level_out_bus_d4[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[57]),
        .Q(s_level_out_bus_d4[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[58]),
        .Q(s_level_out_bus_d4[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[59]),
        .Q(s_level_out_bus_d4[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[60]),
        .Q(s_level_out_bus_d4[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[61]),
        .Q(s_level_out_bus_d4[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[62]),
        .Q(s_level_out_bus_d4[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[63]),
        .Q(s_level_out_bus_d4[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[32]),
        .Q(s_level_out_bus_d5[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[33]),
        .Q(s_level_out_bus_d5[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[34]),
        .Q(s_level_out_bus_d5[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[35]),
        .Q(s_level_out_bus_d5[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[36]),
        .Q(s_level_out_bus_d5[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[37]),
        .Q(s_level_out_bus_d5[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[38]),
        .Q(s_level_out_bus_d5[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[39]),
        .Q(s_level_out_bus_d5[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[40]),
        .Q(s_level_out_bus_d5[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[41]),
        .Q(s_level_out_bus_d5[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[42]),
        .Q(s_level_out_bus_d5[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[43]),
        .Q(s_level_out_bus_d5[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[44]),
        .Q(s_level_out_bus_d5[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[45]),
        .Q(s_level_out_bus_d5[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[46]),
        .Q(s_level_out_bus_d5[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[47]),
        .Q(s_level_out_bus_d5[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[48]),
        .Q(s_level_out_bus_d5[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[49]),
        .Q(s_level_out_bus_d5[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[50]),
        .Q(s_level_out_bus_d5[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[51]),
        .Q(s_level_out_bus_d5[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[52]),
        .Q(s_level_out_bus_d5[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[53]),
        .Q(s_level_out_bus_d5[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[54]),
        .Q(s_level_out_bus_d5[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[55]),
        .Q(s_level_out_bus_d5[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[56]),
        .Q(s_level_out_bus_d5[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[57]),
        .Q(s_level_out_bus_d5[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[58]),
        .Q(s_level_out_bus_d5[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[59]),
        .Q(s_level_out_bus_d5[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[60]),
        .Q(s_level_out_bus_d5[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[61]),
        .Q(s_level_out_bus_d5[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[62]),
        .Q(s_level_out_bus_d5[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[63]),
        .Q(s_level_out_bus_d5[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[32] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[32]),
        .Q(s_level_out_bus_d6[32]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[33] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[33]),
        .Q(s_level_out_bus_d6[33]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[34] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[34]),
        .Q(s_level_out_bus_d6[34]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[35] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[35]),
        .Q(s_level_out_bus_d6[35]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[36] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[36]),
        .Q(s_level_out_bus_d6[36]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[37] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[37]),
        .Q(s_level_out_bus_d6[37]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[38] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[38]),
        .Q(s_level_out_bus_d6[38]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[39] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[39]),
        .Q(s_level_out_bus_d6[39]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[40] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[40]),
        .Q(s_level_out_bus_d6[40]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[41] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[41]),
        .Q(s_level_out_bus_d6[41]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[42] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[42]),
        .Q(s_level_out_bus_d6[42]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[43] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[43]),
        .Q(s_level_out_bus_d6[43]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[44] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[44]),
        .Q(s_level_out_bus_d6[44]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[45] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[45]),
        .Q(s_level_out_bus_d6[45]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[46] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[46]),
        .Q(s_level_out_bus_d6[46]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[47] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[47]),
        .Q(s_level_out_bus_d6[47]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[48] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[48]),
        .Q(s_level_out_bus_d6[48]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[49] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[49]),
        .Q(s_level_out_bus_d6[49]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[50] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[50]),
        .Q(s_level_out_bus_d6[50]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[51] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[51]),
        .Q(s_level_out_bus_d6[51]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[52] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[52]),
        .Q(s_level_out_bus_d6[52]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[53] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[53]),
        .Q(s_level_out_bus_d6[53]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[54] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[54]),
        .Q(s_level_out_bus_d6[54]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[55] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[55]),
        .Q(s_level_out_bus_d6[55]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[56] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[56]),
        .Q(s_level_out_bus_d6[56]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[57] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[57]),
        .Q(s_level_out_bus_d6[57]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[58] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[58]),
        .Q(s_level_out_bus_d6[58]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[59] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[59]),
        .Q(s_level_out_bus_d6[59]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[60] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[60]),
        .Q(s_level_out_bus_d6[60]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[61] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[61]),
        .Q(s_level_out_bus_d6[61]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[62] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[62]),
        .Q(s_level_out_bus_d6[62]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[63] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[63]),
        .Q(s_level_out_bus_d6[63]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8
   (system_rst,
    core_clk);
  input system_rst;
  input core_clk;

  wire core_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire system_rst;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(system_rst));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(system_rst));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8_30
   (rx_div4_clk);
  input rx_div4_clk;

  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized8_38
   (\s_level_out_bus_d3_reg[21]_0 ,
    Q,
    core_clk);
  output [13:0]\s_level_out_bus_d3_reg[21]_0 ;
  input [31:0]Q;
  input core_clk;

  wire [31:0]Q;
  wire core_clk;
  wire [31:0]init_value_w;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  wire [13:0]\s_level_out_bus_d3_reg[21]_0 ;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst
       (.I0(s_level_out_bus_d3[31]),
        .O(init_value_w[31]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__0
       (.I0(s_level_out_bus_d3[30]),
        .O(init_value_w[30]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__1
       (.I0(s_level_out_bus_d3[29]),
        .O(init_value_w[29]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__10
       (.I0(s_level_out_bus_d3[20]),
        .O(\s_level_out_bus_d3_reg[21]_0 [12]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__11
       (.I0(s_level_out_bus_d3[19]),
        .O(\s_level_out_bus_d3_reg[21]_0 [11]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__12
       (.I0(s_level_out_bus_d3[18]),
        .O(\s_level_out_bus_d3_reg[21]_0 [10]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__13
       (.I0(s_level_out_bus_d3[17]),
        .O(\s_level_out_bus_d3_reg[21]_0 [9]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__14
       (.I0(s_level_out_bus_d3[16]),
        .O(\s_level_out_bus_d3_reg[21]_0 [8]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__15
       (.I0(s_level_out_bus_d3[15]),
        .O(\s_level_out_bus_d3_reg[21]_0 [7]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__16
       (.I0(s_level_out_bus_d3[14]),
        .O(\s_level_out_bus_d3_reg[21]_0 [6]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__17
       (.I0(s_level_out_bus_d3[13]),
        .O(\s_level_out_bus_d3_reg[21]_0 [5]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__18
       (.I0(s_level_out_bus_d3[12]),
        .O(\s_level_out_bus_d3_reg[21]_0 [4]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__19
       (.I0(s_level_out_bus_d3[11]),
        .O(\s_level_out_bus_d3_reg[21]_0 [3]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__2
       (.I0(s_level_out_bus_d3[28]),
        .O(init_value_w[28]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__20
       (.I0(s_level_out_bus_d3[10]),
        .O(\s_level_out_bus_d3_reg[21]_0 [2]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__21
       (.I0(s_level_out_bus_d3[9]),
        .O(\s_level_out_bus_d3_reg[21]_0 [1]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__22
       (.I0(s_level_out_bus_d3[8]),
        .O(\s_level_out_bus_d3_reg[21]_0 [0]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__23
       (.I0(s_level_out_bus_d3[7]),
        .O(init_value_w[7]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__24
       (.I0(s_level_out_bus_d3[6]),
        .O(init_value_w[6]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__25
       (.I0(s_level_out_bus_d3[5]),
        .O(init_value_w[5]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__26
       (.I0(s_level_out_bus_d3[4]),
        .O(init_value_w[4]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__27
       (.I0(s_level_out_bus_d3[3]),
        .O(init_value_w[3]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__28
       (.I0(s_level_out_bus_d3[2]),
        .O(init_value_w[2]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__29
       (.I0(s_level_out_bus_d3[1]),
        .O(init_value_w[1]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__3
       (.I0(s_level_out_bus_d3[27]),
        .O(init_value_w[27]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__30
       (.I0(s_level_out_bus_d3[0]),
        .O(init_value_w[0]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__4
       (.I0(s_level_out_bus_d3[26]),
        .O(init_value_w[26]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__5
       (.I0(s_level_out_bus_d3[25]),
        .O(init_value_w[25]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__6
       (.I0(s_level_out_bus_d3[24]),
        .O(init_value_w[24]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__7
       (.I0(s_level_out_bus_d3[23]),
        .O(init_value_w[23]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__8
       (.I0(s_level_out_bus_d3[22]),
        .O(init_value_w[22]));
  LUT1 #(
    .INIT(2'h2)) 
    init_value_w_inst__9
       (.I0(s_level_out_bus_d3[21]),
        .O(\s_level_out_bus_d3_reg[21]_0 [13]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[10]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[11]),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[12]),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[13]),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[14]),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[15]),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[16]),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[17]),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[18]),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[19]),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[20]),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[21]),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[22]),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[23]),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[24]),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[25]),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[26]),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[27]),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[28]),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[29]),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[30]),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[31]),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[7]),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[8]),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(Q[9]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d2_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d3_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d4_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d5_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[0] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[10] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[11] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[12] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[13] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[14] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[15] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[16] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[17] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[18] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[19] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[1] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[20] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[21] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[22] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[23] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[24] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[25] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[26] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[27] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[28] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[29] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[2] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[30] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[31] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[3] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[4] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[5] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[6] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[7] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[8] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \s_level_out_bus_d6_reg[9] 
       (.C(core_clk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "mipi_dphy_v4_1_3_rx_sync_cell" *) 
module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_rx_sync_cell__parameterized9
   (s_level_out_d3_reg_0,
    out,
    rx_div4_clk);
  output s_level_out_d3_reg_0;
  input out;
  input rx_div4_clk;

  wire p_level_in_int;
  wire rx_div4_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign s_level_out_d3_reg_0 = s_level_out_d3;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d1_cdc_to_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d2_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d3_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d4_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d5_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    s_level_out_d6_reg
       (.C(rx_div4_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

module decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_serdes_idelay_ddr
   (CLK,
    rst_iserdes_reg_0,
    data_in_to_device,
    clk_hs_rxp,
    clk_hs_rxn,
    CLKB0,
    data_hs_rxp,
    data_hs_rxn,
    AR);
  output CLK;
  output rst_iserdes_reg_0;
  output [15:0]data_in_to_device;
  input clk_hs_rxp;
  input clk_hs_rxn;
  input CLKB0;
  input [1:0]data_hs_rxp;
  input [1:0]data_hs_rxn;
  input [0:0]AR;

  wire [0:0]AR;
  wire CLK;
  wire CLKB0;
  wire \__0/i__n_0 ;
  wire \c_sweep_delay[4]_i_2_n_0 ;
  wire \c_sweep_delay_reg_n_0_[0] ;
  wire \c_sweep_delay_reg_n_0_[1] ;
  wire \c_sweep_delay_reg_n_0_[2] ;
  wire \c_sweep_delay_reg_n_0_[3] ;
  wire \c_sweep_delay_reg_n_0_[4] ;
  wire clear;
  wire clk_hs_rxn;
  wire clk_hs_rxp;
  wire \clk_iserdes_data_d[3]_i_1_n_0 ;
  wire \clk_iserdes_data_d_reg_n_0_[0] ;
  wire \clk_iserdes_data_d_reg_n_0_[1] ;
  wire \clk_iserdes_data_d_reg_n_0_[2] ;
  wire \clk_iserdes_data_d_reg_n_0_[3] ;
  wire data_different;
  wire data_different2_out;
  wire data_different_i_1_n_0;
  wire data_different_i_2_n_0;
  wire data_different_i_3_n_0;
  wire data_different_i_4_n_0;
  wire [1:0]data_hs_rxn;
  wire [1:0]data_hs_rxp;
  wire [15:0]data_in_to_device;
  wire \initial_delay[4]_i_2_n_0 ;
  wire \initial_delay[4]_i_4_n_0 ;
  wire \initial_delay[4]_i_5_n_0 ;
  wire [4:0]initial_delay__0;
  wire \initial_delay_reg_n_0_[0] ;
  wire \initial_delay_reg_n_0_[1] ;
  wire \initial_delay_reg_n_0_[2] ;
  wire \initial_delay_reg_n_0_[3] ;
  wire \initial_delay_reg_n_0_[4] ;
  wire iserdes_cm_n_1;
  wire iserdes_cm_n_2;
  wire iserdes_cm_n_3;
  wire iserdes_cm_n_4;
  wire \loop0[0].idelay_m_n_1 ;
  wire \loop0[0].idelay_m_n_2 ;
  wire \loop0[0].idelay_m_n_3 ;
  wire \loop0[0].idelay_m_n_4 ;
  wire \loop0[0].idelay_m_n_5 ;
  wire \loop0[0].idelay_s_n_1 ;
  wire \loop0[0].idelay_s_n_2 ;
  wire \loop0[0].idelay_s_n_3 ;
  wire \loop0[0].idelay_s_n_4 ;
  wire \loop0[0].idelay_s_n_5 ;
  wire \loop0[1].idelay_m_n_1 ;
  wire \loop0[1].idelay_m_n_2 ;
  wire \loop0[1].idelay_m_n_3 ;
  wire \loop0[1].idelay_m_n_4 ;
  wire \loop0[1].idelay_m_n_5 ;
  wire \loop0[1].idelay_s_n_1 ;
  wire \loop0[1].idelay_s_n_2 ;
  wire \loop0[1].idelay_s_n_3 ;
  wire \loop0[1].idelay_s_n_4 ;
  wire \loop0[1].idelay_s_n_5 ;
  wire \loop0[1].iserdes_s_n_3 ;
  wire \loop0[1].iserdes_s_n_4 ;
  wire \loop0[1].iserdes_s_n_8 ;
  wire [5:1]m_count;
  wire \m_count[0]_i_1_n_0 ;
  wire \m_count_reg_n_0_[0] ;
  wire \m_count_reg_n_0_[1] ;
  wire \m_count_reg_n_0_[2] ;
  wire \m_count_reg_n_0_[3] ;
  wire \m_count_reg_n_0_[4] ;
  wire \m_count_reg_n_0_[5] ;
  wire not_rx_lckd_intd4;
  wire not_rx_lckd_intd4_i_1_n_0;
  wire [4:0]p_0_in;
  wire [4:1]p_0_in__0;
  wire p_10_out;
  wire p_11_out;
  wire p_12_in;
  wire p_13_out;
  wire p_14_out;
  wire p_15_out;
  wire p_16_out;
  wire p_17_out;
  wire p_18_out;
  wire p_19_out;
  wire p_20_out;
  wire p_22_out;
  wire p_23_out;
  wire p_24_out;
  wire p_25_out;
  wire p_26_out;
  wire p_27_out;
  wire p_28_out;
  wire p_29_out;
  wire p_31_out;
  wire p_32_out;
  wire p_33_out;
  wire p_34_out;
  wire p_35_out;
  wire p_36_out;
  wire p_37_out;
  wire p_38_out;
  wire [4:0]p_3_out;
  wire [4:0]p_4_out;
  wire p_5_out;
  wire p_6_out;
  wire p_7_out;
  wire [4:0]p_8_out;
  wire [4:0]p_9_out;
  wire rst_iserdes__0;
  wire rst_iserdes_i_1_n_0;
  wire rst_iserdes_n_0;
  wire rst_iserdes_reg_0;
  wire rx_clk_in_p;
  wire rx_clk_in_pc;
  wire rx_clk_in_pd;
  wire rx_data_in_md_0;
  wire rx_data_in_md_1;
  wire rx_data_in_n_0;
  wire rx_data_in_n_1;
  wire rx_data_in_p_0;
  wire rx_data_in_p_1;
  wire rx_data_in_sd_0;
  wire rx_data_in_sd_1;
  wire rx_lckd_intd4__0;
  wire rx_lckd_intd4_i_1_n_0;
  wire \state2_count[2]_i_1_n_0 ;
  wire [4:0]state2_count_reg;
  wire su_locked;
  wire su_locked_i_1_n_0;
  wire su_locked_i_2_n_0;
  wire temp_shift;
  wire zflag;
  wire zflag_i_1_n_0;
  wire zflag_i_2_n_0;
  wire zflag_i_3_n_0;
  wire [4:0]NLW_idelay_cm_CNTVALUEOUT_UNCONNECTED;
  wire NLW_iserdes_cm_OFB_UNCONNECTED;
  wire NLW_iserdes_cm_Q5_UNCONNECTED;
  wire NLW_iserdes_cm_Q6_UNCONNECTED;
  wire NLW_iserdes_cm_Q7_UNCONNECTED;
  wire NLW_iserdes_cm_Q8_UNCONNECTED;
  wire NLW_iserdes_cm_SHIFTOUT1_UNCONNECTED;
  wire NLW_iserdes_cm_SHIFTOUT2_UNCONNECTED;
  wire \NLW_loop0[0].iserdes_m_O_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_m_OFB_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_m_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_m_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_s_O_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_s_OFB_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_s_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_loop0[0].iserdes_s_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_m_O_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_m_OFB_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_m_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_m_SHIFTOUT2_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_s_O_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_s_OFB_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_s_SHIFTOUT1_UNCONNECTED ;
  wire \NLW_loop0[1].iserdes_s_SHIFTOUT2_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \__0/i_ 
       (.I0(\m_count_reg_n_0_[3] ),
        .I1(\m_count_reg_n_0_[2] ),
        .I2(\m_count_reg_n_0_[5] ),
        .I3(\m_count_reg_n_0_[4] ),
        .I4(\m_count_reg_n_0_[1] ),
        .I5(\m_count_reg_n_0_[0] ),
        .O(\__0/i__n_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFIO bufio_mmcm_xn
       (.I(rx_clk_in_pc),
        .O(rst_iserdes_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \c_sweep_delay[1]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[0] ),
        .I1(\c_sweep_delay_reg_n_0_[1] ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \c_sweep_delay[2]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[0] ),
        .I1(\c_sweep_delay_reg_n_0_[1] ),
        .I2(\c_sweep_delay_reg_n_0_[2] ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \c_sweep_delay[3]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[1] ),
        .I1(\c_sweep_delay_reg_n_0_[0] ),
        .I2(\c_sweep_delay_reg_n_0_[2] ),
        .I3(\c_sweep_delay_reg_n_0_[3] ),
        .O(p_0_in__0[3]));
  LUT2 #(
    .INIT(4'hB)) 
    \c_sweep_delay[4]_i_1 
       (.I0(zflag_i_2_n_0),
        .I1(su_locked),
        .O(temp_shift));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    \c_sweep_delay[4]_i_2 
       (.I0(state2_count_reg[4]),
        .I1(zflag),
        .I2(state2_count_reg[1]),
        .I3(state2_count_reg[0]),
        .I4(state2_count_reg[3]),
        .I5(state2_count_reg[2]),
        .O(\c_sweep_delay[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \c_sweep_delay[4]_i_3 
       (.I0(\c_sweep_delay_reg_n_0_[2] ),
        .I1(\c_sweep_delay_reg_n_0_[0] ),
        .I2(\c_sweep_delay_reg_n_0_[1] ),
        .I3(\c_sweep_delay_reg_n_0_[3] ),
        .I4(\c_sweep_delay_reg_n_0_[4] ),
        .O(p_0_in__0[4]));
  FDRE \c_sweep_delay_reg[0] 
       (.C(CLK),
        .CE(\c_sweep_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[0]),
        .Q(\c_sweep_delay_reg_n_0_[0] ),
        .R(temp_shift));
  FDRE \c_sweep_delay_reg[1] 
       (.C(CLK),
        .CE(\c_sweep_delay[4]_i_2_n_0 ),
        .D(p_0_in__0[1]),
        .Q(\c_sweep_delay_reg_n_0_[1] ),
        .R(temp_shift));
  FDRE \c_sweep_delay_reg[2] 
       (.C(CLK),
        .CE(\c_sweep_delay[4]_i_2_n_0 ),
        .D(p_0_in__0[2]),
        .Q(\c_sweep_delay_reg_n_0_[2] ),
        .R(temp_shift));
  FDRE \c_sweep_delay_reg[3] 
       (.C(CLK),
        .CE(\c_sweep_delay[4]_i_2_n_0 ),
        .D(p_0_in__0[3]),
        .Q(\c_sweep_delay_reg_n_0_[3] ),
        .R(temp_shift));
  FDRE \c_sweep_delay_reg[4] 
       (.C(CLK),
        .CE(\c_sweep_delay[4]_i_2_n_0 ),
        .D(p_0_in__0[4]),
        .Q(\c_sweep_delay_reg_n_0_[4] ),
        .R(temp_shift));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \clk_iserdes_data_d[3]_i_1 
       (.I0(su_locked),
        .I1(state2_count_reg[2]),
        .I2(state2_count_reg[4]),
        .I3(state2_count_reg[0]),
        .I4(state2_count_reg[1]),
        .I5(state2_count_reg[3]),
        .O(\clk_iserdes_data_d[3]_i_1_n_0 ));
  FDRE \clk_iserdes_data_d_reg[0] 
       (.C(CLK),
        .CE(\clk_iserdes_data_d[3]_i_1_n_0 ),
        .D(iserdes_cm_n_4),
        .Q(\clk_iserdes_data_d_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \clk_iserdes_data_d_reg[1] 
       (.C(CLK),
        .CE(\clk_iserdes_data_d[3]_i_1_n_0 ),
        .D(iserdes_cm_n_3),
        .Q(\clk_iserdes_data_d_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \clk_iserdes_data_d_reg[2] 
       (.C(CLK),
        .CE(\clk_iserdes_data_d[3]_i_1_n_0 ),
        .D(iserdes_cm_n_2),
        .Q(\clk_iserdes_data_d_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \clk_iserdes_data_d_reg[3] 
       (.C(CLK),
        .CE(\clk_iserdes_data_d[3]_i_1_n_0 ),
        .D(iserdes_cm_n_1),
        .Q(\clk_iserdes_data_d_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h00000000EAEAEAAA)) 
    data_different_i_1
       (.I0(data_different),
        .I1(su_locked),
        .I2(data_different_i_2_n_0),
        .I3(data_different_i_3_n_0),
        .I4(data_different_i_4_n_0),
        .I5(data_different2_out),
        .O(data_different_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    data_different_i_2
       (.I0(state2_count_reg[3]),
        .I1(state2_count_reg[1]),
        .I2(state2_count_reg[0]),
        .I3(state2_count_reg[4]),
        .I4(state2_count_reg[2]),
        .O(data_different_i_2_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    data_different_i_3
       (.I0(\clk_iserdes_data_d_reg_n_0_[3] ),
        .I1(iserdes_cm_n_1),
        .O(data_different_i_3_n_0));
  LUT6 #(
    .INIT(64'h6FF6FFFFFFFF6FF6)) 
    data_different_i_4
       (.I0(iserdes_cm_n_4),
        .I1(\clk_iserdes_data_d_reg_n_0_[0] ),
        .I2(\clk_iserdes_data_d_reg_n_0_[2] ),
        .I3(iserdes_cm_n_2),
        .I4(\clk_iserdes_data_d_reg_n_0_[1] ),
        .I5(iserdes_cm_n_3),
        .O(data_different_i_4_n_0));
  LUT6 #(
    .INIT(64'h0000222200002228)) 
    data_different_i_5
       (.I0(su_locked),
        .I1(state2_count_reg[3]),
        .I2(state2_count_reg[1]),
        .I3(state2_count_reg[0]),
        .I4(state2_count_reg[4]),
        .I5(state2_count_reg[2]),
        .O(data_different2_out));
  FDRE data_different_reg
       (.C(CLK),
        .CE(1'b1),
        .D(data_different_i_1_n_0),
        .Q(data_different),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(1),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    idelay_cm
       (.C(CLK),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN({\c_sweep_delay_reg_n_0_[4] ,\c_sweep_delay_reg_n_0_[3] ,\c_sweep_delay_reg_n_0_[2] ,\c_sweep_delay_reg_n_0_[1] ,\c_sweep_delay_reg_n_0_[0] }),
        .CNTVALUEOUT(NLW_idelay_cm_CNTVALUEOUT_UNCONNECTED[4:0]),
        .DATAIN(1'b0),
        .DATAOUT(rx_clk_in_pd),
        .IDATAIN(rx_clk_in_p),
        .INC(1'b0),
        .LD(1'b1),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \initial_delay[0]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[0] ),
        .O(initial_delay__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'h5A5A4969)) 
    \initial_delay[1]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[1] ),
        .I1(\c_sweep_delay_reg_n_0_[3] ),
        .I2(\c_sweep_delay_reg_n_0_[0] ),
        .I3(\c_sweep_delay_reg_n_0_[2] ),
        .I4(\c_sweep_delay_reg_n_0_[4] ),
        .O(initial_delay__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'h5AAA4AA9)) 
    \initial_delay[2]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[2] ),
        .I1(\c_sweep_delay_reg_n_0_[3] ),
        .I2(\c_sweep_delay_reg_n_0_[0] ),
        .I3(\c_sweep_delay_reg_n_0_[1] ),
        .I4(\c_sweep_delay_reg_n_0_[4] ),
        .O(initial_delay__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT5 #(
    .INIT(32'h95559554)) 
    \initial_delay[3]_i_1 
       (.I0(\c_sweep_delay_reg_n_0_[3] ),
        .I1(\c_sweep_delay_reg_n_0_[0] ),
        .I2(\c_sweep_delay_reg_n_0_[1] ),
        .I3(\c_sweep_delay_reg_n_0_[2] ),
        .I4(\c_sweep_delay_reg_n_0_[4] ),
        .O(initial_delay__0[3]));
  LUT1 #(
    .INIT(2'h1)) 
    \initial_delay[4]_i_1 
       (.I0(su_locked),
        .O(clear));
  LUT4 #(
    .INIT(16'h0020)) 
    \initial_delay[4]_i_2 
       (.I0(\initial_delay[4]_i_4_n_0 ),
        .I1(zflag),
        .I2(state2_count_reg[4]),
        .I3(\initial_delay[4]_i_5_n_0 ),
        .O(\initial_delay[4]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT5 #(
    .INIT(32'hA8888888)) 
    \initial_delay[4]_i_3 
       (.I0(\c_sweep_delay_reg_n_0_[4] ),
        .I1(\c_sweep_delay_reg_n_0_[3] ),
        .I2(\c_sweep_delay_reg_n_0_[0] ),
        .I3(\c_sweep_delay_reg_n_0_[1] ),
        .I4(\c_sweep_delay_reg_n_0_[2] ),
        .O(initial_delay__0[4]));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \initial_delay[4]_i_4 
       (.I0(data_different),
        .I1(\initial_delay_reg_n_0_[2] ),
        .I2(\initial_delay_reg_n_0_[4] ),
        .I3(\initial_delay_reg_n_0_[0] ),
        .I4(\initial_delay_reg_n_0_[1] ),
        .I5(\initial_delay_reg_n_0_[3] ),
        .O(\initial_delay[4]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \initial_delay[4]_i_5 
       (.I0(state2_count_reg[2]),
        .I1(state2_count_reg[3]),
        .I2(state2_count_reg[0]),
        .I3(state2_count_reg[1]),
        .O(\initial_delay[4]_i_5_n_0 ));
  FDRE \initial_delay_reg[0] 
       (.C(CLK),
        .CE(\initial_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[0]),
        .Q(\initial_delay_reg_n_0_[0] ),
        .R(clear));
  FDRE \initial_delay_reg[1] 
       (.C(CLK),
        .CE(\initial_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[1]),
        .Q(\initial_delay_reg_n_0_[1] ),
        .R(clear));
  FDRE \initial_delay_reg[2] 
       (.C(CLK),
        .CE(\initial_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[2]),
        .Q(\initial_delay_reg_n_0_[2] ),
        .R(clear));
  FDRE \initial_delay_reg[3] 
       (.C(CLK),
        .CE(\initial_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[3]),
        .Q(\initial_delay_reg_n_0_[3] ),
        .R(clear));
  FDRE \initial_delay_reg[4] 
       (.C(CLK),
        .CE(\initial_delay[4]_i_2_n_0 ),
        .D(initial_delay__0[4]),
        .Q(\initial_delay_reg_n_0_[4] ),
        .R(clear));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* CAPACITANCE = "DONT_CARE" *) 
  (* IBUF_DELAY_VALUE = "0" *) 
  (* XILINX_LEGACY_PRIM = "IBUFGDS" *) 
  IBUFDS #(
    .IOSTANDARD("DEFAULT")) 
    iob_clk_in
       (.I(clk_hs_rxp),
        .IB(clk_hs_rxn),
        .O(rx_clk_in_p));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("IFD"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(1),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    iserdes_cm
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(rst_iserdes_reg_0),
        .CLKB(CLKB0),
        .CLKDIV(CLK),
        .CLKDIVP(1'b0),
        .D(rx_clk_in_p),
        .DDLY(rx_clk_in_pd),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(rx_clk_in_pc),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(NLW_iserdes_cm_OFB_UNCONNECTED),
        .Q1(iserdes_cm_n_1),
        .Q2(iserdes_cm_n_2),
        .Q3(iserdes_cm_n_3),
        .Q4(iserdes_cm_n_4),
        .Q5(NLW_iserdes_cm_Q5_UNCONNECTED),
        .Q6(NLW_iserdes_cm_Q6_UNCONNECTED),
        .Q7(NLW_iserdes_cm_Q7_UNCONNECTED),
        .Q8(NLW_iserdes_cm_Q8_UNCONNECTED),
        .RST(rst_iserdes__0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(NLW_iserdes_cm_SHIFTOUT1_UNCONNECTED),
        .SHIFTOUT2(NLW_iserdes_cm_SHIFTOUT2_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_DIFF_OUT #(
    .IOSTANDARD("DEFAULT")) 
    \loop0[0].data_in 
       (.I(data_hs_rxp[0]),
        .IB(data_hs_rxn[0]),
        .O(rx_data_in_p_0),
        .OB(rx_data_in_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \loop0[0].idelay_m 
       (.C(CLK),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(p_9_out),
        .CNTVALUEOUT({\loop0[0].idelay_m_n_1 ,\loop0[0].idelay_m_n_2 ,\loop0[0].idelay_m_n_3 ,\loop0[0].idelay_m_n_4 ,\loop0[0].idelay_m_n_5 }),
        .DATAIN(1'b0),
        .DATAOUT(rx_data_in_md_0),
        .IDATAIN(rx_data_in_p_0),
        .INC(1'b0),
        .LD(1'b1),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \loop0[0].idelay_s 
       (.C(CLK),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(p_8_out),
        .CNTVALUEOUT({\loop0[0].idelay_s_n_1 ,\loop0[0].idelay_s_n_2 ,\loop0[0].idelay_s_n_3 ,\loop0[0].idelay_s_n_4 ,\loop0[0].idelay_s_n_5 }),
        .DATAIN(1'b0),
        .DATAOUT(rx_data_in_sd_0),
        .IDATAIN(rx_data_in_n_0),
        .INC(1'b0),
        .LD(1'b1),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("IFD"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(1),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    \loop0[0].iserdes_m 
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(rst_iserdes_reg_0),
        .CLKB(CLKB0),
        .CLKDIV(CLK),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(rx_data_in_md_0),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(\NLW_loop0[0].iserdes_m_O_UNCONNECTED ),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(\NLW_loop0[0].iserdes_m_OFB_UNCONNECTED ),
        .Q1(p_38_out),
        .Q2(p_37_out),
        .Q3(p_36_out),
        .Q4(p_35_out),
        .Q5(p_34_out),
        .Q6(p_33_out),
        .Q7(p_32_out),
        .Q8(p_31_out),
        .RST(rst_iserdes__0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_loop0[0].iserdes_m_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_loop0[0].iserdes_m_SHIFTOUT2_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("IFD"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(1),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    \loop0[0].iserdes_s 
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(rst_iserdes_reg_0),
        .CLKB(CLKB0),
        .CLKDIV(CLK),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(rx_data_in_sd_0),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(\NLW_loop0[0].iserdes_s_O_UNCONNECTED ),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(\NLW_loop0[0].iserdes_s_OFB_UNCONNECTED ),
        .Q1(p_29_out),
        .Q2(p_28_out),
        .Q3(p_27_out),
        .Q4(p_26_out),
        .Q5(p_25_out),
        .Q6(p_24_out),
        .Q7(p_23_out),
        .Q8(p_22_out),
        .RST(rst_iserdes__0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_loop0[0].iserdes_s_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_loop0[0].iserdes_s_SHIFTOUT2_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_DIFF_OUT #(
    .IOSTANDARD("DEFAULT")) 
    \loop0[1].data_in 
       (.I(data_hs_rxp[1]),
        .IB(data_hs_rxn[1]),
        .O(rx_data_in_p_1),
        .OB(rx_data_in_n_1));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \loop0[1].idelay_m 
       (.C(CLK),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(p_4_out),
        .CNTVALUEOUT({\loop0[1].idelay_m_n_1 ,\loop0[1].idelay_m_n_2 ,\loop0[1].idelay_m_n_3 ,\loop0[1].idelay_m_n_4 ,\loop0[1].idelay_m_n_5 }),
        .DATAIN(1'b0),
        .DATAOUT(rx_data_in_md_1),
        .IDATAIN(rx_data_in_p_1),
        .INC(1'b0),
        .LD(1'b1),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* IODELAY_GROUP = "mipi_dphy_idly_group" *) 
  (* SIM_DELAY_D = "0" *) 
  IDELAYE2 #(
    .CINVCTRL_SEL("FALSE"),
    .DELAY_SRC("IDATAIN"),
    .HIGH_PERFORMANCE_MODE("TRUE"),
    .IDELAY_TYPE("VAR_LOAD"),
    .IDELAY_VALUE(0),
    .IS_C_INVERTED(1'b0),
    .IS_DATAIN_INVERTED(1'b0),
    .IS_IDATAIN_INVERTED(1'b0),
    .PIPE_SEL("FALSE"),
    .REFCLK_FREQUENCY(200.000000),
    .SIGNAL_PATTERN("DATA")) 
    \loop0[1].idelay_s 
       (.C(CLK),
        .CE(1'b0),
        .CINVCTRL(1'b0),
        .CNTVALUEIN(p_3_out),
        .CNTVALUEOUT({\loop0[1].idelay_s_n_1 ,\loop0[1].idelay_s_n_2 ,\loop0[1].idelay_s_n_3 ,\loop0[1].idelay_s_n_4 ,\loop0[1].idelay_s_n_5 }),
        .DATAIN(1'b0),
        .DATAOUT(rx_data_in_sd_1),
        .IDATAIN(rx_data_in_n_1),
        .INC(1'b0),
        .LD(1'b1),
        .LDPIPEEN(1'b0),
        .REGRST(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("IFD"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(1),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    \loop0[1].iserdes_m 
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(rst_iserdes_reg_0),
        .CLKB(CLKB0),
        .CLKDIV(CLK),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(rx_data_in_md_1),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(\NLW_loop0[1].iserdes_m_O_UNCONNECTED ),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(\NLW_loop0[1].iserdes_m_OFB_UNCONNECTED ),
        .Q1(p_20_out),
        .Q2(p_19_out),
        .Q3(p_18_out),
        .Q4(p_17_out),
        .Q5(p_16_out),
        .Q6(p_15_out),
        .Q7(p_14_out),
        .Q8(p_13_out),
        .RST(rst_iserdes__0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_loop0[1].iserdes_m_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_loop0[1].iserdes_m_SHIFTOUT2_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  ISERDESE2 #(
    .DATA_RATE("DDR"),
    .DATA_WIDTH(8),
    .DYN_CLKDIV_INV_EN("FALSE"),
    .DYN_CLK_INV_EN("FALSE"),
    .INIT_Q1(1'b0),
    .INIT_Q2(1'b0),
    .INIT_Q3(1'b0),
    .INIT_Q4(1'b0),
    .INTERFACE_TYPE("NETWORKING"),
    .IOBDELAY("IFD"),
    .IS_CLKB_INVERTED(1'b1),
    .IS_CLKDIVP_INVERTED(1'b0),
    .IS_CLKDIV_INVERTED(1'b0),
    .IS_CLK_INVERTED(1'b0),
    .IS_D_INVERTED(1'b0),
    .IS_OCLKB_INVERTED(1'b0),
    .IS_OCLK_INVERTED(1'b0),
    .NUM_CE(1),
    .OFB_USED("FALSE"),
    .SERDES_MODE("MASTER"),
    .SRVAL_Q1(1'b0),
    .SRVAL_Q2(1'b0),
    .SRVAL_Q3(1'b0),
    .SRVAL_Q4(1'b0)) 
    \loop0[1].iserdes_s 
       (.BITSLIP(1'b0),
        .CE1(1'b1),
        .CE2(1'b1),
        .CLK(rst_iserdes_reg_0),
        .CLKB(CLKB0),
        .CLKDIV(CLK),
        .CLKDIVP(1'b0),
        .D(1'b0),
        .DDLY(rx_data_in_sd_1),
        .DYNCLKDIVSEL(1'b0),
        .DYNCLKSEL(1'b0),
        .O(\NLW_loop0[1].iserdes_s_O_UNCONNECTED ),
        .OCLK(1'b0),
        .OCLKB(1'b0),
        .OFB(\NLW_loop0[1].iserdes_s_OFB_UNCONNECTED ),
        .Q1(p_11_out),
        .Q2(p_10_out),
        .Q3(\loop0[1].iserdes_s_n_3 ),
        .Q4(\loop0[1].iserdes_s_n_4 ),
        .Q5(p_7_out),
        .Q6(p_6_out),
        .Q7(p_5_out),
        .Q8(\loop0[1].iserdes_s_n_8 ),
        .RST(rst_iserdes__0),
        .SHIFTIN1(1'b0),
        .SHIFTIN2(1'b0),
        .SHIFTOUT1(\NLW_loop0[1].iserdes_s_SHIFTOUT1_UNCONNECTED ),
        .SHIFTOUT2(\NLW_loop0[1].iserdes_s_SHIFTOUT2_UNCONNECTED ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  BUFR #(
    .BUFR_DIVIDE("4"),
    .SIM_DEVICE("7SERIES")) 
    \loop2c.bufr_mmcm_x1 
       (.CE(1'b1),
        .CLR(1'b0),
        .I(rx_clk_in_pc),
        .O(CLK));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_dly_ctrl_wrap \loop3[0].mipi_dphy_v4_1_3_dc_inst 
       (.CLK(CLK),
        .D({p_38_out,p_37_out,p_36_out,p_35_out,p_34_out,p_33_out,p_32_out,p_31_out}),
        .Q(p_9_out),
        .data_in_to_device(data_in_to_device[7:0]),
        .\m_delay_val_int_reg[4]_0 ({\initial_delay_reg_n_0_[4] ,\initial_delay_reg_n_0_[3] ,\initial_delay_reg_n_0_[2] ,\initial_delay_reg_n_0_[1] ,\initial_delay_reg_n_0_[0] }),
        .not_rx_lckd_intd4(not_rx_lckd_intd4),
        .p_12_in(p_12_in),
        .p_22_out(p_22_out),
        .p_23_out(p_23_out),
        .p_24_out(p_24_out),
        .p_25_out(p_25_out),
        .p_26_out(p_26_out),
        .p_27_out(p_27_out),
        .p_28_out(p_28_out),
        .p_29_out(p_29_out),
        .\s_delay_val_int_reg[4]_0 (p_8_out));
  decalper_eb_ot_sdeen_pot_pi_dehcac_xnilix_mipi_dphy_v4_1_3_dly_ctrl_wrap_0 \loop3[1].mipi_dphy_v4_1_3_dc_inst 
       (.CLK(CLK),
        .D({p_20_out,p_19_out,p_18_out,p_17_out,p_16_out,p_15_out,p_14_out,p_13_out}),
        .Q(p_4_out),
        .data_in_to_device(data_in_to_device[15:8]),
        .\m_delay_val_int_reg[4]_0 ({\initial_delay_reg_n_0_[4] ,\initial_delay_reg_n_0_[3] ,\initial_delay_reg_n_0_[2] ,\initial_delay_reg_n_0_[1] ,\initial_delay_reg_n_0_[0] }),
        .not_rx_lckd_intd4(not_rx_lckd_intd4),
        .p_10_out(p_10_out),
        .p_11_out(p_11_out),
        .p_12_in(p_12_in),
        .p_5_out(p_5_out),
        .p_6_out(p_6_out),
        .p_7_out(p_7_out),
        .\s_delay_val_int_reg[4]_0 (p_3_out),
        .\sdataouta_reg[4]_0 (\loop0[1].iserdes_s_n_4 ),
        .\sdataouta_reg[5]_0 (\loop0[1].iserdes_s_n_3 ),
        .\sdataoutc_reg[7]_0 (\loop0[1].iserdes_s_n_8 ));
  LUT1 #(
    .INIT(2'h1)) 
    \m_count[0]_i_1 
       (.I0(\m_count_reg_n_0_[0] ),
        .O(\m_count[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \m_count[1]_i_1 
       (.I0(\m_count_reg_n_0_[0] ),
        .I1(\m_count_reg_n_0_[1] ),
        .O(m_count[1]));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \m_count[2]_i_1 
       (.I0(\m_count_reg_n_0_[2] ),
        .I1(\m_count_reg_n_0_[1] ),
        .I2(\m_count_reg_n_0_[0] ),
        .O(m_count[2]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT4 #(
    .INIT(16'h6CCC)) 
    \m_count[3]_i_1 
       (.I0(\m_count_reg_n_0_[2] ),
        .I1(\m_count_reg_n_0_[3] ),
        .I2(\m_count_reg_n_0_[1] ),
        .I3(\m_count_reg_n_0_[0] ),
        .O(m_count[3]));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT5 #(
    .INIT(32'h6CCCCCCC)) 
    \m_count[4]_i_1 
       (.I0(\m_count_reg_n_0_[2] ),
        .I1(\m_count_reg_n_0_[4] ),
        .I2(\m_count_reg_n_0_[3] ),
        .I3(\m_count_reg_n_0_[1] ),
        .I4(\m_count_reg_n_0_[0] ),
        .O(m_count[4]));
  LUT6 #(
    .INIT(64'h78F0F0F0F0F0F0F0)) 
    \m_count[5]_i_1 
       (.I0(\m_count_reg_n_0_[2] ),
        .I1(\m_count_reg_n_0_[4] ),
        .I2(\m_count_reg_n_0_[5] ),
        .I3(\m_count_reg_n_0_[3] ),
        .I4(\m_count_reg_n_0_[1] ),
        .I5(\m_count_reg_n_0_[0] ),
        .O(m_count[5]));
  FDCE \m_count_reg[0] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(\m_count[0]_i_1_n_0 ),
        .Q(\m_count_reg_n_0_[0] ));
  FDCE \m_count_reg[1] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(m_count[1]),
        .Q(\m_count_reg_n_0_[1] ));
  FDCE \m_count_reg[2] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(m_count[2]),
        .Q(\m_count_reg_n_0_[2] ));
  FDCE \m_count_reg[3] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(m_count[3]),
        .Q(\m_count_reg_n_0_[3] ));
  FDCE \m_count_reg[4] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(m_count[4]),
        .Q(\m_count_reg_n_0_[4] ));
  FDCE \m_count_reg[5] 
       (.C(CLK),
        .CE(\__0/i__n_0 ),
        .CLR(AR),
        .D(m_count[5]),
        .Q(\m_count_reg_n_0_[5] ));
  LUT1 #(
    .INIT(2'h1)) 
    not_rx_lckd_intd4_i_1
       (.I0(rx_lckd_intd4__0),
        .O(not_rx_lckd_intd4_i_1_n_0));
  FDSE not_rx_lckd_intd4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(not_rx_lckd_intd4_i_1_n_0),
        .Q(not_rx_lckd_intd4),
        .S(clear));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    rst_iserdes
       (.I0(\m_count_reg_n_0_[1] ),
        .I1(\m_count_reg_n_0_[4] ),
        .I2(\m_count_reg_n_0_[0] ),
        .I3(\m_count_reg_n_0_[5] ),
        .I4(\m_count_reg_n_0_[2] ),
        .I5(\m_count_reg_n_0_[3] ),
        .O(rst_iserdes_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    rst_iserdes_i_1
       (.I0(rst_iserdes__0),
        .I1(rst_iserdes_n_0),
        .O(rst_iserdes_i_1_n_0));
  FDPE rst_iserdes_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rst_iserdes_i_1_n_0),
        .PRE(AR),
        .Q(rst_iserdes__0));
  LUT5 #(
    .INIT(32'hFFFF0020)) 
    rx_lckd_intd4_i_1
       (.I0(\initial_delay[4]_i_4_n_0 ),
        .I1(zflag),
        .I2(state2_count_reg[4]),
        .I3(\initial_delay[4]_i_5_n_0 ),
        .I4(rx_lckd_intd4__0),
        .O(rx_lckd_intd4_i_1_n_0));
  FDRE rx_lckd_intd4_reg
       (.C(CLK),
        .CE(1'b1),
        .D(rx_lckd_intd4_i_1_n_0),
        .Q(rx_lckd_intd4__0),
        .R(clear));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \state2_count[0]_i_1 
       (.I0(state2_count_reg[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \state2_count[1]_i_1 
       (.I0(state2_count_reg[0]),
        .I1(state2_count_reg[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \state2_count[2]_i_1 
       (.I0(state2_count_reg[0]),
        .I1(state2_count_reg[1]),
        .I2(state2_count_reg[2]),
        .O(\state2_count[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \state2_count[3]_i_1 
       (.I0(state2_count_reg[1]),
        .I1(state2_count_reg[0]),
        .I2(state2_count_reg[2]),
        .I3(state2_count_reg[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \state2_count[4]_i_1 
       (.I0(state2_count_reg[2]),
        .I1(state2_count_reg[0]),
        .I2(state2_count_reg[1]),
        .I3(state2_count_reg[3]),
        .I4(state2_count_reg[4]),
        .O(p_0_in[4]));
  FDRE \state2_count_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in[0]),
        .Q(state2_count_reg[0]),
        .R(clear));
  FDRE \state2_count_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in[1]),
        .Q(state2_count_reg[1]),
        .R(clear));
  FDRE \state2_count_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .D(\state2_count[2]_i_1_n_0 ),
        .Q(state2_count_reg[2]),
        .R(clear));
  FDRE \state2_count_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in[3]),
        .Q(state2_count_reg[3]),
        .R(clear));
  FDRE \state2_count_reg[4] 
       (.C(CLK),
        .CE(1'b1),
        .D(p_0_in[4]),
        .Q(state2_count_reg[4]),
        .R(clear));
  LUT4 #(
    .INIT(16'hFF08)) 
    su_locked_i_1
       (.I0(\m_count_reg_n_0_[1] ),
        .I1(\m_count_reg_n_0_[0] ),
        .I2(su_locked_i_2_n_0),
        .I3(su_locked),
        .O(su_locked_i_1_n_0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    su_locked_i_2
       (.I0(\m_count_reg_n_0_[4] ),
        .I1(\m_count_reg_n_0_[5] ),
        .I2(\m_count_reg_n_0_[2] ),
        .I3(\m_count_reg_n_0_[3] ),
        .O(su_locked_i_2_n_0));
  FDCE su_locked_reg
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(su_locked_i_1_n_0),
        .Q(su_locked));
  LUT4 #(
    .INIT(16'hFFB0)) 
    zflag_i_1
       (.I0(\initial_delay[4]_i_5_n_0 ),
        .I1(state2_count_reg[4]),
        .I2(zflag),
        .I3(zflag_i_2_n_0),
        .O(zflag_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    zflag_i_2
       (.I0(zflag_i_3_n_0),
        .I1(state2_count_reg[1]),
        .I2(state2_count_reg[0]),
        .I3(state2_count_reg[3]),
        .I4(state2_count_reg[2]),
        .O(zflag_i_2_n_0));
  LUT6 #(
    .INIT(64'hDFFFFFFFFFFFFFFF)) 
    zflag_i_3
       (.I0(\c_sweep_delay_reg_n_0_[3] ),
        .I1(\c_sweep_delay_reg_n_0_[4] ),
        .I2(\c_sweep_delay_reg_n_0_[0] ),
        .I3(\c_sweep_delay_reg_n_0_[1] ),
        .I4(\c_sweep_delay_reg_n_0_[2] ),
        .I5(state2_count_reg[4]),
        .O(zflag_i_3_n_0));
  FDRE zflag_reg
       (.C(CLK),
        .CE(1'b1),
        .D(zflag_i_1_n_0),
        .Q(zflag),
        .R(clear));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
